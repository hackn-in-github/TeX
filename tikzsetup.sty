%Setup
\ProvidesPackage{tikzsetup}[12/31/2015 Ver.0.0997]%
%\Zahyoの括弧の調整10/28/2013
\newif\ifenum
\newif\ifdegree
\degreetrue
\newif\ifMarkKeepWidth
\newif\ifMarkSpc
\MarkKeepWidthtrue
\MarkSpctrue
%\input{pictureplace}%
\def\PIC{/home/tooru/Work/picture/iijima/}%
\def\BMP{/home/tooru/Work/picture/iijima/bmp/}%
\def\EPS{/home/tooru/Work/picture/iijima/eps/}%
%\RequirePackage{amsmath}%
\RequirePackage{array}%
\RequirePackage{hhline}%
\RequirePackage{itembbox}%
\RequirePackage{cases}%
%%%\myPerlLib{my.pl;nCr.pl}%
\everymath{\displaystyle}%
% 版面の設定
\def\baselinestretch{1.2}%行間をデフォルトの1.2倍に
\headsep=4pt% ヘッタの bottom と本文領域の top の間隔を 10pt とする．
\headheight=21pt% ヘッタの高さを 15pt とする．
\topmargin=-25pt% -(\headsep+\headheight) 本文領域の top を用紙の上から 1in に設定する．
\oddsidemargin=-10pt% 奇数ページの本文領域を 10pt 左へ移動．
\evensidemargin=-10pt% 偶数ページの本文領域を 10pt 左へ移動．
\marginparwidth=30pt% 傍注の幅を 30pt にする．(はっきりいって使わない)
\dimen0=\paperwidth
\advance\dimen0 by-2in% \paperwidth から 2in 引いて
\advance\dimen0 by20pt% 10pt 加えたものを
%\@ifundefined{rensuji}{\textwidth=\dimen0}{\textheight=\dimen0}
\textwidth=\dimen0% \textwidth とする．
\dimen0=\paperheight
\advance\dimen0 by-2in% \paperheight から 2in 引いたものを
%\@ifundefined{rensuji}{\textheight=\dimen0}{\advance\dimen0 by-2.5mm \textwidth=\dimen0}
\textheight=\dimen0% \textheight とする．
%ページ番号が入る部分を作成
%記述部分から30pt下げる
\footskip=30pt\relax
% float パラメータの調整
% 浮動体がページ上部に占有できる部分の版面に対する割合の上限値
\def\topfraction{0.9}% デフォルト 0.7
% 浮動体がページ下部に占有できる部分の反面に対する割合の上限値
\def\bottomfraction{0.9}% デフォルト 0.3
% 本文が占有できる部分の版面に対する割合の下限値
\def\textfraction{0.1}% デフォルト 0.2
% 浮動体ページの浮動体の占める割合の下限値
\def\floatpagefraction{0.9}% デフォルト 0.5
% eqnarray などの等号の左右の間隔default:5pt
\setlength{\arraycolsep}{1.5pt}
% amsmath 利用時にdisplay環境での改頁を可能にする
\allowdisplaybreaks
\def\Dotfill{\@ifnextchar[{\@Dotfill}{\@Dotfill[.4zh]}}%
\def\@Dotfill[#1]{\leaders\hbox to.33333zw{\hss\raise#1\hbox{.}\hss}\hfill}%
%\@ifstarの+版と-版 20150614 削除
% \mathpalette の \Mark(\Center) 対応策
\def\mathpalette#1#2{\mathchoice{%
   \StopCenter#1\displaystyle{#2}\StartCenter}%
  {\StopCenter#1\displaystyle{#2}\StartCenter}%
  {\StopCenter#1\scriptstyle{#2}\StartCenter}%
  {\StopCenter#1\scriptscriptstyle{#2}\StartCenter}%
  \setbox0=\hbox{$#1\textstyle{#2}$}}%
%
\def\plainroot@#1\of#2{\setbox\rootbox\hbox{%
    $\m@th\scriptscriptstyle{#1}$}%
    \mathchoice{\StopCenter\r@@t\displaystyle{#2}\StartCenter}{%
    \StopCenter\r@@t\textstyle{#2}\StartCenter}{%
    \StopCenter\r@@t\scriptstyle{#2}\StartCenter}{%
    \StopCenter\r@@t\scriptscriptstyle{#2}\StartCenter}%
%    \setbox0=\hbox{$#1\r@@t\textstyle{#2}$}%
    \setbox0=\hbox{$\r@@t\textstyle{#2}$}%
    \egroup}%
% 前残し 20150614 削除
% ページ番号前後に横線
\def\ps@myfoot{\let\@mkboth\@gobbletwo
    \def\@oddhead{}%
    \def\@oddfoot{\hfil{\small--\enskip\arabic{page}\enskip--}\hfil}%
    \def\@evenhead{}%
    \def\@evenfoot{\hfil{\small--\enskip\arabic{page}\enskip--}\hfil}}%
%
% テキスト用 20150615 削除
% Number をヘッダに
\def\@HeadNumberHead{}%
\def\ps@Number{%
 \def\@oddhead{\@HeadNumberHead\hfil}%
 \def\@evenhead{\@oddhead}%
 \def\@oddfoot{\hfil--\enskip\thepage\enskip--\hfil}%
 \def\@evenfoot{\@oddfoot}}%
%
\def\ps@Numtext{%
 \def\@oddhead{\@HeadNumberHead\hfil}%
 \def\@evenhead{\@oddhead}%
 \def\@oddfoot{\hfil{\large\bf--\enskip\thepage\enskip--}\hfil}%
 \def\@evenfoot{\@oddfoot}}%
%
\def\HeadNumber{%
% \@ifstar{\clearpage\addtocounter{BAN}{1}\setcounter{Ban}{1}\@HeadNumber}%
 \@ifstar{\clearpage\stepcounter{BAN}\stepcounter{Ban}\@HeadNumber}%
% {\clearpage\addtocounter{Ban}{1}\@HeadNumber}}
 {\clearpage\stepcounter{Ban}\@HeadNumber}}%
\def\@HeadNumber{\@ifnextchar({\@@HeadNumber}{\@@HeadNumber(\theBAN-\theBan)}}%
\def\@@HeadNumber(#1-#2){%
 \setcounter{BAN}{#1}\setcounter{Ban}{#2}%
 \def\@HeadNumberHead{\No{#1}{#2}}%
% \ifText% 20150614 削除
%  \thispagestyle{Numtext}%
% \else%
  \thispagestyle{Number}%
% \fi%
 }%
%
\def\アイウ#1{\expandafter\ifcase\csname c@#1\endcsname \or %
ア\or イ\or ウ\or エ\or オ\or カ\or キ\or ク\or ケ\or コ\or%
サ\or シ\or ス\or セ\or ソ\or タ\or チ\or ツ\or テ\or ト\or%
ナ\or ニ\or ヌ\or ネ\or ノ\or ハ\or ヒ\or フ\or ヘ\or ホ\or%
マ\or ミ\or ム\or メ\or モ\or ヤ\or ユ\or ヨ\or%
ラ\or リ\or ル\or レ\or ロ\or ワ\or ヰ\or ヱ\or ヲ\or ン\else\@ctrerr\fi%
}%
%
\def\あいう#1{\expandafter\ifcase\csname c@#1\endcsname \or %
あ\or い\or う\or え\or お\or か\or き\or く\or け\or こ\or%
さ\or し\or す\or せ\or そ\or た\or ち\or つ\or て\or と\or%
な\or に\or ぬ\or ね\or の\or は\or ひ\or ふ\or へ\or ほ\or%
ま\or み\or む\or め\or も\or や\or ゆ\or よ\or%
ら\or り\or る\or れ\or ろ\or わ\or ゐ\or ゑ\or を\or ん\else\@ctrerr\fi%
}%
%
\def\いろは#1{\expandafter\ifcase\csname c@#1\endcsname \or %
い\or ろ\or は\or に\or ほ\or へ\or と\or ち\or り\or ぬ\or る\or を\or%
わ\or か\or よ\or た\or れ\or そ\or つ\or ね\or な\or ら\or む\or %
う\or ゐ\or の\or お\or く\or や\or ま\or け\or ふ\or こ\or え\or て\or%
あ\or さ\or き\or ゆ\or め\or み\or し\or ゑ\or ひ\or も\or せ\or す\or ん\else\@ctrerr\fi%
}%
%
\def\イロハ#1{\expandafter\ifcase\csname c@#1\endcsname \or %
イ\or ロ\or ハ\or ニ\or ホ\or ヘ\or ト\or チ\or リ\or ヌ\or ル\or ヲ\or%
ワ\or カ\or ヨ\or タ\or レ\or ソ\or ツ\or ネ\or ナ\or ラ\or ム\or%
ウ\or ヰ\or ノ\or オ\or ク\or ヤ\or マ\or ケ\or フ\or コ\or エ\or テ\or%
ア\or サ\or キ\or ユ\or メ\or ミ\or シ\or ヱ\or ヒ\or モ\or セ\or ス\or ン\else\@ctrerr\fi%
}%
%
\def\Week#1{\expandafter\ifcase\csname c@#1\endcsname\or 日\or 月\or 火\or 水\or 木\or 金\or 土\fi}%
%
\newif\ifCenterWrite
%
\@ifundefined{@tempcntc}{\newcount\@tempcntc}{}%
\@ifundefined{c@tempcnta}{\newcounter{tempcnta}}{}%
\@ifundefined{c@tempcntb}{\newcounter{tempcntb}}{}%
\@ifundefined{c@tempcntc}{\newcounter{tempcntc}}{}%
\@ifundefined{theBAN}{\newcounter{BAN}}{}%
\@ifundefined{theBan}{\newcounter{Ban}[BAN]}{}%
\@ifundefined{theseireki}{\newcounter{seireki}}{}%
\def\theseireki{\arabic{seireki}}%
\@ifundefined{theTEMPCTR}{\newcounter{TEMPCTR}}{}%
\@ifundefined{theTEMP@CTR}{\newcounter{TEMP@CTR}}{}%
\newcounter{CenterCTR}% \Center 用カウンタ
\newcounter{Enumdepth}%
\newcounter{eqnum}[Ban]%
%% Calendar 関連を削除 20150614
\newcounter{MarkResetTimes}%
%\newdimen\@tempdima
%\newdimen\@tempdimb
\newdimen\@tempdimc
\newdimen\CenterLine
\newdimen\refCenterLine
\CenterLine=1pt\relax% 囲み罫に使う線の幅(\Center)
\refCenterLine=.4pt\relax% 相互参照の囲み罫に使う線の幅(\refMark)
\newdimen\CenterSpc
\CenterSpc=3.5pt\relax% 囲み罫と中の文字との幅(\Center)
\newdimen\CenterBoxWidth
\CenterBoxWidth=3zw\relax% 囲み罫の幅(\Center)
\newskip\CenterSkip
\CenterSkip=2pt plus 1pt minus 1pt\relax% 隣の文字との間隔
\newskip\AnswerSkip
\AnswerSkip=12pt plus 6pt minus 3pt\relax% 答えの間隔
\newdimen\FboxLine
\FboxLine=.4pt\relax% \Fbox に使う線の幅
\newdimen\FboxXSpc
\FboxXSpc=2pt\relax% \Fbox の線と文字の間隔(横方向)
\newdimen\FboxYSpc
\FboxYSpc=2pt\relax% \Fbox の線と文字の間隔(縦方向)
\newskip\p@renwd
\p@renwd=7.5pt\relax
%
\def\theenumi{\arabic{enumi}}%
%%第２レベルの項目番号を小文字のローマ数字で
\def\theenumii{\roman{enumii}}%
%%第３レベルの項目番号を小文字のアルファベットで
\def\theenumiii{\alph{enumiii}}%
%
\parindent1zw\relax
\unitlength1cm\relax
%
% 原稿ファイルの作成曜日を出力
\def\曜日{{\count0=\year \count1=\month%
 \ifnum\count1<3\relax%
  \advance \count0 by -1 \advance \count1 by 12\relax%
 \fi%
 \multiply \count1 by 13\relax%
 \advance \count1 by 8 \divide \count1 by 5\relax%
 \advance \count1 by \count0 \divide \count0 by 4\relax%
 \advance \count1 by \count0 \divide \count0 by 25\relax%
 \advance \count1 by -\count0 \divide \count0 by 4\relax%
 \advance \count1 by \count0 \advance \count1 by \day\relax%
 \count0=\count1 \divide \count1 by 7\relax%
 \multiply \count1 by 7 \advance \count0 by -\count1\relax%
 \ifcase\count0 日\or 月\or 火\or 水\or 木\or 金\or 土\fi%
}}%
%
%% 平行
\def\para{\nobreak\,\nobreak/\nobreak\hspace{-0.75mm}\nobreak/\nobreak\,\nobreak}%
\def\para{/\kern0pt/}%
\def\para{\mathrel{/\kern0pt/}}
%
% \pileup{#1}{#2}
% #1 と $\#2 を重ねる
\def\pileup#1#2{%
 \leavevmode%
 \setbox0=\hbox{#1}%
 \setbox1=\hbox{#2}%
 \ifdim\wd0<\wd1\relax%
  \dimen0=\wd1\relax%
 \else%
  \dimen0=\wd0\relax%
 \fi%
 \hbox to\dimen0{\hss#1\hss}\kern-\dimen0\hbox to\dimen0{\hss#2\hss}%
}%
%% 等号の否定
\def\Noteq{\mathrel{\pileup{=}{$\backslash$}}}%
%% 平行の否定
\def\Notpara{\ensuremath{\mathrel{\pileup{$\para$}{$\backslash$}}}}%
%% 十分の否定
\def\NotLongrightarrow{\mathrel{\pileup{$\Longrightarrow$}{$\backslash$}}}%
%% 必要の否定
\def\NotLongleftarrow{\mathrel{\pileup{$\Longleftarrow$}{$\backslash$}}}%
%% 必要十分の否定
\def\NotLongleftrightarrow{\mathrel{\pileup{$\Longleftrightarrow$}{$\backslash$}}}%
%%
\def\Notsubset{\mathrel{\pileup{$\subset$}{$\backslash$}}}%
%%
\def\notsupset{\mathrel{\pileup{$\supset$}{$\backslash$}}}%
%%
\def\notsubseteqq{\mathrel{\pileup{$\subseteqq$}{$\backslash$}}}%
%%
\def\notsupseteqq{\mathrel{\pileup{$\supseteqq$}{$\backslash$}}}%
%%
\def\Notin{\mathrel{\pileup{$\in$}{$\backslash$}}}%
%%共役複素数
\def\Overline#1{\ensuremath{\overline{\vphantom{M}#1}}}%
%
%%かっこ類 \@brace 等削除 20150614 -> \abs のために復活
% \@braces{#1}{#2}[#3]{#4}
% #1:左の括弧,#2:右の括弧,#3:options,#4:括弧をつける内容
% option:braceupper=括弧の上げ幅(0pt),bracemag=括弧の倍率(1),
%        display=括弧をつける位置(),upper=内容を含めた括弧の上げ幅
\define@key{Brace}{braceupper}{\def\@BraceUpper{#1}}%
\define@key{Brace}{bracemag}{\def\@BraceMag{#1}}%
\define@key{Brace}{display}{\def\@BraceDis{#1}}%
\define@key{Brace}{upper}{\def\@Brace@AllUpper{#1}}%
\def\@braces#1#2{\@ifnextchar[{\@@braces{#1}{#2}}{\@@braces{#1}{#2}[]}}
\def\@@braces#1#2[#3]#4{%
 \bgroup
  \def\@BraceUpper{0pt}%
  \def\@BraceMag{1}%
  \def\@BraceDis{}%
  \def\@Brace@AllUpper{0pt}%
  \setkeys{Brace}{#3}%
  \leavevmode%
  \ifmmode%
   \def\@bracesmode{$}%
   \setbox0=\hbox{\StopCenter$#4$\StartCenter}%
   \setbox1=\hbox{\StopCenter$\left(#4\right)$\StartCenter}%
  \else%
   \def\@bracesmode{\empty}%
   \setbox0=\hbox{\StopCenter#4\StartCenter}%
   \setbox1=\hbox{\StopCenter$\left(\hbox{#4}\right)$\StartCenter}%
  \fi%
  \@tempdima=\@BraceMag\ht0\relax
  \@tempdimb=\@BraceMag\dp0\relax
  \@tempdimc=\ht1\relax%
  \advance\@tempdimc by-\dp1\relax%
  \advance\@tempdimc by-\ht0\relax%
  \advance\@tempdimc by\dp0\relax%
  \divide\@tempdimc by2\relax%
  \raise\@Brace@AllUpper%
  \hbox{%
   \if\@BraceDis r\relax
   \else
    \lower\@tempdimc
    \hbox{%
     \raise\@BraceUpper
     \hbox{%
      $\left#1\raise\@tempdimc
      \hbox{%
       \vrule width0pt height\@tempdima depth\@tempdimb
      }%
      \right.$%
     }%
    }%
   \fi%
   \kern-.75pt\@bracesmode#4\@bracesmode\kern-.75pt%
   \if\@BraceDis l\relax
   \else
   \lower\@tempdimc
   \hbox{%
    \raise\@BraceUpper
    \hbox{%
     $\left.\raise\@tempdimc
     \hbox{%
      \vrule width0pt height\@tempdima depth\@tempdimb
     }%
    \right#2$%
    }%
   }%
   \fi
  }%
 \egroup
}%
% 絶対値||
\def\abs#1{%
 \bgroup
 \setbox0=\hbox{gh}%
 \@tempdima=\ht0\relax
 \@tempdimb=\dp0\relax
 \advance\@tempdima by.2pt\relax
 \advance\@tempdimb by.2pt\relax
 \@braces{|}{|}{\vrule height\@tempdima depth\@tempdimb width \z@ #1}%
 \egroup
}%
%% 分数の罫を伸ばす
\def\Frac#1#2{%
 \mathchoice{\StopCenter\displaystyle\frac{\,#1\,}{\,#2\,}\StartCenter}%
            {\StopCenter\displaystyle\frac{\,#1\,}{\,#2\,}\StartCenter}%
            {\StopCenter\scriptstyle\frac{#1}{#2}\StartCenter}%
            {\StopCenter\scriptscriptstyle\frac{#1}{#2}\StartCenter}%
            \setbox0=\hbox{$\frac{#1}{#2}$}%
}%
\def\deg{%
 \ifdegree%
  ^\circ%
 \else%
  \raise.65zh\hbox{%
   \unitlength1zh%
   \begin{picture}(.25,.25)(-.125,-.125)%
    \allinethickness{.6pt}%
    \En{(0,0)}{.125}%
   \end{picture}\,}%
 \fi%
}%
\def\Deg{%
 \ifdegree%
  ^{\raise5pt\hbox{\scriptsize$\circ$}}%
 \else%
  \,\raise1.125zh\hbox{%
   \unitlength1zh%
   \begin{picture}(.25,.25)(-.125,-.125)%
    \allinethickness{.6pt}%
    \En{(0,0)}{.125}%
   \end{picture}}%
 \fi%
}%
\def\deg{^{\circ}}%
%%アングル＋ローマン
% \Angle{OAB}
\def\Angle#1{\ensuremath{\angle\mathrm{#1}}}%
%%三角形
% \tr{ABC}
\def\tr#1{\ensuremath{\bigtriangleup{\mathrm{#1}}}}%
%% ピリオド以下を削除
\def\DelP#1{\expandafter\DelPeriod#1\@null}%
\def\DelPeriod#1.#2\@null{#1}%
%%パーミュテーション 20150614 削除 -> 計算部分を削除，表示部分を残す
\def\Permu#1#2{%
 {}_{#1}\mathrm{P}_{#2}%
}%
%%コンビネーション
% \Combi{6}{3}
\def\Combi#1#2{%
 {}_{#1}\mathrm{C}_{#2}%
}%
%%番号付け
% \No[#1]{#2}{#3}
% #1:options
% #2:章番号
% #3:問題番号
% options:thickness=罫線の太さ(1pt),widthmag=幅の倍率(1),
%         hyphenwidth=ハイフンの長さ(2.5mm),
%         boxwidth=章番号，問題番号の幅
\define@key{No}{thickness}{\def\@NoThick{#1}}%
\define@key{No}{widthmag}{\def\@NoWidth{#1}}%
\define@key{No}{hyphenwidth}{\def\@NoHyphenWidth{#1}}%
\define@key{No}{boxwidth}{\def\@NoBoxWidth{#1}}%
\def\No{\@ifnextchar[{\@No}{\@No[]}}%
\def\@No[#1]#2#3{%
 \bgroup
  \def\@NoThick{1pt}%
  \def\@NoWidth{1}%
  \def\@NoHyphenWidth{2.5mm}%
  \def\@NoBoxWidth{1.375zw}%
  \setkeys{No}{#1}%
  \suppressfloats[t]%
  \noindent
  \setbox1=\hbox{%
   \bfseries\Large
   \hbox to\@NoBoxWidth{%
    \hss#2\hss
   }%
   \setbox0=\hbox{#2}%
   \@tempdima=\ht0\relax
   \advance\@tempdima by-\@NoThick\relax
   \divide\@tempdima by2\relax
   \raise\@tempdima
   \vbox{%
    \hrule height\@NoThick width\@NoHyphenWidth%
   }%
   \hfill
   \hbox to\@NoBoxWidth{%
    \hss#3\hss
   }%
   \hfill
  }%
  \setbox0=\hbox{%
   \vrule width\@NoThick
   \vbox{%
    \hrule height\@NoThick%
    \vskip1.5mm%
    \box1%
    \vskip1.5mm%
    \hrule height\@NoThick%
   }%
   \vrule width\@NoThick%
  }%
  \dimen0=\@NoWidth\linewidth%
  \advance\dimen0 by-\wd0%
  \setbox1=\vbox{%
   \hrule width\dimen0 height\@NoThick%
  }%
  \dimen0=\ht0%
  \advance\dimen0 by-\ht1%
  \divide\dimen0 by2%
  \box0\raise\dimen0\box1%
 \egroup
}%
% \Number[#1]
% 問題番号を 1 つ増やす
% #1:options
% options:thickness=罫線の太さ(1pt),widthmag=幅の倍率(1),
%         hyphenwidth=ハイフンの長さ(2.5mm),
%         boxwidth=章番号，問題番号の幅
% \Number*[#1]
% #1:options
% * 章番号を 1 つ増やして問題番号をリセット
% options:thickness=罫線の太さ(1pt),widthmag=幅の倍率(1),
%         hyphenwidth=ハイフンの長さ(2.5mm),
%         boxwidth=章番号，問題番号の幅
\def\Number{\@ifstar{\@Number}{\@Numb@r}}%
\def\@Number{\@ifnextchar[{\@@Number}{\@@Number[]}}%
\def\@@Number[#1]{%
 \stepcounter{BAN}\stepcounter{Ban}%
 \No[#1]{\the\c@BAN}{\the\c@Ban}%
}%
\def\@Numb@r{\@ifnextchar[{\@@Numb@r}{\@@Numb@r[]}}%
\def\@@Numb@r[#1]{%
 \stepcounter{Ban}%
 \No[#1]{\the\c@BAN}{\the\c@Ban}%
}%
% 円弧を表す記号
% \ko{AB}
\def\ko{%
    \@ifnextchar[{\@ko}{\@ko[0pt]}}%
\def\@ko[#1]#2{{%
    \setbox0\hbox{\StopCenter#2\StartCenter}%2002/01/04センター対策練り直し
    \ifdim\wd0>2.75em%
        \def\ko@{$\biggl($}%
    \else\ifdim\wd0>1.75em%
        \def\ko@{$\Bigl($}%
    \else%
        \def\ko@{$\bigl($}%
    \fi\fi%
    \ensuremath{\stackrel{\hbox{\tate\ko@}\hspace{#1}}%
    {\mbox{#2}}}%2000/7/20\Center対策
    }}%
%%ローマ数字の出力
% \rnum{5} : 5をローマ数字の小文字で出力
\def\rnum#1{\expandafter{\romannumeral#1}}%
% \Rnum{10} : 10をローマ数字の大文字で出力
\def\Rnum#1{\uppercase\expandafter{\romannumeral#1}}%
%%長丸センター試験
% Cmaru[#1]#2
% #1 オプション引数
% option:ovalmag=楕円の比率,size=数字のサイズ,thickness=線の太さ
% #2 数字
%\define@key{Cmaru}{ovalmag}{\def\@OvalMag{#1}}%
%\define@key{Cmaru}{size}{\def\@NoSize{#1}}%
%\define@key{Cmaru}{thickness}{\def\@Thick{#1}}%
%\def\Cmaru{\@ifnextchar[{\@Cmaru}{\@Cmaru[]}}
%\def\@Cmaru[#1]#2{%
% \bgroup
%  \def\@OvalMag{1}%
%  \def\@NoSize{}%
%  \def\@Thick{.5pt}%
%  \setkeys{Cmaru}{#1}%
%  \leavevmode\setbox0=\hbox{あ}%
%  \Mul{\@OvalMag}{1400}\XYsize%
%  \Mul{\XYsize}{.6}\harfXYsize%
%  \Div{\XYsize}{2}\CENTER%
%  \dp0=2.5\dp0%
%  \lower\@OvalMag\dp0%
%   \hbox{%
%    \unitlength.001zw%
%    \begin{picture}%
%     (\XYsize,\XYsize)%
%     \allinethickness{\@Thick}%
%     \put(\CENTER,\CENTER){\makebox(0,0){\ellipse{\harfXYsize}{\XYsize}}}%
%     \put(\CENTER,\CENTER){\makebox(0,0){{\@NoSize#2}}}%
%    \end{picture}%
%    }%
% \egroup
%}%
%%2012/7/31変更
%\let\Cmaru=\EMnagamaru
% 12/5/2015変更
\NewDocumentCommand\Cmaru{D<>{}O{}m}{%
 \tikz[baseline=(@O@.base),#1]{%
  \node[text=white,draw,inner sep=.75pt,ellipse,minimum width=1.4ex,minimum height=1.35em,#2](@O@){1}%
   node at(@O@.center){#3};}%
}%
%%三角枠
% \triframe<#1>[#2]#3
% #1 枠の大きさを #1 倍する
% #2 デフォルトでは \small
% #3 三角で囲む数字
\def\triframe{\@ifnextchar<{\@triframe}{\@triframe<1>}}%
\def\@triframe<#1>{\@ifnextchar[{\@@triframe<#1>}{\@@triframe<#1>[\small]}}%
\def\@@triframe<#1>[#2]#3{%
 \Mul{#1}{210}\XYsize%
 \unitlength.001in\begin{picture}(\XYsize,\XYsize)%
  \def\A{(0,0)}\def\B{(\XYsize,0)}%
  \Kaiten\A\B{60}\C%
  \Drawline{\A\B\C\A}%
  \Zyuusin\A\B\C\G%
  \Put\G(0pt,0pt){{#2#3}}%
  \end{picture}}%
%
%%元号の出力 \元号{1999}-->平成 11 年
\def\元号#1{\setcounter{seireki}{#1}%
 \ifnum\value{seireki}>1989%
  \addtocounter{seireki}{-1988}平成\theseireki 年%
 \else%
  \ifnum\value{seireki}=1989 平成元年%
  \else%
   \ifnum\value{seireki}>1926%
    \addtocounter{seireki}{-1925}昭和\theseireki 年%
   \else%
    \ifnum\value{seireki}=1926 昭和元年%
    \else%
     \ifnum\value{seireki}>1912%
      \addtocounter{seireki}{-1911}大正\theseireki 年%
     \else%
      \ifnum\value{seireki}=1912 大正元年%
      \else%
       \ifnum\value{seireki}>1868%
        \addtocounter{seireki}{-1867}明治\theseireki 年%
       \else%
        \ifnum\value{seireki}=1868 明治元年%
        \else%
         \errmessage{元号 command error 明治以降しか対応していません 1868 年までです}%
        \fi%
       \fi%
      \fi%
     \fi%
    \fi%
   \fi%
  \fi%
 \fi}
%
% tabular 環境での縦線を破線にする
% 破線の長さの指定(破線の長さと空白は同じ長さ)
\newdimen\DashLineStretch
\DashLineStretch=4pt
\newdimen\DashLineWidth
\DashLineWidth=.4pt
\def\Vdashlinefill{\vbox to\DashLineStretch{\vfil\hbox{\vrule width\DashLineWidth height.5\DashLineStretch}\vfil}}%
% 縦の破線を引く．カラム内の文字列が縦に長いと破線が途切れる．
\newcolumntype{:}{%
 !{\dimen0=\arraystretch\ht\strutbox%
   \advance\dimen0 by\arraystretch\extrarowheight%
   \advance\dimen0 by\arraystretch\dp\strutbox%
   \lower\arraystretch\dp\strutbox%
   \vbox to\dimen0{\xleaders\Vdashlinefill\vfill}}}%
% 重心の座標を求める 20140614 削除
% \出典{#1} 何もしない
% \出典*{#1} #1 を出力する
\def\出典{\@ifstar{\@出典}{\@@出典}}%
\def\@出典#1{%
\begin{flushright}%
 #1%
\end{flushright}}%
\def\@@出典#1{}%
%[year=1997,term=前,university=弘前,faculty=,department=,no=9,matter={体積，最大・最小},level=標準]
%\define@key{Shutten}{year}{\def\@Shu@Year{#1}}%
%\define@key{Shutten}{term}{\def\@Shu@Term{#1}}%
%\define@key{Shutten}{university}{\def\@Shu@University{#1}}%
%\define@key{Shutten}{faculty}{\def\@Shu@Faculty{#1}}%学部
%\define@key{Shutten}{department}{\def\@Shu@Department{#1}}%学科
%\define@key{Shutten}{no}{\def\@Shu@No{#1}}%
%\define@key{Shutten}{matter}{\def\@Shu@Matter{#1}}%
%\define@key{Shutten}{level}{\def\@Shu@Level{#1}}%
%\def\Shutten#1{%
%	\bgroup
%		\let\@Shu@Year\empty
%		\let\@Shu@Term\empty
%		\let\@Shu@University\empty
%		\let\@Shu@Faculty\empty%
%		\let\@Shu@Department\empty
%		\let\@Shu@No\empty
%		\let\@Shu@Matter\empty
%		\let\@Shu@Level\empty
%		\setkeys{Shutten}{#1}%
%		\begin{flushright}
%		 \@Shu@Year\if\@Shu@Year\empty\else 年\fi
%		 \@Shu@Term\if\@Shu@Term\empty\else 期\quad\fi
%		 \@Shu@University\if\@Shu@University\empty\else 大学\fi
%		 \if\@Shu@Faculty\empty\else\quad\fi
%		 \@Shu@Faculty
%		 \if\@Shu@Faculty\empty\else 学部\fi
%		 \@Shu@Department\if\@Shu@Department\empty\else 学科\fi
%		 \@Shu@No
%		 \ifthenelse{\equal{\empty}{\@Shu@Matter}}{\\}{%
%		  \ifthenelse{\equal{\empty}{\@Shu@Level}}{}{\\}%
%		 }
%		 \@Shu@Matter
%		 \ifthenelse{\equal{\empty}{\@Shu@Level}}{}{[\@Shu@Level]}%
%%		 \if\@Shu@Level\empty\else[\@Shu@Level]\fi
%		\end{flushright}
%	\egroup
%	}%
%% 2015/07/21 変更
%% term=hoge -> hoge期，faculty=hoge -> hoge学部，department=hoge -> hoge学科がデフォルトだが
%% term=*[hoge]fuga -> fugahoge
%% faculty=*[hoge]fuga -> fugahoge
%% department=*[hoge]fuga -> fugahoge
%% と表示できるようにする
%% faculty=*[学類]理工 -> 理工学類 と表示される
%% すなわち faculty=hoge は faculty=*[学部]hoge と同じである
\def\Shu@Replace#1#2{\@ifstar{\@ifnextchar[{\@Shu@Replace}{\@Shu@Replace[]}}{\@Shu@Replace[#1]}#2\@nil}%
\def\@Shu@Replace[#1]#2\@nil{%
 #2#1%
}%
\define@key{Shutten}{year}{\def\Shu@Year{#1年}}%
\define@key{Shutten}{term}{\def\Shu@Term{\Shu@Replace{期}{#1}}}%
%\define@key{Shutten}{university}{\def\Shu@Uni{#1大学}}%
\define@key{Shutten}{university}{\def\Shu@Uni{\Shu@Replace{大学}{#1}}}%
\define@key{Shutten}{faculty}{\def\Shu@Fac{\Shu@Replace{学部}{#1}}}%学部
\define@key{Shutten}{department}{\def\Shu@Dep{\Shu@Replace{学科}{#1}}}%学科
\define@key{Shutten}{no}{\def\Shu@No{#1}}%
\define@key{Shutten}{matter}{\def\Shu@Matter{#1}}%
\define@key{Shutten}{level}{\def\Shu@Level{[#1]}}%
%\Shu@Replace{学部}{*[学類]工}%
\def\Shu@Year{}%
\def\Shu@Term{}%
\def\Shu@Uni{}%
\def\Shu@Fac{}%
\def\Shu@Dep{}%
\def\Shu@No{}%
\def\Shu@Matter{}%
\def\Shu@Level{}%
\def\Shutten#1{%
 \bgroup
  \setkeys{Shutten}{#1}%
  \begin{flushright}
   \Shu@Year\Shu@Term\quad\Shu@Uni\quad
   \Shu@Fac\Shu@Dep\Shu@No\\
   \Shu@Matter\Shu@Level
  \end{flushright}
 \egroup
}%
% \解答*{#1} #1を出力する．
% \解答{#1} なにもしない．
%\def\解答{\@ifstar{\@解答{}\noindent}{\noindent\@解答}}%
%\long\def\@解答#1{}%
\def\解答display{%
 \def\解答{\@ifstar{}{}}%
}%
\def\解答hidden{%
 \def\解答{%
  \@ifstar{\@gobble}{\@gobble}%
 }%
}%
\def\解答{\@ifstar{}{\@gobble}}
% \begin{解説}*#1\end{解説} #1を出力する．
% \begin{解説}#1\end{解説} #1を出力しない．
\let\oriref\ref
\let\orilabel\label
\let\oricaption\caption
\let\oritablename\tablename
\let\orifigure\figure
\let\oritable\table
\let\oriendfigure\endfigure
\let\oriendtable\endtable
\def\解説display{\解説true}%
\def\解説hidden{\解説false}%
\def\解説{\@ifstar{\if解説\setcounter{equation}{0}\else\expandafter\@解説\fi}{\if解説\setcounter{equation}{0}\else\expandafter\@解説\fi}}
\long\def\@解説#1\end#2{%
 \def\temp@envname{#2}%
 \def\@env解説{解説}%
 \ifx\temp@envname\@env解説
  \def\temp@end解説{\protect\end{解説}}%
  \expandafter\temp@end解説
 \else
  \expandafter\@解説
 \fi
}%
\def\end解説{\relax}%
\newif\if解説
\解説true
%問題環境
\def\問題display{\問題true}%
\def\問題hidden{\問題false}%
%\def\問題{\@ifstar{\if問題\MarkReset\else\MarkReset*\expandafter\@問題\fi}{\if問題\MarkReset\else\MarkReset*\expandafter\@問題\fi}}
\def\問題{\@ifstar{\if問題\else\expandafter\@問題\fi}{\if問題\else\expandafter\@問題\fi}}%2015/02/26 \Mark{}の前問からの番号が継続されない問題のため修正
\long\def\@問題#1\end#2{%
 \def\temp@envname{#2}%
 \def\@env問題{問題}%
 \ifx\temp@envname\@env問題
  \def\temp@end問題{\protect\end{問題}}%
  \expandafter\temp@end問題
 \else
  \expandafter\@問題
 \fi
}%
\def\end問題{\relax}%
\newif\if問題
\問題true
% picture 環境で四角を描く 20150614 削除
% picture 環境で黒丸を描く 同上
% tabular 環境で 行の中央に文字列を入れる．
\def\Gcenter#1#2{%
 \dimen0=\ht\strutbox%
 \advance\dimen0\dp\strutbox%
 \multiply\dimen0 by#1%
 \divide\dimen0 by2%
 \advance\dimen0 by-.5\normalbaselineskip%
 \raisebox{-\dimen0}[0pt][0pt]{#2}}%
%文字を中央に配置する
\def\HTcenter{\@ifnextchar<{\@HTcenter}{\@HTcenter<あ>}}%
\def\@HTcenter<#1>#2{%
 \leavevmode%
 \setbox0=\hbox{#1}%
 \setbox1=\hbox{#2}%
 \dimen0=\ht0%
 \advance\dimen0 by-\ht1%
 \advance\dimen0 by\dp1%
 \advance\dimen0 by-\dp0%
 \divide\dimen0 by2%
 \raise\dimen0\box1%
 }%
% 鉤つきの出力 20150614 削除
% index のページを修正 j@plain を myfoot に
\renewenvironment{theindex}%
  {\if@twocolumn\@restonecolfalse\else\@restonecoltrue\fi
   \columnseprule\z@ \columnsep 35\p@
   \twocolumn[\section*{\indexname}]%
   \@mkboth{\indexname}{\indexname}%
   \thispagestyle{myfoot}\parindent\z@
   \parskip\z@ \@plus .3\p@\relax
   \let\item\@idxitem}%
  {\if@restonecol\onecolumn\else\clearpage\fi}%
% < と =，> と = を近づける
\def\geqq{\mathrel{\mathpalette\gl@align>}}%
\def\leqq{\mathrel{\mathpalette\gl@align<}}%
\def\gl@align#1#2{\lower.75ex\vbox{\baselineskip\z@skip\lineskip.5pt%\z@%
 \ialign{$\m@th#1\hfil##\hfil$\crcr#2\crcr=\crcr}}}%
% 平行四辺形の記号 20150614 削除
% 数字のゼロつめ
% \ZeroPlus{#1}{#2}#3
% #1 ゼロつめする数字
% #2 全体の桁数
% #3 ゼロ詰めした数字を収めるコントロールシーケンス
% ex. \ZeroPlus{135}{5}\NO ---> \NO=00135
\def\ZeroPlus#1#2#3{%
 \bgroup
  \edef\@NoBody{#1}%
  \@tempcnta=\z@\relax
  \expandafter\@tfor\expandafter\member\expandafter:\expandafter=\@NoBody\do{%
   \advance\@tempcnta by\@ne\relax
  }%
  \edef\@NoBody{}%
  \loop
   \ifnum\@tempcnta<#2\relax
   \advance\@tempcnta by\@ne\relax
   \edef\@NoBody{\@NoBody0}%
  \repeat
  \xdef#3{\@NoBody#1}%
 \egroup
}%
% 囲み罫
% \FboxLine : 線の幅 .4pt
% \FboxXSpc : 線と文字の間隔(横方向) 2pt
% \FboxYSpc : 線と文字の間隔(縦方向) 2pt
% \Fbox[#1]{#2}
% #1:options
% options:linewidth=線の幅(.4pt),xspc=横方向の空白(2pt),
%        :yspc=縦方向の空白(2pt),display=縦線の表示・非表示[rl]
%        :width=箱の横幅,pos=width指定時の文字の位置[rcl](c)
%        :strutheight=支柱の高さ(0pt),strutdepth=支柱の深さ(0pt)
%        :strutwidth=支柱の太さ(0pt)
\define@key{Fbox}{linewidth}{\FboxLine=#1}%
\define@key{Fbox}{xspc}{\FboxXSpc=#1}%
\define@key{Fbox}{yspc}{\FboxYSpc=#1}%
\define@key{Fbox}{display}{\def\@Display{#1}}%
\define@key{Fbox}{width}{\def\@Width{#1}}%
\define@key{Fbox}{pos}{\def\@Pos{#1}}%
\define@key{Fbox}{strutheight}{\def\@StrutH{#1}}%
\define@key{Fbox}{strutdepth}{\def\@StrutD{#1}}%
\define@key{Fbox}{strutwidth}{\def\@StrutW{#1}}%
\def\Fbox{\@ifnextchar[{\@Fbox}{\@Fbox[]}}%
\def\@Fbox[#1]#2{%
 \bgroup
  \FboxLine=.4pt\relax
  \FboxXSpc=2pt\relax
  \FboxYSpc=2pt\relax
  \def\@Display{}%
  \def\@Width{\empty}%
  \def\@Pos{c}%
  \def\@StrutH{0pt}%
  \def\@StrutD{0pt}%
  \def\@StrutW{0pt}%
  \setkeys{Fbox}{#1}%
  \leavevmode%
  \setbox0=\hbox{\vrule height\@StrutH depth\@StrutD width\@StrutW#2}%
  \dimen0\dp0%
  \advance\dimen0 by\FboxLine%
  \advance\dimen0 by\FboxYSpc%
  \expandafter\ifx\@Width\empty%
  \hbox{%
   \lower\dimen0%
   \hbox{%
    \if\@Display r\relax\else\vrule width\FboxLine\fi%
    \vbox{%
     \hrule height\FboxLine\kern\FboxYSpc%
     \hbox{%
      \kern\FboxXSpc\hss{\vrule height\@StrutH depth\@StrutD width\@StrutW#2}\hss\kern\FboxXSpc
     }%
     \kern\FboxYSpc\hrule height\FboxLine
    }%
    \if\@Display l\relax\else\vrule width\FboxLine\fi
   }%
  }%
 \else%
  \hbox{%
   \lower\dimen0%
   \hbox{%
    \if\@Display r\relax\else\vrule width\FboxLine\fi%
    \vbox{%
     \hrule height\FboxLine\kern\FboxYSpc%
     \hbox to\@Width{%
      \kern\FboxXSpc
      \if\@Pos l\else\hss\fi
      {\vrule height\@StrutH depth\@StrutD width\@StrutW#2}%
      \if\@Pos r\else\hss\fi\kern\FboxXSpc
     }%
     \kern\FboxYSpc\hrule height\FboxLine
    }%
    \if\@Display l\relax\else\vrule width\FboxLine\fi
   }%
  }%
 \fi%
 \egroup
}%
\def\rFbox{\Fbox[display=r]}%
\def\lFbox{\Fbox[display=l]}%
% \FboxLine : 線の幅 .4pt
% \FboxXSpc : 線と文字の間隔(横方向) 2pt
% \FboxYSpc : 線と文字の間隔(縦方向) 2pt
% \SpcFbox[#1]{#2}
% #1:options
% options:linewidth=線の幅(.4pt),xspc=横方向の空白(2pt),
%        :yspc=縦方向の空白(2pt),display=縦線の表示・非表示[rl],
%        :width=箱の横幅,pos=width指定時の文字の位置[rcl](c),
%        :upperspace=文字の上部の空白(8pt),lowerspace=文字の下部の空白(8pt)
\define@key{Fbox}{upperspace}{\def\@USp{#1}}%
\define@key{Fbox}{lowerspace}{\def\@LSp{#1}}%
\def\SpcFbox{\@ifnextchar[{\@SpcFbox}{\@SpcFbox[]}}%
\def\@SpcFbox[#1]#2{%
 \bgroup
  \leavevmode%
  \FboxLine=.4pt\relax
  \FboxXSpc=2pt\relax
  \FboxYSpc=2pt\relax
  \def\@Display{}%
  \def\@Width{\empty}%
  \def\@Pos{c}%
  \def\@USp{8pt}%
  \def\@LSp{8pt}%
  \setkeys{Fbox}{#1}%
  \setbox0=\hbox{\Fbox[#1]{\SpcPlus{\@USp}{\@LSp}{#2}}}%
  \setbox1=\hbox{\Fbox[#1]{\hss}}%
 \ifdim\wd0<\wd1%
  \Fbox[#1]{\SpcPlus{\@USp}{\@LSp}{#2}}%
 \else%
  \box0%
 \fi%
}%
\def\rSpcFbox{\SpcFbox[display=r]}%
\def\lSpcFbox{\SpcFbox[display=l]}%
% Zahyo{#1}{#2} : ---> (\,#1,\;#2\,)
%%space:座標間のスペース(\;)
%%sign:座標間の区切り(,)
%%pspace:括弧と座標のスペース(\,)
%%paren:括弧の種類({(,)}) paren={\{,\}}などと指定する
%%      paren={.,.}で括弧をなくする
\define@key{Zahyo}{space}{\def\@Zahyo@Space{#1}}%
\define@key{Zahyo}{sign}{\def\@Zahyo@Sign{#1}}%
\define@key{Zahyo}{pspace}{\def\@Zahyo@Pspace{#1}}%
\define@key{Zahyo}{paren}{\@Zahyo@Paren#1\@nil}%
\def\@Zahyo@Paren#1,#2\@nil{%
 \def\@Zahyo@PreParen{#1}%
 \def\@Zahyo@PostParen{#2}%
}%
\def\Zahyo{\@ifnextchar<{\@Zahyo}{\@Zahyo<>}}%
\def\@Zahyo<#1>#2{%
 \bgroup
  \def\@Zahyo@Space{\;}%
  \def\@Zahyo@Sign{,}%
  \def\@Zahyo@Pspace{\,}%
  \@Zahyo@Paren(,)\@nil
  \setkeys{Zahyo}{#1}%
  \left\@Zahyo@PreParen
	\@Zahyo@Pspace\@@Zahyo#2,\@empty\@nil
  \right\@Zahyo@PostParen
 \egroup
}%
\def\@@Zahyo#1,#2\@nil{%
 #1%
 \ifx\@empty#2%\ifx#2\@emptyだと\Zahyo{1,22}では(1,)となってしまう
  \expandafter\@Zahyo@Pspace
 \else
  \def\@ZahyoBody{\@Zahyo@Sign\@Zahyo@Space\@@Zahyo#2\@nil}%
  \expandafter\@ZahyoBody
 \fi
}%
% \ruby{漢字}{かんじ}
% BBさん作成
\def\ruby#1#2{%
\leavevmode\vbox{%
\@defaultunits\@tempdima\f@size pt\relax\@nnil%
\expandafter\@tempdima0.5\@tempdima%
\baselineskip\z@skip\lineskip.25ex\ialign{%
##\crcr\fontsize{\the\@tempdima}{\f@baselineskip}\selectfont\hfill#2\hfill\crcr\hfill#1\hfill\crcr}}}%
\def\ruby#1#2{%
 \leavevmode%
 \setbox0=\hbox{#1}%
 \setbox1=\hbox{\tiny#2}%
 \@tempdima=\wd0%
 \advance\@tempdima by-\wd1%
 \ifdim\wd0<\wd1%
  \@tempdima=-\@tempdima%
  \hbox{\vbox{\copy1\nointerlineskip\kern1.5pt\hbox to\wd1{\hskip.15\@tempdima\hss\kanjiskip0pt plus1fill minus1fill#1\hss\hskip.15\@tempdima}}}%
 \else%
  \hbox{\vbox{\hbox to\wd0{\tiny\hskip.15\@tempdima\hss\kanjiskip0pt plus1fill minus1fill#2\hss\hskip.15\@tempdima}\nointerlineskip\kern1.5pt\box0}}%
 \fi%
}%
%開区間
\def\openinterval#1{\@openinterval#1\@nil}%
\def\@openinterval#1,#2\@nil{\Zahyo{#1,#2}}%
%閉区間 \Zahyoのオプションで解決できる
\def\closedinterval#1{\@closedinterval#1\@nil}%
\def\@closedinterval#1,#2\@nil{\brackets{\,#1,\;#2\,}}%
% \delComma*****,\@empty で ***** を出力する．
\def\delComma#1,\@empty{#1}%
% delList{#1}{#2}{#3}
% #2 のリストの #1 番目を抜いて \#3 とする．
\def\delList#1#2#3{%
 {%
 \@tempcnta=0
 \def\tempList{}%
 \expandafter\@for\expandafter\member\expandafter:\expandafter=#2\do{\advance\@tempcnta by\@ne%
  \ifnum\@tempcnta=#1%
  \else%
   \edef\tempList{\tempList\member,}%
  \fi}%
 \expandafter\xdef\csname#3\endcsname{\expandafter\delComma\tempList\@empty}%
 }%
}%
% selectList{#1}{#2}{#3}
% #2 のリストの #1 番目の文字を \#3 とする．
\def\selectList#1#2#3{%
 {%
  \@tempcnta=0%
  \expandafter\@for\expandafter\member\expandafter:\expandafter=#2\do{%
   \advance\@tempcnta by\@ne%
   \ifnum\@tempcnta=#1%
    \expandafter\xdef\csname#3\endcsname{\member}%
   \fi%
  }%
 }%
}%
% \Sequence{#1}[#2]{#3} 20150614 削除
% \Series{3}{\Frac{1}{\theSeriesNo^{2}}} 20150614 削除
% --> \Frac{1}{1^{2}}+\Frac{1}{2^{2}}+\Frac{1}{3^{2}}
%ヘッダにコンパイル時の日時とファイル名を表示
\def\datetohead{%
 \def\@oddhead{\today\Time\quad\jobname.tex\hfil}%
 \let\@evenhead\@oddhead%
}%
%\timeを普通の何時何分に変換
\def\Time{%
 \@tempcnta=\time%
 \@tempcntb=0%
 \loop%
  \ifnum\@tempcnta>59%
   \advance\@tempcnta by-60%
   \advance\@tempcntb by\@ne%
 \repeat%
 \ZeroPlus{\the\@tempcnta}{2}\@MINU
 \the\@tempcntb:\@MINU%\ZeroPlus{\the\@tempcnta}{2}%
}%
% \Shugo 20150614 削除
%% カレンダー 20150614 削除
% \Integers[#1]
% #1:options
% options:alph=文字(n),first=開始番号(1),end=終了番号(3),space=「,」と「数字」の空白(\ )
%         dots=点々の種類(ldots),nodots(dotsなし)
\newif\ifintegerdots
\integerdotstrue
\define@key{Int}{alph}{\def\@IntAlph{#1}}%
\define@key{Int}{first}{\def\@IntFirst{#1}}%
\define@key{Int}{begin}{\def\@IntFirst{#1}}%
\define@key{Int}{end}{\def\@IntEnd{#1}}%
\define@key{Int}{space}{\def\@IntSpace{#1}}%
\define@key{Int}{dots}{\def\@IntDots{#1}}%
\define@key{Int}{nodots}[true]{\integerdotsfalse}
\def\Integers{\@ifnextchar[{\@Integers}{\@Integers[]}}%
\def\@Integers[#1]{%
 \bgroup
  \def\@IntAlph{n}%
  \def\@IntFirst{1}%
  \def\@IntEnd{3}%
  \def\@IntSpace{\ }%
  \def\@IntDots{\ldots}%
  \setkeys{Int}{#1}%
  \@IntAlph=%
%  \Incr\@IntEnd
  \foreach\N in {\@IntFirst,...,\@IntEnd}{%
   \N\ifnum\N<\@IntEnd,\@IntSpace\fi
  }%
%  \Ifor{\n}{\@IntFirst}{\@IntEnd}\Do{%
%   \n,\@IntSpace
%  }%
%  \@IntEnd
  \ifintegerdots
   ,\@IntDots
  \else
  \fi
%  \@IntDots
 \egroup
}%
%複素数平面上における乗法 20150614 削除
%複素数平面上における除法 同上
%条件付確率 20150614 削除
%カードを出力 20140614 削除
%期待値 20140614 削除
% \pushSeibun{#1}{#2}{#3} 20150614 削除
% \popSeibun{#1}{#2} 同上
% \SeibunChushutsu{#1}{#2}...{#n} 同上
%・・・・・(答)を出力
\def\Kotae{\@ifnextchar|{\@Kot@e}{\@Kot@e|(|)|}}%
\def\@Kot@e|#1|#2|{\@ifnextchar<{\@@Kot@e{#1}{#2}}{\@@Kot@e{#1}{#2}<答>}}%
\def\@@Kot@e#1#2<#3>{\penalty-20\hbox{}\Dotfill#1#3#2}%-9999から-20に2013/5/17
% センター問題の箱および相互参照，解答出力用の設定
%\def\ModeShitei#1{\def\CenterMode{#1}}%
%\ModeShitei\bfseries% 中の文字の種類
%\def\refModeShitei{\mcfamily}%
%\def\MojiShitei#1{\def\CenterMoji{#1}}%
%\MojiShitei\アイウ% 中の文字の種類
\newwrite\center@nswer%
%\def\StartCenter{\setcounter{CenterCTR}{\TempCenterCTR}\CenterWritetrue}%
%\def\StopCenter{\edef\TempCenterCTR{\theCenterCTR}\CenterWritefalse}%
%\MarkReset
\newif\ifMarkReset
\MarkResettrue
\def\MarkReset{\@ifstar{\MarkResetfalse\@MarkReset}{\@MarkReset}}%
\def\@MarkReset{%
 \CenterWritetrue
 \stepcounter{MarkResetTimes}%
 \resetcounter{CenterCTR}%
 \resetcounter{equation}%
 \resetcounter{figure}%
 \resetcounter{table}%
 \ZeroPlus{\the\c@MarkResetTimes}{3}\@MarkResetNo
 \ifMarkReset
  \immediate\openout\center@nswer\jobname\@MarkResetNo.ans\relax
 \fi
}%
%%\Mark
%\DeclareRobustCommand\Mark{\@ifstar{\MarkSpcfalse\@Mark}{\@Mark}}%
%\def\@Mark{\@ifnextchar[{\@@Mark}{\@@Mark[\@empty]}}%
%\def\@@Mark[#1]{\@ifnextchar[{\@@@Mark[#1]}{\@@@Mark[#1][\@empty]}}
%\def\@@@Mark[#1][#2]#3{%
% \leavevmode
% \def\@MarkList{}%
% \c@TEMPCTR=0\relax
% \@tfor\member:=#3\do{%
%  \global\advance\c@TEMPCTR by\@ne\relax
%  \global\advance\c@CenterCTR by\@ne\relax
%  \edef\@MarkList{\@MarkList\CenterMoji{CenterCTR}}%
%  \expandafter\edef\csname Mark@each@\romannumeral\theTEMPCTR\endcsname{\CenterMoji{CenterCTR}}%
% }%
% \def\@MarkRefStrings{#1}%
% \def\@TrueEmpty{\@empty}%
% \ifx\@MarkRefStrings\@TrueEmpty
% \else
%  \@ifundefined{Hy@Message}%
%   {%
%    \immediate\write\@auxout{\string\newlabel{mark:#1}{{\@MarkList}{\thepage}}}%
%   }{%
%    \immediate\write\@auxout{\string\newlabel{mark:#1}{{\@MarkList}{\thepage}{}{}{}}}%
%   }%
%%  {%
%%   \let\@currentlabel=\@MarkList
%%   \@currentlabel\label{mark:#1}%
%%  }%
% \fi
% \def\@Mark@eachRefStrings{#2}%
% \ifx\@TrueEmpty\@Mark@eachRefStrings
% \else
%  \c@tempcnta=\z@\relax
%  \expandafter\@tfor\expandafter\@member\expandafter:\expandafter=\@MarkList\do{%
%   \advance\c@tempcnta by\@ne\relax
%   \expandafter\edef\csname @Mark@part@\romannumeral\c@tempcnta\endcsname{\@member}%
%  }%
%  \c@tempcnta=\z@\relax
%  \@for\@member:=#2\do{%
%   \advance\c@tempcnta by\@ne\relax
%   \@ifundefined{Hy@Message}%
%   {%
%    \immediate\write\@auxout{\string\newlabel{mark:\@member}{{\csname @Mark@part@\romannumeral\c@tempcnta\endcsname}{\thepage}}}%
%   }{%
%    \immediate\write\@auxout{\string\newlabel{mark:\@member}{{\csname @Mark@part@\romannumeral\c@tempcnta\endcsname}{\thepage}{}{}{}}}%
%   }%
%%   {%
%%    \expandafter\let\expandafter\@currentlabel\expandafter=\csname Mark@each@\romannumeral\the\c@tempcnta\endcsname
%%    \label{mark:\@member}%
%%   }%
%  }%
% \fi
%% #1 が1文字以上の場合 \jobname*.ans に
%% アイ = 12 などと書き込む
% \ifnum\c@TEMPCTR>0\relax
%% \MarkReset* が発行されているときは \jobname*.ans に書き込まない
%  \ifMarkReset
%% \mathpallete 時に \jobname*.ans に書き込まない
%  \ifCenterWrite
%\ifmeasuring@\else
%   \immediate\write\center@nswer{%
%    \string
%    \hbox{%
%     $\string
%      \boldsymbol{%
%       \string\mbox{\string\CenterMode\space\@MarkList}=%
%% #1 がコントロールシーケンスのときの対策
%       \string#3%
%      }%
%     $%
%    }%
%    \string\hskip\string\AnswerSkip%
%   }%
%\fi
%  \fi
%  \fi
%  \ifnum\c@TEMPCTR>3\relax
%   \MarkKeepWidthfalse
%  \fi
% \fi
% \@@@@Mark{#3}%
%}%
%\def\@@@@Mark#1{%
%% \leavevmode
% \bgroup
% \setbox0=\hbox{あ}%
% \advance\CenterBoxWidth by.5zw\relax
% \dimen0=\dp0\relax
% \setbox1=\hbox{\@MarkList}%
% \ifMarkSpc
%  \advance\dimen0 by\CenterSpc\relax
% \fi
% \advance\dimen0 by\CenterLine\relax
% \hskip\CenterSkip
% \lower\dimen0\hbox{\vrule width\CenterLine
%                 \vbox{\hrule height\CenterLine
%		       \ifMarkSpc
%		        \kern\CenterSpc
%		       \fi
%		       \hbox
%		        \ifdim\wd1>\CenterBoxWidth\relax\else\ifMarkKeepWidth\ifMarkSpc to\CenterBoxWidth\fi\fi\fi
%		            {%
%			     \ifMarkSpc
%			      \kern\CenterSpc
%			     \fi
%		             \hss
%			     \def\@TempMarkList{}%
%			     \ifx\@TempMarkList\@MarkList
%			      \vphantom{あ}%
%			     \else
%			      \ifMarkSpc
%			      \else
%			       \scriptsize
%			      \fi
%			      \CenterMode\@MarkList
%			     \fi
%			     \hss%
%			     \ifMarkSpc
%			      \kern\CenterSpc
%			     \fi
%                             }%
%		       \ifMarkSpc
%		        \kern\CenterSpc
%		       \fi
%		       \hrule height\CenterLine}%
%		 \vrule width\CenterLine}%
% \hskip\CenterSkip
% \egroup
% \MarkKeepWidthtrue
% \MarkSpctrue
%}%
%%\refMark
%\def\refMark{\@ifstar{\MarkSpcfalse\MarkKeepWidthfalse\@refMark}{\@refMark}}%
%\def\@refMark#1{%
% \@ifundefined{r@mark:#1}{
%  \def\@MarkList{\textcolor{red}{??}}%
%  \@@@@Mark{}%
% }%
% {%
%  {%
%   \let\@xp@=\expandafter
%   \@xp@\edef\@xp@\@temp\@xp@{\csname r@mark:#1\endcsname}%
%   \c@tempcnta=\z@\relax
%   \@xp@\@tfor\@xp@\member\@xp@:\@xp@=\@temp\do{%
%    \advance\c@tempcnta by\@ne\relax
%    \@xp@\let\csname @temp@\romannumeral\c@tempcnta\endcsname=\member
%   }%
%   \let\@MarkList=\@temp@i
%   \c@tempcnta=\z@\relax
%   \@xp@\@tfor\@xp@\member\@xp@:\@xp@=\@temp@i\do{%
%    \advance\c@tempcnta by\@ne\relax
%   }%
%   \ifnum\c@tempcnta>3\relax
%    \MarkKeepWidthfalse
%   \fi
%   \CenterLine=\refCenterLine\relax
%   \ModeShitei\refModeShitei
%   \@@@@Mark{}%
%  }%
% }%
% \MarkSpctrue
% \MarkKeepWidthtrue
%}%
%\MarkAnswer
%\newif\ifMarkAnswer
%\MarkAnswertrue
%%\MarkAnswerfalse
%\def\MarkAnswer#1{%
% \ifMarkReset
%  \immediate\closeout\center@nswer
% \fi
% \ifx#1\@empty
%  \begin{itembox}[l]{解答}%
%   \noindent\leavevmode\input{\jobname\@MarkResetNo.ans}%
%  \end{itembox}%
% \else
%  \ifMarkAnswer
%   \begin{itemtbbox}<l>[r]{解答}{#1}%
%    \noindent\leavevmode\input{\jobname\@MarkResetNo.ans}%
%   \end{itemtbbox}%
%  \else
%   \begin{itembox}[l]{解答}%
%    \noindent\leavevmode\input{\jobname\@MarkResetNo.ans}%
%   \end{itembox}%
%  \fi
% \fi
%}%
%%%%%% 嘘つきマーク
%\def\FakeMark{\@ifstar{\MarkSpcfalse\MarkKeepWidthfalse\@FakeMark}{\@FakeMark}}%
%\def\@FakeMark#1{%
% \bgroup
% \edef\@FakeMarkList{#1}%
% \setbox0=\hbox{あ}%
% \advance\CenterBoxWidth by.5zw\relax
% \dimen0=\dp0\relax
% \setbox1=\hbox{\@FakeMarkList}%
% \ifMarkSpc
%  \advance\dimen0 by\CenterSpc\relax
% \fi
% \advance\dimen0 by\CenterLine\relax
% \hskip\CenterSkip
% \lower\dimen0\hbox{\vrule width\CenterLine
%                 \vbox{\hrule height\CenterLine
%		       \ifMarkSpc
%		        \kern\CenterSpc
%		       \fi
%		       \hbox
%		        \ifdim\wd1>\CenterBoxWidth\relax\else\ifMarkKeepWidth\ifMarkSpc to\CenterBoxWidth\fi\fi\fi
%		            {%
%			     \ifMarkSpc
%			      \kern\CenterSpc
%			     \fi
%		             \hss
%			     \def\@TempMarkList{}%
%			     \ifx\@TempMarkList\@FakeMarkList
%			      \vphantom{あ}%
%			     \else
%			      \ifMarkSpc
%			      \else
%			       \scriptsize
%			      \fi
%			      \CenterMode\@FakeMarkList
%			     \fi
%			     \hss%
%			     \ifMarkSpc
%			      \kern\CenterSpc
%			     \fi
%                             }%
%		       \ifMarkSpc
%		        \kern\CenterSpc
%		       \fi
%		       \hrule height\CenterLine}%
%		 \vrule width\CenterLine}%
% \hskip\CenterSkip
% \egroup
% \MarkSpctrue
% \MarkKeepWidthtrue
%}%
%% \SaitanKeiro\O{NEWS} 20150614 削除
%任意のベクトルに垂直なベクトルを求める 20150614 削除
% フラクタル図形(二分木)を作成 20150614 削除
% 角度の算出(60分法) 20150614 削除
% パスカルの三角形 20150614 削除
%% 最大公約数 emath の計算機能から pgf の計算機能へ移行 20150614
\def\MYGCM#1#2#3{%
 \pgfmathgcd{#1}{#2}%
 \let#3=\pgfmathresult\relax
}%
%% 60分法と弧度法の切り替え
%\DegOrRad{60分法(単位なし)} pgf の計算機能へ移行 20150614
%\degreetrue で60分法
%\degreefalse でラジアン表記
\newif\ifdegree
\def\DegOrRad#1{%
 \ifnum#1<\z@\relax
  -%
 \fi
 \pgfmathparse{int(abs(#1))}%
 \ifdegree
  \pgfmathresult\deg
 \else
  \pgfmathparse{int(mod(int(abs(#1)),180))}%
  \ifnum\pgfmathresult=\z@\relax
   \pgfmathparse{int(abs(#1)/180)}%
   \ifnum\pgfmathresult=\z@\relax
   0%
   \fi
   \ifnum\pgfmathresult=\@ne\relax
    \pi
   \fi
   \ifnum\pgfmathresult>\@ne\relax
    \pgfmathresult\pi
   \fi
  \else
   \pgfmathparse{gcd(int(abs(#1)),180)}%
   \let\@DOR@GCM=\pgfmathresult\relax
   \pgfmathparse{int(abs(#1)/\@DOR@GCM)}%
   \let\@DOR@Bunshi=\pgfmathresult
   \pgfmathparse{int(180/\@DOR@GCM)}%
   \let\@DOR@Bunbo=\pgfmathresult
   \ifnum\@DOR@Bunshi=\@ne\relax
    \Frac\pi\@DOR@Bunbo
   \else
    \Frac\@DOR@Bunshi\@DOR@Bunbo\pi
   \fi
  \fi
 \fi
}%
%mojihankei=文字列を配置するときの中心からの距離0<=r<=1(default .6)
%unitlength=pszahyou*環境のulの値(default 20mm)
%linewidth=pszahyou*環境のlinewidth(default 3)
%mojisize=文字の大きさ(default \scriptsize)
%eachhankei=それぞれの文字を配置するときの中心からの距離を指定する
% ex:eachhankei={(2,.5):(5,.9)}
%               2番目の文字の配置を半径*.5の位置に
%               5番目の文字の配置を半径*.9の位置にする
%EnGraph[keyval]{[1番目の表示文字列]1番目の割合;[2番目の表示文字列]2番目の割合;...} 20150614 削除
%  #2内の[n番目の表示文字列]は省略可能
%  省略時はn番目の割合が表示される
\let\gobble=\@gobble
%
% mawarikomi 環境で図の幅を省略したときとしないときで
% 本文と図の間隔を同じにする
%\mawarikomikankaku=\mawarikomisep\relax
%数式番号を丸数字にする
\def\tagform#1{\expandafter\maru{#1}}%
%数式番号を(*)にする
%\def\setast{\@ifnextchar[{\@setast}{\@setast[1]}}%
%\def\@setast[#1]{%
% \addtocounter{equation}{-1}%
% \c@tempcnta=\z@\relax
% \def\@tag@body{}%
% \loop
%  \ifnum\c@tempcnta<#1\relax
%  \edef\@tag@body{\@tag@body\ast}%
%  \advance\c@tempcnta by\@ne\relax
% \repeat
% \def\tagform##1{$(\@tag@body)$}%
%}%
\let\oriast=\ast
\def\ast{\@ifnextchar[{\@ast}{\@ast[1]}}%
\def\@ast[#1]{%
 \foreach\N in {1,...,#1}{\oriast}%
}%
\def\setast{\@ifnextchar[{\@setast}{\@setast[1]}}%
\def\@setast[#1]{%
 \def\tagform##1{$(\ast[#1])$}%
}%
%数式番号を(*)から通常に戻す
\def\restoreast{%
 \def\tagform##1{\expandafter\maru{##1}}%
 \addtocounter{equation}{-1}%カウンターが戻されていなかった 2015/08/07
}%
%単位円を描く 20150614 削除
%\makebox(#1,#2){#3}   
%%\Makebox[#1](#2,#3){#4}
%%#1 : \unitlength          1pt
%%   \makebox    
%\def\Makebox{\@ifnextchar[{\@Makebox}{\@Makebox[1pt]}}%
%\def\@Makebox[#1](#2,#3)#4{%
% \unitlength#1\relax%
% \makebox(#2,#3){#4}%
%}%
%組立除法の鈎
\newif\ifkumitateboxleft
\kumitateboxlefttrue
\define@key{kumitatebox}{rule}{\def\@kumitaterule{#1}}%
\define@key{kumitatebox}{bottomspace}{\def\@kumitatebottomsp@ce{#1}}%
\define@key{kumitatebox}{sidespace}{\def\@kumitatesidesp@ce{#1}}%
\define@key{kumitatebox}{lefttrue}[lefttrue]{\kumitateboxlefttrue}%
\define@key{kumitatebox}{leftfalse}[leftfalse]{\kumitateboxleftfalse}
\define@key{kumitatebox}{left}[left]{\kumitateboxleftfalse}%
\define@key{kumitatebox}{right}[right]{\kumitateboxlefttrue}
\def\kumitatebox{%
  \@ifnextchar[{\@kumitatebox}{\@kumitatebox[]}%
}%
\def\@kumitatebox[#1]#2{%
 \bgroup
  \def\@kumitaterule{.4pt}%
  \def\@kumitatebottomsp@ce{2pt}%
  \def\@kumitatesidesp@ce{3pt}%
  \setkeys{kumitatebox}{#1}%
  \setbox0=\hbox{$#2$}%
  \@tempdima=\@kumitaterule\relax
  \advance\@tempdima by\@kumitatebottomsp@ce\relax
  \advance\@tempdima by\dp0\relax
  \edef\@kumitatesagehaba{\the\@tempdima}%
  \@tempdima=\ht0\relax
  \advance\@tempdima by\dp0\relax
  \advance\@tempdima by\@kumitaterule\relax
  \advance\@tempdima by\@kumitatebottomsp@ce\relax
  \edef\@kumitatevruleheight{\the\@tempdima}%
  \@tempdima=\wd0\relax
  \advance\@tempdima by\@kumitatesidesp@ce\relax
  \advance\@tempdima by\@kumitatesidesp@ce\relax
  \edef\@kumitateboxwidth{\the\@tempdima}%
  \lower\@kumitatesagehaba%
   \hbox{%
    \ifkumitateboxleft
    \else
     \vrule height\@kumitatevruleheight width\@kumitaterule%
    \fi
    \vbox{%
     \hbox to\@kumitateboxwidth{%
      \hss$#2$\hss
     }%
     \kern\@kumitatebottomsp@ce%
     \hrule height\@kumitaterule%
    }%
    \ifkumitateboxleft
     \vrule height\@kumitatevruleheight width\@kumitaterule%
     \global\kumitateboxleftfalse
    \else
     \global\kumitateboxlefttrue
    \fi
   }%
 \egroup
}%
%labelenum<num>の括弧の設定
%\Setlabelenum{2}{(\,}{\,)}
%->\def\labeenumii{(\,\theenumii\,)}
%  \prelabelenumii=(\,
%  \postlabelenumii=\,)
\def\Setlabelenum#1#2#3{%
 \expandafter\gdef\csname prelabelenum\romannumeral#1\endcsname{#2}%
 \expandafter\gdef\csname postlabelenum\romannumeral#1\endcsname{#3}%
 \expandafter\def\csname labelenum\romannumeral#1\endcsname{\expandafter#2\csname theenum\romannumeral#1\endcsname#3}%
}%
\Setlabelenum{1}{(}{)}%
\Setlabelenum{2}{(}{)}%
\Setlabelenum{3}{(}{)}%
\Setlabelenum{4}{(}{)}%
%%%% eqnarrayなどの番号の前のリーダーの長さの設定
\def\SetPreEqLeaderLength#1{%
 \preEqlabel{\hbox to#1{\leaders\hbox to.33333zw{\hss\raise.2zh\hbox{.}\hss}\hfill}}%
}%
\SetPreEqLeaderLength{.1\linewidth}%
%その他の設定
\let\para\heikou
\let\Vec\bekutoru
\let\Naiseki\emNaiseki
\let\Souji\souzi
\apnlist{\listparindent=\parindent}%enumerate環境などの設定
\let\oriHeadNumber=\HeadNumber
%%hyperref対応
\newif\ifNoHRSection
\NoHRSectionfalse
\def\HeadNumber{%
	\ifNoHRSection
		\refstepcounter{section}%
	\fi
	\oriHeadNumber
}%
\let\ori解説=\解説
\def\解説{%
	\ifNoHRSection
		\refstepcounter{section}%
	\fi
	\ori解説
}%
\def\setexamindex#1{%
	\phantomsection
	\addcontentsline{toc}{section}{#1}%
}%
% node[(n|s|w|e|ne|nw|se|sw)]{hoge};
% を使用可能に 2015/10/15
\tikzset{n/.style={above=#1}}%
\tikzset{s/.style={below=#1}}%
\tikzset{w/.style={left=#1}}%
\tikzset{e/.style={right=#1}}%
\tikzset{ne/.style={above right=#1}}%
\tikzset{nw/.style={above left=#1}}%
\tikzset{se/.style={below right=#1}}%
\tikzset{sw/.style={below left=#1}}%
\tikzset{every node/.style={inner sep=2pt}}%2015/03/08:1.5ptから2ptに変更
\tikzset{mydash/.style={dash pattern=#1}}
\tikzset{mydash/.default=on 1.5pt off 1.5pt}
\tikzset{every pin edge/.style={<-,>=stealth}}
\tikzset{myarrow/.style={>={#1}}}%2015/03/08:myarrowを新設
\tikzset{myarrow/.default={Stealth[length=5pt]}}
\tikzset{3D/.style={x={(1cm,0cm)},y={(.385cm,.385cm)},z={(0cm,1cm)}}}%
\define@key{mytikzpicture}{fontsize}{\def\@MTPfontsize{#1}}
\define@key{mytikzpicture}{margin}{\def\@MTPmargin{#1}}%
\define@key{mytikzpicture}{left margin}{\def\@MTPleftmargin{#1}}%
\define@key{mytikzpicture}{right margin}{\def\@MTPrightmargin{#1}}%
\define@key{mytikzpicture}{above margin}{\def\@MTPabovemargin{#1}}%
\define@key{mytikzpicture}{below margin}{\def\@MTPbelowmargin{#1}}%
\define@key{mytikzpicture}{lmargin}{\def\@MTPleftmargin{#1}}%
\define@key{mytikzpicture}{rmargin}{\def\@MTPrightmargin{#1}}%
\define@key{mytikzpicture}{amargin}{\def\@MTPabovemargin{#1}}%
\define@key{mytikzpicture}{bmargin}{\def\@MTPbelowmargin{#1}}%
\define@key{mytikzpicture}{grid}[true]{\def\@MTPgrid{1}}%
\define@key{mytikzpicture}{grid option}{\def\@MTPgridoption{#1}}%
\define@key{mytikzpicture}{o string}{\def\@MTPostring{#1}}%
\define@key{mytikzpicture}{o string pos}{\def\@MTPostringpos{#1}}%
\define@key{mytikzpicture}{o pos}{\def\@MTPostringpos{#1}}%
\define@key{mytikzpicture}{x string}{\def\@MTPxstring{#1}}%
\define@key{mytikzpicture}{y string}{\def\@MTPystring{#1}}%
\define@key{mytikzpicture}{x string pos}{\def\@MTPxstringpos{#1}}%
\define@key{mytikzpicture}{y string pos}{\def\@MTPystringpos{#1}}%
\define@key{mytikzpicture}{x pos}{\def\@MTPxstringpos{#1}}%
\define@key{mytikzpicture}{y pos}{\def\@MTPystringpos{#1}}%
\def\mytikzpicture{\@ifstar{\def\@MTPxyaxis{0}\@mytikzpicture}{\def\@MTPxyaxis{1}\@mytikzpicture}}%
\def\@mytikzpicture{\@ifnextchar<{\@@mytikzpicture}{\@@mytikzpicture<>}}%
\def\@@mytikzpicture<#1>{\@ifnextchar[{\@@@mytikzpicture<#1>}{\@@@mytikzpicture<#1>[]}}%
\def\@@@mytikzpicture<#1>[#2](#3,#4)(#5,#6){%
 \def\@MTPfontsize{\scriptsize}%
% \def\@MTPleftmargin{.25cm}%
%% margin 関連の調整 20150623 start
% \def\@MTPleftmargin{.25}%
% \let\@MTPrightmargin=\@MTPleftmargin
% \let\@MTPabovemargin=\@MTPleftmargin
% \let\@MTPbelowmargin=\@MTPleftmargin
% \def\@MTPmargin{}%
 \def\@MTPmargin{.25}%
 \let\@MTPleftmargin=\@MTPmargin
 \let\@MTPrightmargin=\@MTPmargin
 \let\@MTPabovemargin=\@MTPmargin
 \let\@MTPbelowmargin=\@MTPmargin
 \def\@MTPgrid{0}%
 \def\@MTPgridoption{}%
 \def\@MTPostring{O}%
 \def\@MTPxstring{$x$}%
 \def\@MTPystring{$y$}%
 \def\@MTPostringpos{below left}%
 \def\@MTPxstringpos{above}%
 \def\@MTPystringpos{left}%
 \setkeys{mytikzpicture}{#1}%
%% 一度すべてのマージンを margin と同じにして
%% 再度上下左右のマージンを読み込む
%% 順に margin=.2,lmargin=.3,bmargin=.5 と指定すると
%% amarginとrmarginは.2にlmarginとbmarginはそれぞれ設定した値になるはず
 \let\@MTPleftmargin=\@MTPmargin
 \let\@MTPrightmargin=\@MTPmargin
 \let\@MTPabovemargin=\@MTPmargin
 \let\@MTPbelowmargin=\@MTPmargin
 \setkeys{mytikzpicture}{#1}%
% \ifx\@MTPmargin\@empty
% \else
%  \let\@MTPleftmargin=\@MTPmargin
%  \let\@MTPrightmargin=\@MTPmargin
%  \let\@MTPabovemargin=\@MTPmargin
%  \let\@MTPbelowmargin=\@MTPmargin
% \fi
%% margin 関連の調整 20150623 end
 \begin{tikzpicture}[x=1cm,y=1cm,>=stealth,#2]%(#3,#4)(#5,#6)
  \def\@xmin{#3}\def\@xmax{#4}%
  \def\@ymin{#5}\def\@ymax{#6}%
  \let\xmin=\@xmin
  \let\xmax=\@xmax
  \let\ymin=\@ymin
  \let\ymax=\@ymax
  \edef\truexmin{\xmin-\@MTPleftmargin}%2015/06/06 \true(xmin|xmax|ymin|ymax) の追加
  \edef\truexmax{\xmax+\@MTPrightmargin}%
  \edef\trueymin{\ymin-\@MTPbelowmargin}%
  \edef\trueymax{\ymax+\@MTPabovemargin}%
  \coordinate(O)at(0,0);
  \coordinate(XMIN)at(#3,0);
  \coordinate(XMAX)at(#4,0);
  \coordinate(YMIN)at(0,#5);
  \coordinate(YMAX)at(0,#6);
  \coordinate(RT)at(#4,#6);
  \coordinate(RB)at(#4,#5);
  \coordinate(LT)at(#3,#6);
  \coordinate(LB)at(#3,#5);
  \coordinate(trueXMIN)at(#3-\@MTPleftmargin,0);
  \coordinate(trueXMAX)at(#4+\@MTPrightmargin,0);
  \coordinate(trueYMIN)at(0,#5-\@MTPbelowmargin);
  \coordinate(trueYMAX)at(0,#6+\@MTPabovemargin);
  \coordinate(trueRT)at(#4+\@MTPrightmargin,#6+\@MTPabovemargin);
  \coordinate(trueRB)at(#4+\@MTPrightmargin,#5-\@MTPbelowmargin);
  \coordinate(trueLT)at(#3-\@MTPleftmargin,#6+\@MTPabovemargin);
  \coordinate(trueLB)at(#3-\@MTPleftmargin,#5-\@MTPbelowmargin);
%  \path[name path=Frame](RT)--(RB)--(LB)--(LT)--cycle;
  \path[name path=Frame](LB)rectangle(RT);
%  \path[name path=trueFrame](trueRT)--(trueRB)--(trueLB)--(trueLT)--cycle;
  \path[name path=trueFrame](trueLB)rectangle(trueRT);
  \path[name path=XAXIS](XMIN)--(XMAX);
  \path[name path=YAXIS](YMIN)--(YMAX);
  \pgfmathparse{sqrt(pow(#3-#4,2)+pow(#5-#6,2))}%
  \let\@MTPdiagonal=\pgfmathresult
%  \path let \p1=($(#3,#5)-(#4,#6)$),\n1={veclen(\x1,\y1)} in
%   node {\xdef\@MTPdiagonal{\n1}};
  \clip(trueLB)rectangle(trueRT);%描画範囲の指定
%  \clip(#3-\@MTPleftmargin,#5-\@MTPbelowmargin)rectangle(#4+\@MTPrightmargin,#6+\@MTPabovemargin);
  \@MTPfontsize
  \ifnum\@MTPxyaxis=\@ne\relax%座標軸の描画と縦軸・横軸・原点の記号の配置
   \draw[->](#3,0)--(#4,0);
%node[\@MTPxstringpos]{\@MTPxstring};
   \expandafter\expandafter\expandafter\node\expandafter\space\expandafter a\expandafter t\expandafter(\expandafter
  X\expandafter M\expandafter A\expandafter X\expandafter)\expandafter[\@MTPxstringpos]{\@MTPxstring};
   \draw[->](0,#5)--(0,#6);
%node[\@MTPystringpos]{\@MTPystring};
   \expandafter\expandafter\expandafter\node\expandafter\space\expandafter a\expandafter t\expandafter(\expandafter
  Y\expandafter M\expandafter A\expandafter X\expandafter)\expandafter[\@MTPystringpos]{\@MTPystring};
   \expandafter\expandafter\expandafter\node\expandafter\space\expandafter a\expandafter t\expandafter(\expandafter O\expandafter)\expandafter[\@MTPostringpos]{\@MTPostring};
%   \node at(O)[\@MTPostringpos]{\@MTPostring};
  \fi
  \ifnum\@MTPgrid=\@ne\relax%グリッドの描画
   \draw[help lines,\@MTPgridoption](#3,#5)grid(#4,#6);
  \fi
}%
\def\endmytikzpicture{%
 \end{tikzpicture}%
}%
%% \mytikzarc<オプション1>[オプション2]{中心}{半径}{開始角}{終了角}
%% \mytikzarc*[option]{中心}{半径}{開始角}{終了角}
%% 中心・半径・開始角・終了角を指定して弧を描く
%% *をつけると弧と中心を結び扇形を描く
%% オプション1
%%  number of line segment:線分の個数defalut=0
%%   1以上のときは等弧記号を指定された個数だけ弧上に配置する
%%   等弧記号の設定は\tikzset{MTAstyle/.style={line width=1pt,blue}}
%%   などと指定する
%%   \tikzset{MTAstyle/.default={line width=.4pt}}である
%% オプション2:fillなどTikZのオプションをいれる．
\newif\ifmytikzoutline
\mytikzoutlinefalse
\tikzset{MTAstyle/.style={#1}}%
\tikzset{MTAstyle/.default={line width=.4pt}}%
\define@key{mytikzarc}{number of line segment}{\def\@MTAnumber{#1}}%default=0
\define@key{mytikzarc}{space}{\@tempdima=#1}%default=1.5pt
\define@key{mytikzarc}{length}{\@tempdimb=#1}%default=3pt
\def\mytikzarc{\@ifstar{\mytikzoutlinetrue\@mytikzarc}{\mytikzoutlinefalse\@mytikzarc}}
\def\@mytikzarc{\@ifnextchar<{\@@mytikzarc}{\@@mytikzarc<>}}
\def\@@mytikzarc<#1>{\@ifnextchar[{\@@@mytikzarc<#1>}{\@@@mytikzarc<#1>[]}}
\def\@@@mytikzarc<#1>[#2]#3#4#5#6{%
 \bgroup
 \def\@mytikz@arc@option{}%
 \def\@MTAnumber{0}%
 \@tempdima=1.5pt\relax%間隔
 \@tempdimb=3pt\relax%長さ
 \setkeys{mytikzarc}{#1}%
 \ISub\@MTAnumber\@ne\@MTAMAX
 \multiply\@tempdima by\@MTAMAX
 \ifmytikzoutline
  \draw[#2] ($#3$)--($#3+(#5:#4)$) arc [start angle=#5,end angle=#6,radius=#4]--cycle;
 \else
  \draw[#2] ($#3+(#5:#4)$) arc [start angle=#5,end angle=#6,radius=#4];
 \fi
 \pgfmathparse{(#6-#5)/2+#5}%
 \let\@MTAresult=\pgfmathresult
 \ifdim\@tempdima>\z@\relax
  \foreach \@MTAnum in {0,...,\@MTAMAX}{%
   \draw[MTAstyle] let \p1=($(\@MTAresult:#4)+#3$),%
    \p{A}=($(\x1,\y1)!.5\@tempdima!90:#3$),\p{B}=($(\x1,\y1)!.5\@tempdima!-90:#3$),%
     \p{O}=($(\x{A},\y{A})!2!(\x{B},\y{B})$) in
     ($(\x{A},\y{A})!\@MTAnum/\@MTAMAX!(\x{B},\y{B})!.5\@tempdimb!90:(\x{O},\y{O})$)
      --
     ($(\x{A},\y{A})!\@MTAnum/\@MTAMAX!(\x{B},\y{B})!.5\@tempdimb!-90:(\x{O},\y{O})$);
  }%
 \else
  \ifnum\@MTAnumber>\z@\relax
   \draw[MTAstyle] let \p1=($(\@MTAresult:#4)+#3$) in
    ($(\x1,\y1)!.5\@tempdimb!#3$)--($(\x1,\y1)!-.5\@tempdimb!#3$);
  \fi
 \fi
 \egroup
 \mytikzoutlinefalse
}%
%% \mytikzbunten<オプション1>[オプション2]{端点1端点2}{分割数}
%% 2点{端点1}{端点2}を結ぶ線分を<分割数>等分しこの線分と垂直な線分を各点に配置する
%% オプション1
%%  length:配置する線分の長さ
%%  both ends:両端にも線分を配置する
\define@key{mytikzbunten}{length}{\@tempdima=#1\relax}%default=4pt
\define@key{mytikzbunten}{both ends}[true]{\mytikzoutlinetrue}
\def\mytikzbunten{\@ifnextchar<{\@mytikzbunten}{\@mytikzbunten<>}}
\def\@mytikzbunten<#1>{\@ifnextchar[{\@@mytikzbunten<#1>}{\@@mytikzbunten<#1>[]}}
\def\@@mytikzbunten<#1>[#2]#3#4{%
 \bgroup
  \let\@xp=\expandafter
%  \mytikzcoordinateset{@MTB}{#3}%
%  \@xp\coordinate\@xp(\@xp @\@xp M\@xp T\@xp B\@xp A\@xp)\@xp a\@xp t\@MTBpre;
%  \@xp\coordinate\@xp(\@xp @\@xp M\@xp T\@xp B\@xp B\@xp)\@xp a\@xp t\@MTBpost;
  \mytikzsetcoordinate{@MTBA}{#3}%
  \mytikzsetcoordinate{@MTBB}{\@MTBApost}%
  \@tempdima=4pt\relax
  \mytikzoutlinefalse
  \setkeys{mytikzbunten}{#1}%
  \divide\@tempdima by\tw@\relax
  \ifmytikzoutline
   \def\@MTBbegin{0}%
   \def\@MTBend{#4}%
  \else
   \def\@MTBbegin{1}%
   \ISub{#4}{1}\@MTBend
  \fi
  \foreach \NUM in {\@MTBbegin,...,\@MTBend}{%
   \draw[#2] let \p1=($(@MTBA)!\NUM/#4!(@MTBB)$),\p2=($(@MTBA)!2!(@MTBB)$) in
    ($(\x1,\y1)!\@tempdima!90:(\x2,\y2)$)--($(\x1,\y1)!\@tempdima!-90:(\x2,\y2)$);
%% (\x2,\y2)が#4だと両端を描画するときの終端では
%%  回転の中心と回転させる点が一致してしまうため線分が描画できない
  }%
  \mytikzoutlinefalse
 \egroup
}%
%% \mytikztouhenkigouput<オプション1>[オプション2]{端点1}{端点2}
%% オプション1
%%  space:複数の線分の間隔default=3pt
%%  length:配置する線分の長さdefault=8pt
%%  number of line segment:配置する線分の個数defalut=2
%% オプション2:TikZのオプション
\define@key{mytikztouhenkigouput}{space}{\@tempdima=#1\relax}
\define@key{mytikztouhenkigouput}{length}{\@tempdimb=#1\relax}
\define@key{mytikztouhenkigouput}{number of line segment}{\def\@MTTKPnumber{#1}}
\def\mytikztouhenkigouput{\@ifnextchar<{\@mytikztouhenkigouput}{\@mytikztouhenkigouput<>}}
\def\@mytikztouhenkigouput<#1>{\@ifnextchar[{\@@mytikztouhenkigouput<#1>}{\@@mytikztouhenkigouput<#1>[]}}
\def\@@mytikztouhenkigouput<#1>[#2]#3{%
 \bgroup
  \let\@xp=\expandafter
%  \mytikzcoordinateset{@MTTKP}{#3}%
%  \@xp\coordinate\@xp(\@xp @\@xp M\@xp T\@xp T\@xp K\@xp P\@xp A\@xp)\@xp a\@xp t\@MTTKPpre;
%  \@xp\coordinate\@xp(\@xp @\@xp M\@xp T\@xp T\@xp K\@xp P\@xp B\@xp)\@xp a\@xp t\@MTTKPpost;
  \mytikzsetcoordinate{@MTTKPA}{#3}%
  \mytikzsetcoordinate{@MTTKPB}{\@MTTKPApost}%
  \tikzset{@MTTKPstyle/.style={line width=.4pt}}%
  \@tempdima=3pt\relax%線分の間隔
  \@tempdimb=8pt\relax%線分の長さ
  \def\@MTTKPnumber{2}%線分の個数
  \setkeys{mytikztouhenkigouput}{#1}%
  \ISub\@MTTKPnumber{1}\@MTTKPtimes
  \@tempdimc=\@tempdima\relax
  \multiply\@tempdima by\@MTTKPtimes\relax
  \ifnum\@MTTKPnumber=\@ne
   \draw[@MTTKPstyle,#2]($(@MTTKPA)!.5!(@MTTKPB)$)--($(@MTTKPA)!.5!(@MTTKPB)!.5\@tempdimb!90:(@MTTKPB)$)
            ($(@MTTKPA)!.5!(@MTTKPB)$)--($(@MTTKPA)!.5!(@MTTKPB)!.5\@tempdimb!90:(@MTTKPA)$);
  \else
   \foreach \number in {0,...,\@MTTKPtimes}{%
    \draw[@MTTKPstyle,#2] let \p1=($(@MTTKPA)!.5!(@MTTKPB)!.5\@tempdima!180:(@MTTKPB)$),%
     \p2=($(@MTTKPA)!.5!(@MTTKPB)!.5\@tempdima!180:(@MTTKPA)$)in
     ($(\x1,\y1)!\number/\@MTTKPtimes!(\x2,\y2)$)--($(\x1,\y1)!\number/\@MTTKPtimes!(\x2,\y2)!.5\@tempdimb!90:(@MTTKPB)$)
     ($(\x1,\y1)!\number/\@MTTKPtimes!(\x2,\y2)$)--($(\x1,\y1)!\number/\@MTTKPtimes!(\x2,\y2)!.5\@tempdimb!90:(@MTTKPA)$);
   }%
  \fi
 \egroup
}%
%% \mytikztouhenkigou<オプション1>[オプション2]{線分列}
%% オプション1
%%  space:複数の線分の間隔default=3pt
%%  length:配置する線分の長さdefault=4pt
%%  number of line segment:配置する線分の個数defalut=2
%% オプション2:TikZのオプション
%% 線分列は(端点1)(端点2)を;で区切る
\def\mytikztouhenkigou{\@ifnextchar<{\@mytikztouhenkigou}{\@mytikztouhenkigou<>}}%
\def\@mytikztouhenkigou<#1>{\@ifnextchar[{\@@mytikztouhenkigou<#1>}{\@@mytikztouhenkigou<#1>[]}}
\def\@@mytikztouhenkigou<#1>[#2]#3{%
 \bgroup
%  \edef\@MTTKbody{#3}%
  \edef\@MTTKFoption{#1}%
  \edef\@MTTKSoption{#2}%
%  \edef\@MTTKtimes{#4}
  \@mytikztouhenkigouloop#3;%
 \egroup
}%
\def\@mytikztouhenkigouloop#1;{%
 \let\@xp=\expandafter
 \@xp\@xp\@xp\mytikztouhenkigouput\@xp\@xp\@xp<\@xp\@MTTKFoption\@xp>\@xp[\@MTTKSoption]{#1}%{\@MTTKtimes}%
 \@ifnextchar({\@mytikztouhenkigouloop}{}%
}%
%% \mytikzkakukigouput<オプション1>[オプション2]{座標1座標2座標3}{配置文字列}
%% オプション1
%%  radius:半径
%%  fontsize:配置文字列のサイズdefault=\scriptsize
%%  arc:弧も描画する
\define@key{mytikzkakukigouput}{radius}{\def\@MTKPradius{#1}}%
\define@key{mytikzkakukigouput}{arc radius}{\def\@MTKP@arc@radius{#1}}%
\define@key{mytikzkakukigouput}{string radius}{\def\@MTKP@string@radius{#1}}%
\define@key{mytikzkakukigouput}{fontsize}{\let\@MTKP@fontsize=#1\relax}%
\define@key{mytikzkakukigouput}{arc}[true]{\def\@MTKKP@arc@flag{1}}%
\define@key{mytikzkakukigouput}{fill}[true]{\mytikzoutlinetrue}%
\def\mytikzkakukigouput{\@ifnextchar<{\@mytikzkakukigouput}{\@mytikzkakukigouput<>}}%
\def\@mytikzkakukigouput<#1>{\@ifnextchar[{\@@mytikzkakukigouput<#1>}{\@@mytikzkakukigouput<#1>[]}}%
\def\@@mytikzkakukigouput<#1>[#2]#3#4{%
 \def\@MTKP@arc@radius{7.5pt}%
 \def\@MTKP@string@radius{15pt}%
 \let\@MTKP@fontsize=\scriptsize
 \def\@MTKKP@arc@flag{0}%
 \mytikzsetcoordinate{@MTKP@A}{#3}%
 \mytikzsetcoordinate{@MTKP@B}{\@MTKP@Apost}%
 \mytikzsetcoordinate{@MTKP@C}{\@MTKP@Bpost}%
 \setkeys{mytikzkakukigouput}{#1}%
 \path let \p1=($(@MTKP@A)-(@MTKP@B)$),\p2=($(@MTKP@C)-(@MTKP@B)$) in
  node {%
   \pgfmathparse{atan2(\y1,\x1)}%
   \global\let\@MTKP@A@angle=\pgfmathresult
   \pgfmathparse{atan2(\y2,\x2)-atan2(\y1,\x1)}%
   \ifdim\pgfmathresult pt<0pt\relax
    \pgfmathparse{360+\pgfmathresult}%
   \fi
   \global\let\@MTKP@delta@angle=\pgfmathresult
%        \pgfmathparse{atan2(\y1,\x1)}%
%        \ifdim\pgfmathresult pt<0pt
%         \pgfmathparse{\pgfmathresult+360}%
%        \fi
%        \global\let\@MTKP@A@angle=\pgfmathresult
%        \pgfmathparse{atan2(\y2,\x2)}%
%        \ifdim\pgfmathresult pt<0pt
%         \pgfmathparse{\pgfmathresult+360}%
%        \fi
%        \let\@MTKP@C@angle=\pgfmathresult
%        \pgfmathparse{\@MTKP@C@angle-\@MTKP@A@angle}%
%        \global\let\@MTKP@delta@angle=\pgfmathresult
       };%
 \node at($(@MTKP@B)!\@MTKP@string@radius!\@MTKP@delta@angle/2:(@MTKP@A)$){\@MTKP@fontsize#4};
 \ifnum\@MTKKP@arc@flag=\@ne
  \draw[#2]($(@MTKP@B)!\@MTKP@arc@radius!(@MTKP@A)$)%
   arc[start angle=\@MTKP@A@angle,delta angle=\@MTKP@delta@angle,radius=\@MTKP@arc@radius];
 \fi
 \ifmytikzoutline
  \fill[#2]($(@MTKP@B)!\@MTKP@arc@radius!(@MTKP@A)$)%
   arc[start angle=\@MTKP@A@angle,delta angle=\@MTKP@delta@angle,radius=\@MTKP@arc@radius]--(@MTKP@B)--cycle;
 \fi
 \mytikzoutlinefalse
}%
%\def\@@mytikzkakukigouput<#1>[#2]#3#4{%
% \def\@MTKP@arc@radius{7.5pt}%
% \def\@MTKP@string@radius{15pt}%
% \let\@MTKP@fontsize=\scriptsize
% \def\@MTKKP@arc@flag{0}%
% \mytikzsetcoordinate{@MTKP@A}{#3}%
% \mytikzsetcoordinate{@MTKP@B}{\@MTKP@Apost}%
% \mytikzsetcoordinate{@MTKP@C}{\@MTKP@Bpost}%
% \setkeys{mytikzkakukigouput}{#1}%
% \mytikzgetangle{($(@MTKP@B)+(1,0)$)(@MTKP@B)(@MTKP@A)}\@MTKP@A@angle
% \mytikzgetangle{(@MTKP@A)(@MTKP@B)(@MTKP@C)}\@MTKP@delta@angle
% \node at($(@MTKP@B)!\@MTKP@string@radius!\@MTKP@delta@angle/2:(@MTKP@A)$){\@MTKP@fontsize#4};
% \ifnum\@MTKKP@arc@flag=\@ne 
%  \draw[#2]($(@MTKP@B)!\@MTKP@arc@radius!(@MTKP@A)$)%
%   arc[start angle=\@MTKP@A@angle,delta angle=\@MTKP@delta@angle,radius=\@MTKP@arc@radius];
% \fi
% \ifmytikzoutline
%  \fill[#2]($(@MTKP@B)!\@MTKP@arc@radius!(@MTKP@A)$)%
%   arc[start angle=\@MTKP@A@angle,delta angle=\@MTKP@delta@angle,radius=\@MTKP@arc@radius]--(@MTKP@B)--cycle;
% \fi
% \mytikzoutlinefalse
%}%
\let\mytikzkakukigou=\mytikzkakukigouput
%% \mytikztoukakukigou<オプション1>[オプション2]{座標1座標2座標3}{配置文字列}
%% オプション1
%%  radius:半径
%%  fontsize:配置文字列のサイズdefault=\scriptsize
%%  arc:弧も描画する
\def\mytikztoukakukigou{\@ifnextchar<{\@mytikztoukakukigou}{\@mytikztoukakukigou<>}}%
\def\@mytikztoukakukigou<#1>{\@ifnextchar[{\@@mytikztoukakukigou<#1>}{\@@mytikztoukakukigou<#1>[]}}%
\def\@@mytikztoukakukigou<#1>[#2]#3#4{%
 \@@@mytikztoukakukigou<#1>[#2]{#4}#3;%
}%
\def\@@@mytikztoukakukigou<#1>[#2]#3#4;{%
 \mytikzkakukigouput<#1>[#2]{#4}{#3}%
 \@ifnextchar({\@@@mytikztoukakukigou<#1>[#2]{#3}}{}%
}%
%% \mypgfmathatan#1#2
%% atan2(x,y)の0度以上360未満版
%% atan2(y,x)に変更される(2014/03/10)
%% \#2に角度を格納
\def\mypgfmathatan#1#2{%
 \mytikzsetcoordinate{@MPMA}{#1}%
 \mytikzsetcoordinate{@MPMB}{\@MPMApost}%
 \path let \p1=($(@MPMB)-(@MPMA)$) in node
  {%
   \pgfmathparse{%
    ifthenelse(less(\x1,0)%
     ,%
     ifthenelse(less(\y1,0)%
      ,%
      atan2(\y1,\x1)+360%
      ,%
      atan2(\y1,\x1)%
     )%
     ,%
     ifthenelse(less(\y1,0)
      ,%
      atan2(\y1,\x1)+360%
      ,%
      atan2(\y1,\x1)%
     )%
    )%
   }%
   \global\let#2\pgfmathresult
  };%
}%
%% \mytikzgetangle{頂点1頂点2頂点3}{制御綴}
%%  頂点2が中心
\def\mytikzgetangle#1#2{%
 \bgroup
  \let\@xp=\expandafter
%  \mytikzcoordinateset{@MTGA}{#1}%
%  \@xp\coordinate\@xp(\@xp @\@xp M\@xp T\@xp G\@xp A\@xp A\@xp)\@xp a\@xp t\@MTGApre;
%  \mytikzcoordinateset{@MTGA}{\@MTGApost}%
%  \@xp\coordinate\@xp(\@xp @\@xp M\@xp T\@xp G\@xp A\@xp B\@xp)\@xp a\@xp t\@MTGApre;
%  \@xp\coordinate\@xp(\@xp @\@xp M\@xp T\@xp G\@xp A\@xp C\@xp)\@xp a\@xp t\@MTGApost;
  \mytikzsetcoordinate{@MTGAA}{#1}%
  \mytikzsetcoordinate{@MTGAB}{\@MTGAApost}%
  \mytikzsetcoordinate{@MTGAC}{\@MTGABpost}%
  \mypgfmathatan{(@MTGAC)(@MTGAB)}\@MTGAangleI
  \mypgfmathatan{(@MTGAA)(@MTGAB)}\@MTGAangleII
  \pgfmathparse{\@MTGAangleI-\@MTGAangleII}%
  \ifdim\pgfmathresult pt<\z@ pt
   \pgfmathparse{360+(\pgfmathresult)}%
  \fi
  \xdef#2{\pgfmathresult}%
%  \path let \p1=($(@MTGAC)-(@MTGAB)$),\p2=($(@MTGAA)-(@MTGAB)$) in
%   node {\pgfmathparse{(atan2(\x1,\y1)-atan2(\x2,\y2))}\xdef#2{\pgfmathresult}};
 \egroup
}%
%% \mytikzhenko<オプション1>[オプション2]{端点1端点2}{配置文字列}
%% オプション1
%%  distance:辺と配置文字列との距離default=10pt
%%  inner sep:配置文字列と白塗り背景の間隔default=1pt
%%  fontsize:配置文字列の文字サイズdefault=\scriptsize
%%  rotate:配置文字列の回転
%%    0(default):回転なし
%%    1:弦と平行(文字列の並びは端点1から端点2へ)
%%   -1:弦と平行(文字列の並びは端点2から端点1へ)
%%  \tikzset{MTHstyle={line width=1pt,dash pattern=on 1pt off 1pt}}
%%   のように波線を変更することもできる．
%% 将来的に波線のオプションと文字列のオプションを分ける必要が出るかもしれない
\tikzset{MTHstyle/.style={#1}}%
\tikzset{MTHstyle/.default={line width=.4pt,dash pattern=on 2pt off 2pt}}%
\define@key{mytikzhenko}{distance}{\def\@MTHdistance{#1}}%弦と弧の距離default=.5em
\define@key{mytikzhenko}{inner sep}{\def\@MTHinnersep{#1}}%default=1pt
\define@key{mytikzhenko}{fontsize}{\let\@MTHfontsize=#1}%default=\scriptsize
\define@key{mytikzhenko}{rotate}{\def\@MTHrotate{#1}}%defalut=0:0で無回転，1で#3->#4の向き，-1で#4->#3の向き
\def\mytikzhenko{\@ifnextchar<{\@mytikzhenko}{\@mytikzhenko<>}}%
\def\@mytikzhenko<#1>{\@ifnextchar[{\@@mytikzhenko<#1>}{\@@mytikzhenko<#1>[]}}%
\def\@@mytikzhenko<#1>[#2]#3#4{%
 \def\@MTHdistance{.75em}%
 \def\@MTHangle{20}%
 \def\@MTHinnersep{1pt}%
 \let\@MTHfontsize=\scriptsize
 \let\@MTHrotate=\z@
 \mytikzsetcoordinate{@MTH@A}{#3}%
 \mytikzsetcoordinate{@MTH@B}{\@MTH@Apost}%
 \setkeys{mytikzhenko}{#1}%
 \coordinate(@MTH@P)at($(@MTH@A)!.5!(@MTH@B)!\@MTHdistance!90:(@MTH@A)$);
% \fill(@MTH@A)circle[radius=1.5pt];
% \fill(@MTH@B)circle[radius=1.5pt];
% \fill(@MTH@P)circle[radius=1.5pt];
 \mytikzgaishin{(@MTH@A)(@MTH@B)(@MTH@P)}{@MTH@GP}%
 \mytikzgetangle{($(@MTH@GP)+(1,0)$)(@MTH@GP)(@MTH@A)}\@MTH@sangle
 \mytikzgetangle{($(@MTH@GP)+(1,0)$)(@MTH@GP)(@MTH@B)}\@MTH@eangle
 \ifdim\@MTH@sangle pt>\@MTH@eangle pt
  \mypgfmathparse{\@MTH@sangle-360}\@MTH@sangle
 \fi
 \ifnum\@MTHrotate=\z@
  \let\@MTH@AB@angle=\z@
 \else
  \mytikzgetangle{($(@MTH@A)+(1,0)$)(@MTH@A)(@MTH@B)}\@MTH@AB@angle
  \mypgfmathparse{\@MTH@AB@angle+(\@MTHrotate-1)*90}\@MTH@AB@angle
 \fi
 \draw[mydash,#2](@MTH@A)arc[start angle=\@MTH@sangle,end angle=\@MTH@eangle,radius=\GR];
 \node at(@MTH@P)[inner sep=0pt,rotate=\@MTH@AB@angle]{\fboxsep=\@MTHinnersep\colorbox{white}{#4}};%
}%
%% \mytikzHenko*<#1>[#2]{#3}{#4}%
%% *:弧を表示しないときに指定する
%% #1:オプション1
%%   angle:弦から出る角度の指定
%%   fboxsep:表示文字列の周りのマージン
%%   rotate:文字列の回転指定(0:回転させない，1:始点から終点，-1:終点から始点)
%%   pos:文字列の配置位置(.5)
%% #2:オプション2(弧の色などを指定)
%% #3:弦を表す2点(始点・終点の順に指定)
%% #4:表示する文字列の指定
\define@key{mytikzHenko}{angle}{\def\@MTH@angle{#1}}%
\define@key{mytikzHenko}{fboxsep}{\def\@MTH@fboxsep{#1}}%
\define@key{mytikzHenko}{rotate}{\def\@MTH@rotate{#1}}%
\define@key{mytikzHenko}{pos}{\def\@MTH@pos{#1}}%
\def\mytikzHenko{\@ifstar{\def\@MTH@flag{0}\@mytikzHenko}{\def\@MTH@flag{1}\@mytikzHenko}}%
\def\@mytikzHenko{\@ifnextchar<{\@@mytikzHenko}{\@@mytikzHenko<>}}%
\def\@@mytikzHenko<#1>{\@ifnextchar[{\@@@mytikzHenko<#1>}{\@@@mytikzHenko<#1>[]}}%
\def\@@@mytikzHenko<#1>[#2]#3#4{%
 \mytikzsetcoordinate{@MTH@F}{#3}%
 \mytikzsetcoordinate{@MTH@S}{\@MTH@Fpost}%
 \let\@MTH@angle=\@empty
 \def\@MTH@fboxsep{1pt}%
 \def\@MTH@rotate{0}%
 \def\@MTH@pos{.5}%
 \mytikzgetangle{($(@MTH@F)+(1,0)$)(@MTH@F)(@MTH@S)}\@FtoS@angle
 \setkeys{mytikzHenko}{#1}%
 \ifnum\@MTH@flag=\@ne
  \ifx\@MTH@angle\@empty
   \draw[mydash,#2](@MTH@F)to[bend right](@MTH@S);
  \else
   \draw[mydash,#2](@MTH@F)to[bend right=\@MTH@angle](@MTH@S);
  \fi
 \fi
 \ifnum\@MTH@rotate=\z@
 \else
  \mypgfmathparse{\@FtoS@angle+(\@MTH@rotate-1)*90}\@MTH@rotate
 \fi
 \ifx\@MTH@angle\@empty
  \path(@MTH@F)to[bend right]node[rotate=\@MTH@rotate,pos=\@MTH@pos]%
       {\fboxsep=\@MTH@fboxsep\colorbox{white}{#4}}(@MTH@S);
 \else
  \path(@MTH@F)to[bend right=\@MTH@angle]node[rotate=\@MTH@rotate,pos=\@MTH@pos]%
       {\fboxsep=\@MTH@fboxsep\colorbox{white}{#4}}(@MTH@S);
 \fi
}%
%% \mytikzsetcoordinate#1#2
%% #2の最初の座標の名前を#1と設定する
%% 残りは\csname#1post\endcsnameに保存される
%% \mytikzsetcoordinate{O}{(0,0)(2,0)(1,1)}
%% \mytikzsetcoordinate{A}{\Opost}
%% \mytikzsetcoordinate{B}{\Apost}
%% は
%% \coordinate(O)at(0,0);
%% \coordinate(A)at(2,0);
%% \coordinate(B)at(1,1);
%% と同じである
\def\mytikzsetcoordinate#1#2{%
 \def\@MTSC@P@name{#1}%
 \c@tempcnta=\z@
 \def\@MTSC@body{}%
 \expandafter\@mytikzsetcoordinate#2;%
 \expandafter\@@@@mytikzsetcoordinate\expandafter{\@MTSC@body}{#1}%
}%
\def\@mytikzsetcoordinate#1{%
 \edef\@MTSC@body{\@MTSC@body#1}%
 \if#1(%
  \advance\c@tempcnta by\@ne
 \fi
 \if#1)%
  \advance\c@tempcnta by\m@ne
 \fi
 \ifnum\c@tempcnta=\z@
  \expandafter\@@mytikzsetcoordinate
 \else
  \expandafter\@mytikzsetcoordinate
 \fi
}%
\def\@@mytikzsetcoordinate{%
 \@ifnextchar;{\@gobble}{\@@@mytikzsetcoodinate}%
}%
\def\@@@mytikzsetcoodinate#1;{%
 \expandafter\def\csname\@MTSC@P@name post\endcsname{#1}%
}%
\def\@@@@mytikzsetcoordinate#1#2{%
 \coordinate(#2)at#1;
}%
%\def\mytikzsetcoordinate#1#2{%
% \bgroup
%  \c@tempcnta=\z@\relax
%  \c@tempcntb=\z@\relax
%  \def\@MTPSpre{}%
%  \def\@MTPSpost{}%
%  \def\@MTPSname{#1}%
%  \let\@xp=\expandafter
%  \@xp\@tfor\@xp\member\@xp:\@xp=#2\do{%
%   \if\member(\relax
%    \advance\c@tempcnta by\@ne\relax
%   \fi
%   \if\member)\relax
%    \advance\c@tempcnta by\m@ne\relax
%   \fi
%   \ifnum\c@tempcntb=\@ne
%    \@xp\@xp\@xp\def\@xp\@xp\@xp\@MTPSpost\@xp\@xp\@xp{\@xp\@MTPSpost\member}%
%   \else
%    \@xp\@xp\@xp\def\@xp\@xp\@xp\@MTPSpre\@xp\@xp\@xp{\@xp\@MTPSpre\member}%
%   \fi
%   \ifnum\c@tempcnta=\z@\relax
%    \c@tempcntb=\@ne\relax
%   \fi
%  }%
%  \@xp\@xp\@xp\coordinate\@xp\@xp\@xp(\@xp\@MTPSname\@xp)\@xp a\@xp t\@MTPSpre;
%%  \@xp\global\@xp\let\csname#1pre\endcsname=\@MTPSpre
%  \@xp\global\@xp\let\csname#1post\endcsname=\@MTPSpost
% \egroup
%}%
%% \#1preに最初の座標
%% \#1postに残りの座標列を設定する
%% \mytikzcoordinateset{hoge}{(1,2)(45:1)($(A)+(B)$)}
%% を実行すると
%% \hogepreに'(1,2)'
%% \hogepostに'(45:1)($(A)+(B)$)'
%% が代入される
\def\mytikzcoordinateset#1#2{%
 \bgroup
  \c@tempcnta=\z@\relax
  \c@tempcntb=\z@\relax
  \def\@MTPSpre{}%
  \def\@MTPSpost{}%
  \let\@xp=\expandafter
  \@xp\@tfor\@xp\member\@xp:\@xp=#2\do{%
   \if\member(\relax
    \advance\c@tempcnta by\@ne\relax
   \fi
   \if\member)\relax
    \advance\c@tempcnta by\m@ne\relax
   \fi
   \ifnum\c@tempcntb=\@ne
    \@xp\@xp\@xp\def\@xp\@xp\@xp\@MTPSpost\@xp\@xp\@xp{\@xp\@MTPSpost\member}%
   \else
    \@xp\@xp\@xp\def\@xp\@xp\@xp\@MTPSpre\@xp\@xp\@xp{\@xp\@MTPSpre\member}%
   \fi
   \ifnum\c@tempcnta=\z@\relax
    \c@tempcntb=\@ne\relax
   \fi
  }%
  \@xp\global\@xp\let\csname#1pre\endcsname=\@MTPSpre
  \@xp\global\@xp\let\csname#1post\endcsname=\@MTPSpost
 \egroup
}%
% \mytikztyokkakukigouput<#1>[#2]#3
%  #1:オプション1
%   size:記号の１辺の長さdefalut=5pt
%  #2:オプション2
%   tikzのオプション
%  #3:記号を置く角の指定
%% 角#3を共有する1辺がsizeの菱形を描く
\define@key{mytikztyokkakukigou}{size}{\def\@MTTKsize{#1}}%
\def\mytikztyokkakukigouput{\@ifnextchar<{\@mytikztyokkakukigouput}{\@mytikztyokkakukigouput<>}}%
\def\@mytikztyokkakukigouput<#1>{\@ifnextchar[{\@@mytikztyokkakukigouput<#1>}{\@@mytikztyokkakukigouput<#1>[]}}%
\def\@@mytikztyokkakukigouput<#1>[#2]#3{%
 \bgroup
  \let\@xp=\expandafter
  \def\@MTTKsize{5pt}%
  \setkeys{mytikztyokkakukigou}{#1}%
%  \mytikzcoordinateset{@MTTKA}{#3}%
%  \mytikzcoordinateset{@MTTKB}{\@MTTKApost}%
%  \@xp\coordinate\@xp(\@xp @\@xp A\@xp)\@xp a\@xp t\@MTTKApre;
%  \@xp\coordinate\@xp(\@xp @\@xp B\@xp)\@xp a\@xp t\@MTTKBpre;
%  \@xp\coordinate\@xp(\@xp @\@xp C\@xp)\@xp a\@xp t\@MTTKBpost;
  \mytikzsetcoordinate{@A}{#3}%
  \mytikzsetcoordinate{@B}{\@Apost}%
  \mytikzsetcoordinate{@C}{\@Bpost}%
  \coordinate(@AH)at($(@B)!\@MTTKsize!(@A)$);
  \coordinate(@CH)at($(@B)!\@MTTKsize!(@C)$);
  \coordinate(@D)at($(@AH)+(@CH)-(@B)$);
  \draw[#2](@B)--(@AH)--(@D)--(@CH)--cycle;
 \egroup
}%
% \mytikztyokkakukigouput<#1>[#2]#3
%  #1:オプション1
%   size:記号の１辺の長さdefalut=5pt
%  #2:オプション2
%   tikzのオプション
%  #3:記号を置く角の列';'で区切って並べる
%% 角#3を共有する1辺がsizeの菱形を描く
\def\mytikztyokkakukigou{\@ifnextchar<{\@mytikztyokkakukigou}{\@mytikztyokkakukigou<>}}%
\def\@mytikztyokkakukigou<#1>{\@ifnextchar[{\@@mytikztyokkakukigou<#1>}{\@@mytikztyokkakukigou<#1>[]}}%
\def\@@mytikztyokkakukigou<#1>[#2]#3{%
 \bgroup
  \@@@mytikztyokkakukigou<#1>[#2]#3;%
 \egroup
}%
\def\@@@mytikztyokkakukigou<#1>[#2]#3;{%
 \mytikztyokkakukigouput<#1>[#2]{#3}%
 \@ifnextchar({\@@@mytikztyokkakukigou<#1>[#2]}{}%
}%
%% \mytikzmaru(白丸)\mytikzmaru(黒丸)
%% \mytikzmaru(*)<#1>[#2]{#3}%
%%  #1:オプション1
%%   radius=丸の半径default=2.5pt
%%  #2:オプション2
%%   tikzのオプション
%%  #3:点列(,区切り)
\define@key{mytikzmaru}{radius}{\def\@MTMradius{#1}}%
\def\mytikzmaru{\@ifstar{\def\@mytikzmarutype{1}\@mytikzmaru}{\def\@mytikzmarutype{0}\@mytikzmaru}}%
\def\@mytikzmaru{\@ifnextchar<{\@@mytikzmaru}{\@@mytikzmaru<>}}%
\def\@@mytikzmaru<#1>{\@ifnextchar[{\@@@mytikzmaru<#1>}{\@@@mytikzmaru<#1>[]}}%
\def\@@@mytikzmaru<#1>[#2]#3{%
% \def\@MTMradius{1.5pt}%
% \setkeys{mytikzmaru}{#1}%
 \ifnum\@mytikzmarutype=\@ne\relax
  \foreach \@point in {#3}
   \fill[black,#2](\@point)circle[radius=1.5pt,#1];
 \else
  \foreach \@point in {#3}
   \draw[black,fill=white,#2](\@point)circle[radius=1.5pt,#1];
 \fi
}%
%% \mytikzmakeintersection<#1>#2#3#4
%% #1:オプション
%%  sort:Sortの基準を設定(#2or#3)default=#2
%% #2:name pathで定められたpath1
%% #3:name pathで定められたpath2
%% #4:交点の前置文字列
%%  hogeとすると交点の名前がhoge-1，hoge-2，...と設定される
%% \mytikzmakeintersection*<#1>#2#3#4で交点とその名前が表示される
%% また，#4Xi，#4Xii，...にはそれぞれ(#4-1)，(#4-2)，...のx座標が
%% #4Yi，#4Yii，...にはそれぞれ(#4-1)，(#4-2)，...のy座標が格納される
\define@key{mytikzmakeintersections}{sort}{\def\@MTMIsort{#1}}%
\def\mytikzmakeintersections{\@ifstar{\def\@MTMIplot{1}\@mytikzmakeintersections}{\def\@MTMIplot{0}\@mytikzmakeintersections}}%
\def\@mytikzmakeintersections{\@ifnextchar<{\@@mytikzmakeintersections}{\@@mytikzmakeintersections<>}}%
\def\@@mytikzmakeintersections<#1>#2#3#4{%
 \def\@MTMIsort{#2}%
 \setkeys{mytikzmakeintersections}{#1}%
 \ifnum\@MTMIplot=\@ne\relax
  \fill[name intersections={of=#2 and #3,name=#4,total=\@total,sort by=\@MTMIsort},red]
   \foreach \@num in {1,...,\@total}
    {(#4-\@num)circle[radius=2pt]node[left]{#4-\@num}};
 \else
  \path[name intersections={of=#2 and #3,name=#4,total=\@total,sort by=\@MTMIsort}]
   \foreach \@num in {1,...,\@total}
    {let \p1=(#4-\@num) in node
     {\pgfkeys{/pgf/number format/.cd,fixed,precision=3}%
      \pgfmathparse{\x1/28.45274}\pgfmathroundto{\pgfmathresult}%
      \expandafter\global\expandafter\let\csname#4X\romannumeral\@num\endcsname=\pgfmathresult
      \pgfmathparse{\y1/28.45274}\pgfmathroundto{\pgfmathresult}%
      \expandafter\global\expandafter\let\csname#4Y\romannumeral\@num\endcsname=\pgfmathresult
      }};
 \fi
}%
%% \mytikzsetintersections<#1>[#2]#3#4#5
\def\mytikzsetintersections{\@ifstar{\def\@MTSIplot{1}\@mytikzsetintersections}{\def\@MTSIplot{0}\@mytikzsetintersections}}%
\def\@mytikzsetintersections{\@ifnextchar<{\@@mytikzsetintersections}{\@@mytikzsetintersections<>}}%
\def\@@mytikzsetintersections<#1>{\@ifnextchar[{\@@@mytikzsetintersections<#1>}{\@@@mytikzsetintersections<#1>[]}}%
\def\@@@mytikzsetintersections<#1>[#2]#3#4#5{%
 \ifnum\@MTSIplot=\@ne
  \fill[name intersections={of=#3 and #4,name=#5,total=\@Fmaxnum},red]
   \foreach \@Pnum in {1,...,\@Fmaxnum}
    {%
     (#5-\@Pnum)node[left]{#5-\@Pnum}circle[radius=2pt,#1]
    };
 \else
  \path[name intersections={of=#3 and #4,name=#5,total=\@Fmaxnum,#1}]
   \foreach \@Pnum in {1,...,\@Fmaxnum}
    {%
     let \p1=(#5-\@Pnum) in node
     {%
      \pgfkeys{/pgf/number format/.cd,fixed,precision=2}%
      \pgfmathparse{\x1/28.45274}%
      \pgfmathroundto{\pgfmathresult}%
      \expandafter\global\expandafter\let\csname #5X\romannumeral\@Pnum\endcsname=\pgfmathresult
      \pgfmathparse{\y1/28.45274}%
      \pgfmathroundto{\pgfmathresult}%
      \expandafter\global\expandafter\let\csname #5Y\romannumeral\@Pnum\endcsname=\pgfmathresult
      \xdef\MTSImaxnum{\@Fmaxnum}%
     }%
    };
 \fi
}%
%% mytikzfunction<#1>[#2]#3#4#5
%% #1:オプション1
%%  leftP:左端点(x or y座標が最小)の名前default=leftP
%%  rightP:右端点(x or y座標が最大)の名前default=rightP
%% #2:オプション2
%%  \drawに対するオプション
%%  defaultはsmooth
%% #3:x座標を表す式
%% #4:y座標を表す式
%% #5:この関数のパスの名前(交点を求めるときに使える)
\define@key{mytikzfunction}{noline}[true]{\mytikzoutlinefalse}%
\define@key{mytikzfunction}{rightP}{\def\@MTFrightP{#1}}%
\define@key{mytikzfunction}{leftP}{\def\@MTFleftP{#1}}%
\def\mytikzfunction{\@ifstar{\def\@MTFpath{0}\@mytikzfunction}{\def\@MTFpath{1}\@mytikzfunction}}%
\def\@mytikzfunction{\@ifnextchar<{\@@mytikzfunction}{\@@mytikzfunction<>}}%
\def\@@mytikzfunction<#1>{\@ifnextchar[{\@@@mytikzfunction<#1>}{\@@@mytikzfunction<#1>[]}}%
\def\@@@mytikzfunction<#1>[#2]#3#4#5{%
 \mytikzoutlinetrue
 \def\@MTFrightP{rightP}%
 \def\@MTFleftP{leftP}%
 \setkeys{mytikzfunction}{#1}%
 \ifnum\@MTFpath=\@ne
  \path[smooth,name path=#5,#2,domain=\@xmin-\@MTPleftmargin:\@xmax+\@MTPrightmargin]plot({#3},{#4});
 \fi
 \ifmytikzoutline
 \begin{scope}
  \clip(RT)--(RB)--(LB)--(LT)--cycle;
  \draw[smooth,#2]plot({#3},{#4});
 \end{scope}
 \fi
 \ifnum\@MTFpath=\@ne
  \path[name intersections={sort by=#5,of=#5 and Frame,name=@FuncP,total=\@total}]
   coordinate(leftP)at(@FuncP-1)
   coordinate(rightP)at(@FuncP-\@total);
  \expandafter\coordinate\expandafter(\@MTFleftP)at(leftP);
  \expandafter\coordinate\expandafter(\@MTFrightP)at(rightP);
 \fi
 \mytikzoutlinefalse
}%
%% \mytikzfillFandF<#1>[#2]#3#4#5#6#7
%% #1:オプション1
%%  \fillのオプション指定(色や透明度など)
%% #2:オプション2
%%  関数1のplotのオプション指定(smooth，samples,domainなど)
%%  domainを指定すると#6，#7で指定した定義域が無視される
%% #3:オプション3
%%  関数2のplotのオプション指定(smooth，samples,domainなど)
%%  domainを指定すると#6，#7で指定した定義域が無視される
%% #4:関数1のx，y座標を表す式を指定y=x^2は\x,{pow(\x,2)}となる
%% #5:関数2のx，y座標を表す式を指定y=x^2は\x,{pow(\x,2)}となる
%% #6，#7:塗りつぶす領域の定義域を指定
%% 関数1は#6->#7の方向で塗りつぶされ，
%% 関数2は#7->#6の方向で塗りつぶされる
\def\mytikzfillFandF{\@ifnextchar<{\@mytikzfillFandF}{\@mytikzfillFandF<>}}%
\def\@mytikzfillFandF<#1>{\@ifnextchar[{\@@mytikzfillFandF<#1>}{\@@mytikzfillFandF<#1>[]}}%
\def\@@mytikzfillFandF<#1>[#2]{\@ifnextchar|{\@@@mytikzfillFandF<#1>[#2]}{\@@@mytikzfillFandF<#1>[#2]||}}%
\def\@@@mytikzfillFandF<#1>[#2]|#3|#4#5#6#7{%
 \bgroup
  \let\@xp=\expandafter
  \edef\@MTFFAFXA{#6}%
  \edef\@MTFFAFXB{#7}%
  \@xp\@xp\@xp\@@@@mytikzfillFandF\@xp\@xp\@xp{\@xp\@MTFFAFXA\@xp}\@xp{\@MTFFAFXB}<#1>[#2]|#3|{#4}{#5}%
 \egroup
% \fill[fill=black,opacity=.25,#1]%
%  plot[smooth,domain=#6:#7,#2](#4)--%
%  plot[smooth,domain=#7:#6,#3](#5)--cycle;
}%
\def\@@@@mytikzfillFandF#1#2<#3>[#4]|#5|#6#7{%
 \fill[fill=black,opacity=.25,#3]%
  plot[smooth,domain=#1:#2,#4](#6)--%
  plot[smooth,domain=#2:#1,#5](#7)--cycle;
}%
%% \mytikzdelpt
%% #1:pt単位付きの制御綴(letでの\x1など)
%% #2:換算した値を格納する制御綴
\def\mytikzdelpt#1#2{%
 \pgfmathparse{#1/28.45274}%
 \edef#2{\pgfmathresult}%
}%
%%% \mytikzPline<#1>[#2]#3#4 obsolete
%%% P(oint)line
%%% #1:オプション1
%%%  leftP:左端点(x or y座標が最小)の名前default=leftP
%%%  rightP:右端点(x or y座標が最大)の名前default=rightP
%%% #2:オプション2
%%%  \drawに対するオプション
%%% #3:直線を通る2点を指定
%%% #4:この直線のパスの名前(交点を求めるときに使える)
%\define@key{mytikzline}{rigthP}{\def\@MTLrightP{#1}}%
%\define@key{mytikzline}{leftP}{\def\@MTLleftP{#1}}%
%\define@key{mytikzline}{noline}[true]{\mytikzoutlinefalse}%
%\def\mytikzPline{\@ifnextchar<{\@mytikzPline}{\@mytikzPline<>}}%
%\def\@mytikzPline<#1>{\@ifnextchar[{\@@mytikzPline<#1>}{\@@mytikzPline<#1>[]}}%
%\def\@@mytikzPline<#1>[#2]#3#4{%
% \mytikzoutlinetrue
% \def\@MTLrightP{rightP}%
% \def\@MTLleftP{leftP}%
% \setkeys{mytikzline}{#1}%
% \edef\@MTPlineCoord{#3}%
% \mytikzsetcoordinate{@PlineA}{\@MTPlineCoord}%
% \mytikzsetcoordinate{@PlineB}{\@PlineApost}%
%% \path[name path=@Plinepath]($(@PlineA)!\@MTPdiagonal!180:(@PlineB)$)--($(@PlineB)!\@MTPdiagonal!180:(@PlineA)$);
% \mytikzveclen{($(trueLB)-(trueRT)$)}\mytikz@LBRT
% \path[name path=@Plinepath]($(@PlineA)!\mytikz@LBRT!180:(@PlineB)$)--($(@PlineB)!\mytikz@LBRT!180:(@PlineA)$);
% \path[name intersections={of=Frame and @Plinepath,name=@P,total=\@total}]
%  \foreach \@num in {1,...,\@total}
%   {%
%%    (@P-\@num)circle[radius=2pt]
%    let \p1=(@P-\@num)in node
%     {%
%      \pgfkeys{/pgf/number format/.cd,fixed,precision=2}%
%      \pgfmathparse{\x1/28.45274}%
%      \pgfmathroundto{\pgfmathresult}%
%      \expandafter\xdef\csname @MTPLX\romannumeral\@num\endcsname{\pgfmathresult}%
%      \pgfmathparse{\y1/28.45274}%
%      \pgfmathroundto{\pgfmathresult}%
%      \expandafter\xdef\csname @MTPLY\romannumeral\@num\endcsname{\pgfmathresult}%
%      \xdef\@MTPL@intersection@number{\@total}%
%     }%
%   };
%%% 描画矩形の対角線となるとき，その枠と直線との交点の個数が4になることがあるための対策
% \ifnum\@MTPL@intersection@number>\tw@
%  \ifdim\@MTPLXi pt=\@MTPLXiii pt
%   \ifdim\@MTPLYi pt<\@MTPLYiii pt
%    \coordinate(leftP)at(@P-1);
%    \coordinate(rightP)at(@P-3);
%    \else
%    \coordinate(leftP)at(@P-3);
%    \coordinate(rightP)at(@P-1);
%   \fi
%  \else
%   \ifdim\@MTPLXi pt<\@MTPLXiii pt
%    \coordinate(leftP)at(@P-1);
%    \coordinate(rightP)at(@P-3);
%   \else
%    \coordinate(leftP)at(@P-3);
%    \coordinate(rightP)at(@P-1);
%   \fi
%  \fi
% \else
%  \ifdim\@MTPLXi pt=\@MTPLXii pt
%   \ifdim\@MTPLYi pt<\@MTPLYii pt
%    \coordinate(leftP)at(@P-1);
%    \coordinate(rightP)at(@P-2);
%    \else
%    \coordinate(leftP)at(@P-2);
%    \coordinate(rightP)at(@P-1);
%   \fi
%  \else
%   \ifdim\@MTPLXi pt<\@MTPLXii pt
%    \coordinate(leftP)at(@P-1);
%    \coordinate(rightP)at(@P-2);
%   \else
%    \coordinate(leftP)at(@P-2);
%    \coordinate(rightP)at(@P-1);
%   \fi
%  \fi
% \fi
% \expandafter\coordinate\expandafter(\@MTLleftP)at(leftP);
% \expandafter\coordinate\expandafter(\@MTLrightP)at(rightP);
% \ifmytikzoutline
%  \draw[name path=#4,#2](leftP)--(rightP);
% \else
%  \path[name path=#4,#2](leftP)--(rightP);
% \fi
% \mytikzoutlinefalse
%}%
%%% \mytikzSline<#1>[#2]#3#4#5 obsolete
%%% S(lope)line:1点と傾き指定
%%% #1:オプション1
%%%  leftP:左端点(x or y座標が最小)の名前default=leftP
%%%  rightP:右端点(x or y座標が最大)の名前default=rightP
%%% #2:オプション2
%%%  \drawに対するオプション
%%% #3:直線を通る1点を指定
%%% #4:この直線の傾きを指定
%%% #5:この直線のパスの名前(交点を求めるときに使える)
%\def\mytikzSline{\@ifnextchar<{\@mytikzSline}{\@mytikzSline<>}}%
%\def\@mytikzSline<#1>{\@ifnextchar[{\@@mytikzSline<#1>}{\@@mytikzSline<#1>[]}}%
%\def\@@mytikzSline<#1>[#2]#3#4#5{%
% \mytikzPline<#1>[#2]{#3($#3+(1,#4)$)}{#5}%
%}%
%%% \mytikzAline<#1>[#2]#3#4#5 obsolete
%%% A(ngle)line:1点と角度指定
%%% #1:オプション1
%%%  leftP:左端点(x or y座標が最小)の名前default=leftP
%%%  rightP:右端点(x or y座標が最大)の名前default=rightP
%%% #2:オプション2
%%%  \drawに対するオプション
%%% #3:直線を通る1点を指定
%%% #4:x軸とのなす角度を指定(60分法)
%%% #5:この直線のパスの名前(交点を求めるときに使える)
%\def\mytikzAline{\@ifnextchar<{\@mytikzAline}{\@mytikzAline<>}}%
%\def\@mytikzAline<#1>{\@ifnextchar[{\@@mytikzAline<#1>}{\@@mytikzAline<#1>[]}}%
%\def\@@mytikzAline<#1>[#2]#3#4#5{%
% \pgfmathparse{tan(#4)}%
% \let\@MTAlinetan=\pgfmathresult
% \mytikzPline<#1>[#2]{#3($#3+(1,\@MTAlinetan)$)}{#5}%
%}%
%%% \mytikzVline obsolete
%%% V(ector)line:1点と方向ベクトル指定
%%% #1:オプション1
%%%  leftP:左端点(x or y座標が最小)の名前default=leftP
%%%  rightP:右端点(x or y座標が最大)の名前default=rightP
%%% #2:オプション2
%%%  \drawに対するオプション
%%% #3:直線を通る1点を指定
%%% #4:方向ベクトルの成分を指定
%%% #5:この直線のパスの名前(交点を求めるときに使える)
%\def\mytikzVline{\@ifnextchar<{\@mytikzVline}{\@mytikzVline<>}}%
%\def\@mytikzVline<#1>{\@ifnextchar[{\@@mytikzVline<#1>}{\@@mytikzVline<#1>[]}}%
%\def\@@mytikzVline<#1>[#2]#3#4#5{%
% \mytikzPline<#1>[#2]{#3($#3+#4$)}{#5}%
%}%
%%% \mytikzNline:1点と法線ベクトル指定 obsolete
%%% N(ormalVector)line
%%% #1:オプション1
%%%  leftP:左端点(x or y座標が最小)の名前default=leftP
%%%  rightP:右端点(x or y座標が最大)の名前default=rightP
%%% #2:オプション2
%%%  \drawに対するオプション
%%% #3:直線を通る1点を指定
%%% #4:法線ベクトルの成分を指定
%%% #5:この直線のパスの名前(交点を求めるときに使える)
%\def\mytikzNline{\@ifnextchar<{\@mytikzNline}{\@mytikzNline<>}}%
%\def\@mytikzNline<#1>{\@ifnextchar[{\@@mytikzNline<#1>}{\@@mytikzNline<#1>[]}}%
%\def\@@mytikzNline<#1>[#2]#3#4#5{%
% \mytikzPline<#1>[#2]{#3($(0,0)!1cm!90:#4+#3$)}{#5}%
%}%
%% \mytikzveclen#1#2
%% #1:ベクトルの成分
%% #2:ベクトルの長さを受け取る制御綴
%% \mytikzveclen{($(A)-(B)$)}\vectorlength
%% この例ではベクトルABの長さを\vectorlengthに格納する
\def\mytikzveclen#1#2{%
 \bgroup
  \path let \p1=#1,\n1={veclen(\x1,\y1)} in node {\xdef#2{\n1}};
 \egroup
}%
%%% \mytikzjuushin#1#2
%%% #1:三角形の3点
%%% #2:重心の名前
%\def\mytikzjuushin#1#2{%
% \bgroup
%  \let\@xp=\expandafter
%  \mytikzsetcoordinate{@MTJSA}{#1}%
%  \mytikzsetcoordinate{@MTJSB}{\@MTJSApost}%
%  \mytikzsetcoordinate{@MTJSC}{\@MTJSBpost}%
%  \path[name path=@MTJSpathAM](@MTJSA)--($(@MTJSB)!.5!(@MTJSC)$);
%  \path[name path=@MTJSpathBN](@MTJSB)--($(@MTJSC)!.5!(@MTJSA)$);
%  \mytikzmakeintersections{@MTJSpathAM}{@MTJSpathBN}{@MTJSP}%
%  \coordinate(#2)at(@MTJSP-1);
% \egroup
%}%
%%% \mytikzsuishin#1#2
%\def\mytikzsuishin#1#2{%
% \bgroup
%  \let\@xp=\expandafter
%  \mytikzsetcoordinate{@MTSSA}{#1}%
%  \mytikzsetcoordinate{@MTSSB}{\@MTSSApost}%
%  \mytikzsetcoordinate{@MTSSC}{\@MTSSBpost}%
%  \coordinate(@MTSSHA)at($(@MTSSB)!(@MTSSA)!(@MTSSC)$);
%  \coordinate(@MTSSHB)at($(@MTSSA)!(@MTSSB)!(@MTSSC)$);
%  \mytikzPandP{(@MTSSA)(@MTSSHA)}{(@MTSSB)(@MTSSHB)}{#2}%
% \egroup
%}%
%%% \mytikzgaishin#1#2
%%% #1:三角形の3点
%%% #2:外心の名前
%%%  \GRに外接円の半径が格納される
%\def\mytikzgaishin#1#2{%
% \bgroup
%  \let\@xp=\expandafter
%  \mytikzsetcoordinate{@A}{#1}%
%  \mytikzsetcoordinate{@B}{\@Apost}%
%  \mytikzsetcoordinate{@C}{\@Bpost}%
%  \path[name path=@MTGSI] ($(@A)!.5!(@B)!10!-90:(@B)$)--($(@A)!.5!(@B)!10!90:(@B)$);
%  \path[name path=@MTGSII] ($(@B)!.5!(@C)!10!-90:(@C)$)--($(@B)!.5!(@C)!10!90:(@C)$);
%  \path[name intersections={of=@MTGSI and @MTGSII,by={#2}}];
%  \mytikzveclen{($(@A)-(#2)$)}\GR
% \egroup
%}%
%%% \mytikznaishin#1#2
%%% #1:三角形の3点
%%% #2:内心の名前
%%%  \NRに内接円の半径が格納される
%\def\mytikznaishin#1#2{%
% \bgroup
%  \let\@xp=\expandafter
%  \mytikzsetcoordinate{@MTNSA}{#1}%
%  \mytikzsetcoordinate{@MTNSB}{\@MTNSApost}%
%  \mytikzsetcoordinate{@MTNSC}{\@MTNSBpost}%
%  \mytikzveclen{($(@MTNSA)-(@MTNSB)$)}\@MTNSAB
%  \mytikzveclen{($(@MTNSB)-(@MTNSC)$)}\@MTNSBC
%  \mytikzveclen{($(@MTNSC)-(@MTNSA)$)}\@MTNSCA
%  \pgfmathparse{\@MTNSAB/(\@MTNSAB+\@MTNSCA)}%
%  \let\@MTNSBP=\pgfmathresult
%  \coordinate(@MTNSP)at($(@MTNSB)!\@MTNSBP!(@MTNSC)$);
%%  \fill[blue](@MTNSP)circle[radius=2pt];
%  \pgfmathparse{\@MTNSBC/(\@MTNSBC+\@MTNSAB)}%
%  \let\@MTNSCQ=\pgfmathresult
%  \coordinate(@MTNSQ)at($(@MTNSC)!\@MTNSCQ!(@MTNSA)$);
%%  \fill[yellow](@MTNSQ)circle[radius=2pt];
%  \path[name path=@MTNSpathAN](@MTNSA)--(@MTNSP);
%  \path[name path=@MTNSpathBN](@MTNSB)--(@MTNSQ);
%  \mytikzmakeintersections{@MTNSpathAN}{@MTNSpathBN}{@MTNSP}%
%  \coordinate(#2)at(@MTNSP-1);
%  \mytikzveclen{($(@MTNSP-1)-($(@MTNSA)!(@MTNSP-1)!(@MTNSB)$)$)}\NR
% \egroup
%}%
%%% \mytikzboushin#1#2
%%% #1:三角形の3点(角#1の内部に傍心を作る)
%%% #2:傍心の名前
%%%  \BR=傍心円の半径
%\def\mytikzboushin#1#2{%
% \bgroup
%  \let\@xp=\expandafter
%  \mytikzsetcoordinate{@MTBSA}{#1}%
%  \mytikzsetcoordinate{@MTBSB}{\@MTBSApost}%
%  \mytikzsetcoordinate{@MTBSC}{\@MTBSBpost}%
%  \mytikznaishin{#1}{@MTBSIP}%
%  \coordinate(@MTBSD)at($(@MTBSC)!1cm!180:(@MTBSB)$);
%  \mytikznaishin{(@MTBSA)(@MTBSC)(@MTBSD)}{@MTBSIQ}%
%  \mytikzPandP{(@MTBSB)(@MTBSIP)}{(@MTBSC)(@MTBSIQ)}{#2}%
%  \coordinate(@MTBSN)at($(@MTBSA)!(#2)!(@MTBSC)$);
%  \mytikzveclen{($(#2)-(@MTBSN)$)}\BR
% \egroup
%}%
%% \mytikzPandP#1#2#3
%% 2点で指定された直線#1と2点で指定された直線#2の交点を#3とする
\def\mytikzPandP#1#2#3{%
 \bgroup
  \let\@xp=\expandafter
  \mytikzsetcoordinate{@MTPPA}{#1}%
  \mytikzsetcoordinate{@MTPPB}{\@MTPPApost}%
  \mytikzsetcoordinate{@MTPPP}{#2}%
  \mytikzsetcoordinate{@MTPPQ}{\@MTPPPpost}%
  \path[name path=@MTPPpathAB]($(@MTPPA)!\@MTPdiagonal!180:(@MTPPB)$)--($(@MTPPB)!\@MTPdiagonal!180:(@MTPPA)$);
  \path[name path=@MTPPpathPQ]($(@MTPPP)!\@MTPdiagonal!180:(@MTPPQ)$)--($(@MTPPQ)!\@MTPdiagonal!180:(@MTPPP)$);
  \mytikzmakeintersections{@MTPPpathAB}{@MTPPpathPQ}{@MTPPP}%
  \coordinate(#3)at(@MTPPP-1);
 \egroup
}%
%% \mytikzPandS#1#2#3#4
%% #1:直線1が通る2点を指定
%% #2:直線2が通る1点を指定
%% #3:直線2の傾きを指定
%% #4:2直線の交点の名前
\def\mytikzPandS#1#2#3#4{%
 \mytikzPandP{#1}{#2($#2+(1,#3)$)}{#4}%
}%
%% \mytikzSandP#1#2#3#4
%% #1:直線1が通る1点を指定
%% #2:直線1の傾きを指定
%% #3:直線2が通る2点を指定
%% #4:2直線の交点の名前
\def\mytikzSandP#1#2#3#4{%
 \mytikzPandP{#1($#1+(1,#2)$)}{#3}{#4}%
}%
%% \mytikzPandA
%% #1:直線1が通る2点を指定
%% #2:直線2が通る1点を指定
%% #3:直線2とx軸となす角度を指定
%% #4:2直線の交点の名前
\def\mytikzPandA#1#2#3#4{%
 \bgroup
  \pgfmathparse{tan(#3)}%
  \let\@MTPAtan=\pgfmathresult
  \mytikzPandP{#1}{#2($#2+(1,\@MTPAtan)$)}{#4}%
 \egroup
}%
%% \mytikzAandP
%% #1:直線1が通る1点を指定
%% #2:直線1とx軸となす角度を指定
%% #3:直線2が通る2点を指定
%% #4:2直線の交点の名前
\def\mytikzAandP#1#2#3#4{%
 \bgroup
  \pgfmathparse{tan(#2)}%
  \let\@MTAPtan=\pgfmathresult
  \mytikzPandP{#3}{#1($#1+(1,\@MTAPtan)$)}{#4}%
 \egroup
}%
%% \mytikzPandV#1#2#3#4
%% #1:直線1が通る2点を指定
%% #2:直線2が通る1点を指定
%% #3:直線2の方向ベクトルを指定
%% #4:2直線の交点の名前
\def\mytikzPandV#1#2#3#4{%
 \mytikzPandP{#1}{#2($#2+#3$)}{#4}%
}%
%% \mytikzVandP#1#2#3#4
%% #1:直線1が通る1点を指定
%% #2:直線1の方向ベクトルを指定
%% #3:直線2が通る2点を指定
%% #4:2直線の交点の名前
\def\mytikzVandP#1#2#3#4{%
 \mytikzPandP{#1($#1+#2$)}{#3}{#4}%
}%
%% \mytikzPandN
%% #1:直線1が通る2点を指定
%% #2:直線2が通る1点を指定
%% #3:直線2の法線ベクトルを指定
%% #4:2直線の交点の名前
\def\mytikzPandN#1#2#3#4{%
 \mytikzPandP{#1}{#2($(0,0)!1cm!90:#3+#2$)}{#4}%
}%
%% \mytikzNandP
%% #1:直線1が通る1点を指定
%% #2:直線1の法線ベクトルを指定
%% #3:直線2が通る2点を指定
%% #4:2直線の交点の名前
\def\mytikzNandP#1#2#3#4{%
 \mytikzPandP{#1($(0,0)!1cm!90:#2+#1$)}{#3}{#4}%
}%
%% \mytikzSandS#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1の傾きを指定
%% #3:直線2の通る点を指定
%% #4:直線2の傾きを指定
%% #5:2直線の交点の名前
\def\mytikzSandS#1#2#3#4#5{%
 \mytikzPandP{#1($#1+(1,#2)$)}{#3($#3+(1,#4)$)}{#5}%
}%
%% \mytikzSandA#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1の傾きを指定
%% #3:直線2の通る点を指定
%% #4:直線2とx軸とのなす角度を指定
%% #5:2直線の交点の名前
\def\mytikzSandA#1#2#3#4#5{%
 \bgroup
  \pgfmathparse{tan(#4)}%
  \let\@MTSAtan=\pgfmathresult
  \mytikzPandP{#1($#1+(1,#2)$)}{#3($#3+(1,\@MTSAtan)$)}{#5}%
 \egroup
}%
%% \mytikzAandS#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1とx軸とのなす角度を指定
%% #3:直線2の通る点を指定
%% #4:直線2の傾きを指定
%% #5:2直線の交点の名前
\def\mytikzAandS#1#2#3#4#5{%
 \bgroup
  \pgfmathparse{tan(#2)}%
  \let\@MTAStan=\pgfmathresult
  \mytikzPandP{#1($#1+(1,\@MTAStan)$)}{#3($#3+(1,#4)$)}{#5}%
 \egroup
}%
%% \mytikzSandV#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1の傾きを指定
%% #3:直線2の通る点を指定
%% #4:直線2の方向ベクトルを指定
%% #5:2直線の交点の名前
\def\mytikzSandV#1#2#3#4#5{%
 \mytikzPandP{#1($#1+(1,#2)$)}{#3($#3+#4$)}{#5}%
}%
%% \mytikzVandS#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1の方向ベクトルを指定
%% #3:直線2の通る点を指定
%% #4:直線2の傾きを指定
%% #5:2直線の交点の名前
\def\mytikzVandS#1#2#3#4#5{%
 \mytikzPandP{#1($#1+#2$)}{#3($#3+(1,#4)$)}{#5}%
}%
%% \mytikzSandN#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1の傾きを指定
%% #3:直線2の通る点を指定
%% #4:直線2の法線ベクトルを指定
%% #5:2直線の交点の名前
\def\mytikzSandN#1#2#3#4#5{%
 \mytikzPandP{#1($#1+(1,#2)$)}{#3($(0,0)!1cm!90:#4+#3$)}{#5}%
}%
%% \mytikzNandS#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1の法線ベクトルを指定
%% #3:直線2の通る点を指定
%% #4:直線2の傾きを指定
%% #5:2直線の交点の名前
\def\mytikzNandS#1#2#3#4#5{%
 \mytikzPandP{#1($(0,0)!1cm!90:#2+#1$)}{#3($#3+(1,#4)$)}{#5}%
}%
%% \mytikzAandA#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1とx軸のなす角度を指定
%% #3:直線2の通る点を指定
%% #4:直線2とx軸のなす角度を指定
%% #5:2直線の交点の名前
\def\mytikzAandA#1#2#3#4#5{%
 \bgroup
  \pgfmathparse{tan(#2)}%
  \let\@MTAAtanA=\pgfmathresult
  \pgfmathparse{tan(#4)}%
  \let\@MTAAtanB=\pgfmathresult
  \mytikzPandP{#1($#1+(1,\@MTAAtanA)$)}{#3($#3+(1,\@MTAAtanB)$)}{#5}%
 \egroup
}%
%% \mytikzAandV#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1とx軸のなす角度を指定
%% #3:直線2の通る点を指定
%% #4:直線2と方向ベクトルを指定
%% #5:2直線の交点の名前
\def\mytikzAandV#1#2#3#4#5{%
 \bgroup
  \pgfmathparse{tan(#2)}%
  \let\@MTAVtan=\pgfmathresult
  \mytikzPandP{#1($#1+(1,\@MTAVtan)$)}{#3($#3+#4$)}{#5}%
 \egroup
}%
%% \mytikzVandA#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1と方向ベクトルを指定
%% #3:直線2の通る点を指定
%% #4:直線2とx軸のなす角度を指定
%% #5:2直線の交点の名前
\def\mytikzVandA#1#2#3#4#5{%
 \bgroup
  \pgfmathparse{tan(#4)}%
  \let\@MTAVtan=\pgfmathresult
  \mytikzPandP{#1($#1+#2$)}{#3($#3+(1,\@MTAVtan)$)}{#5}%
 \egroup
}%
%% \mytikzAandN#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1とx軸のなす角度を指定
%% #3:直線2の通る点を指定
%% #4:直線2と法線ベクトルを指定
%% #5:2直線の交点の名前
\def\mytikzAandN#1#2#3#4#5{%
 \bgroup
  \pgfmathparse{tan(#2)}%
  \let\@MTANtan=\pgfmathresult
  \mytikzPandP{#1($#1+(1,\@MTANtan)$)}{#3($(0,0)!1cm!90:#4+#3$)}{#5}%
 \egroup
}%
%% \mytikzNandA#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1と法線ベクトルを指定
%% #3:直線2の通る点を指定
%% #4:直線2とx軸のなす角度を指定
%% #5:2直線の交点の名前
\def\mytikzNandA#1#2#3#4#5{%
 \bgroup
  \pgfmathparse{tan(#4)}%
  \let\@MTANtan=\pgfmathresult
  \mytikzPandP{#1($(0,0)!1cm!90:#2+#1$)}{#3($#3+(1,\@MTANtan)$)}{#5}%
 \egroup
}%
%% \mytikzVandV#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1の方向ベクトルを指定
%% #3:直線2の通る点を指定
%% #4:直線2の方向ベクトルを指定
%% #5:2直線の交点の名前
\def\mytikzVandV#1#2#3#4#5{%
 \mytikzPandP{#1($#1+#2$)}{#3($#3+#4$)}{#5}%
}%
%% \mytikzVandN#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1の方向ベクトルを指定
%% #3:直線2の通る点を指定
%% #4:直線2の法線ベクトルを指定
%% #5:2直線の交点の名前
\def\mytikzVandN#1#2#3#4#5{%
 \mytikzPandP{#1($#1+#2$)}{#3($(0,0)!1cm!90:#4+#3$)}{#5}%
}%
%% \mytikzNandV#1#2#3#4#5
%% #1:直線1の通る点を指定
%% #2:直線1の法線ベクトルを指定
%% #3:直線2の通る点を指定
%% #4:直線2の方向ベクトルを指定
%% #5:2直線の交点の名前
\def\mytikzNandV#1#2#3#4#5{%
 \mytikzPandP{#1($(0,0)!1cm!90:#2+#1$)}{#3($#3+#4$)}{#5}%
}%
%% \mytikzNandN
%% #1:直線1の通る点を指定
%% #2:直線1の法線ベクトルを指定
%% #3:直線2の通る点を指定
%% #4:直線2の法線ベクトルを指定
%% #5:2直線の交点の名前
\def\mytikzNandN#1#2#3#4#5{%
 \mytikzPandP{#1($(0,0)!1cm!90:#2+#1$)}{#3($(0,0)!1cm!90:#4+#3$)}{#5}%
}%
%%% \mytikzteisei<#1>[#2]#3 obsolete \teisei および \Teisei コマンドを新設
%%% #1:オプション1
%%%  right up:右上がりの斜線(default)
%%%  right down:右下がりの斜線
%%% #2:\drawのオプション(線の太さ・色・破線などを設定)
%%% #3:斜線を引きアイテム
%\define@key{mytikzteisei}{right up}[true]{\def\@MTTdirection{0}}%
%\define@key{mytikzteisei}{right down}[true]{\def\@MTTdirection{1}}%
%\def\mytikzteisei{\@ifnextchar<{\@mytikzteisei}{\@mytikzteisei<>}}%
%\def\@mytikzteisei<#1>{\@ifnextchar[{\@@mytikzteisei<#1>}{\@@mytikzteisei<#1>[]}}%
%\def\@@mytikzteisei<#1>[#2]#3{%
% \def\@MTTdirection{0}%
% \setkeys{mytikzteisei}{#1}%
% \setbox0=\hbox{$#3$}%
% \tikz[baseline=(X.base)]{%
%   \coordinate(O)at(0,0);
%   \coordinate(RT)at($.5*(\wd0,\ht0+\dp0)$);
%   \coordinate(RB)at($.5*(\wd0,-\ht0-\dp0)$);
%   \coordinate(LT)at($.5*(-\wd0,\ht0+\dp0)$);
%   \coordinate(LB)at($.5*(-\wd0,-\ht0-\dp0)$);
%   \node(X){$#3$};
%   \ifnum\@MTTdirection=\z@
%    \draw[#2](LB)--(RT);
%   \else
%    \draw[#2](LT)--(RB);
%   \fi
%%   \fill(O)circle[radius=1pt];
% }%
%}%
%% \mytikzxyzcoordinate
%% 使いやすいように変形
\def\mytikzxyzcoordinate(#1)at(#2,#3,#4){%
 \pgfmathparse{-1*(#3)}%
 \let\@MTpointY=\pgfmathresult
 \coordinate(#1)at(#2,#4,\@MTpointY);
}%
%%% \mytikzputsyaei<#1>[#2]#3 obsolete \Shaei コマンドを新設
%%% #1:オプション1
%%%  x direction:x軸と配置文字列との距離
%%%  y direction:y軸と配置文字列との距離
%%%  x string:x軸に配置する文字の指定
%%%  y string:y軸に配置する文字の指定
%%%  syaei:x,y,xy(default xy)
%%% #2:オプション2
%%%  \drawに対するオプション
%%% #3:点の指定
%\define@key{mytikzputsyaei}{x direction}{\def\@MTPSxdir{#1}}%
%\define@key{mytikzputsyaei}{y direction}{\def\@MTPSydir{#1}}%
%\define@key{mytikzputsyaei}{x string}{\def\@MTPSxstr{#1}}%
%\define@key{mytikzputsyaei}{y string}{\def\@MTPSystr{#1}}%
%\define@key{mytikzputsyaei}{syaei}{\def\@MTPSflag{#1}}%
%\def\mytikzputsyaei{\@ifnextchar<{\@mytikzputsyaei}{\@mytikzputsyaei<>}}%
%\def\@mytikzputsyaei<#1>{\@ifnextchar[{\@@mytikzputsyaei<#1>}{\@@mytikzputsyaei<#1>[]}}%
%\def\@@mytikzputsyaei<#1>[#2]#3{%
% \path let \p1=(#3) in node
%  {%
%   \pgfkeys{/pgf/number format/.cd,fixed,precision=2}%
%   \pgfmathparse{\x1/28.45274}%
%   \pgfmathroundto{\pgfmathresult}%
%   \xdef\@MTPSX{\pgfmathresult}%
%   \pgfmathparse{\y1/28.45274}%
%   \pgfmathroundto{\pgfmathresult}%
%   \xdef\@MTPSY{\pgfmathresult}%
%  };%
% \coordinate(syaeiX)at(\@MTPSX,0);
% \coordinate(syaeiY)at(0,\@MTPSY);
% \def\@MTPSxdir{.2}%
% \def\@MTPSydir{.2}%
% \let\@MTPSxstr=\@MTPSX
% \let\@MTPSystr=\@MTPSY
% \def\@MTPSflag{3}%x:1 y:2 xy:3
% \setkeys{mytikzputsyaei}{#1}%
% \ifdim\@MTPSX pt<0pt
%  \ifnum\@MTPSflag=2\relax
%   \node at(0,\@MTPSY)[right]{$\@MTPSystr$};
%%   \node at(0,\@MTPSY)[shift={(0:\@MTPSydir)}]{$\@MTPSystr$};
%  \fi
%  \ifnum\@MTPSflag=3\relax
%   \node at(0,\@MTPSY)[right]{$\@MTPSystr$};
%%   \node at(0,\@MTPSY)[shift={(0:\@MTPSydir)}]{$\@MTPSystr$};
%  \fi
% \else
%  \ifnum\@MTPSflag=2\relax
%   \node at(0,\@MTPSY)[left]{$\@MTPSystr$};
%%   \node at(0,\@MTPSY)[shift={(180:\@MTPSydir)}]{$\@MTPSystr$};
%  \fi
%  \ifnum\@MTPSflag=3\relax
%   \node at(0,\@MTPSY)[left]{$\@MTPSystr$};
%%   \node at(0,\@MTPSY)[shift={(180:\@MTPSydir)}]{$\@MTPSystr$};
%  \fi
% \fi
% \ifdim\@MTPSY pt<0pt
%  \ifnum\@MTPSflag=1\relax
%   \node at(\@MTPSX,0)[above]{$\@MTPSxstr$};
%%   \node at(\@MTPSX,0)[shift={(90:\@MTPSxdir)}]{$\@MTPSxstr$};
%  \fi
%  \ifnum\@MTPSflag=3\relax
%   \node at(\@MTPSX,0)[above]{$\@MTPSxstr$};
%%   \node at(\@MTPSX,0)[shift={(90:\@MTPSxdir)}]{$\@MTPSxstr$};
%  \fi
% \else
%  \ifnum\@MTPSflag=1\relax
%   \node at(\@MTPSX,0)[below]{$\@MTPSxstr$};
%%   \node at(\@MTPSX,0)[shift={(-90:\@MTPSxdir)}]{$\@MTPSxstr$};
%  \fi
%  \ifnum\@MTPSflag=3\relax
%   \node at(\@MTPSX,0)[below]{$\@MTPSxstr$};
%%   \node at(\@MTPSX,0)[shift={(-90:\@MTPSxdir)}]{$\@MTPSxstr$};
%  \fi
% \fi
% \ifcase\@MTPSflag
% \or
%  \draw[mydash,#2](#3)--(syaeiX);
% \or
%  \draw[mydash,#2](#3)--(syaeiY);
% \or
%  \draw[mydash,#2](syaeiX)--(#3)--(syaeiY);
% \fi
%}%
%% 円と円
%% \mytikzCandC<#1>[#2]#3#4#5#6#7
%% \mytikzCandC*とすると図形を描画する
%% #1:オプション1
%%  leftP:2つの交点のうち左側の点(x座標が等しければ下の方の点)の名前default=leftP
%%  rightP:2つの交点のうち右側の点(x座標が等しければ上の方の点)の名前default=rightP
%% #2:*をつけた時の\drawのオプション
%% #3:円1の中心
%% #4:円1の半径
%% #5:円2の中心
%% #6:円2の半径
%% #7:交点の名前接頭文字(Pを指定すると2点P-1，P-2が設定される)
\define@key{mytikzCandC}{leftP}{\def\@MTCCleftP{#1}}%
\define@key{mytikzCandC}{rightP}{\def\@MTCCrightP{#1}}%
\def\mytikzCandC{\@ifstar{\def\@MTCCdraw{1}\@mytikzCandC}{\def\@MTCCdraw{0}\@mytikzCandC}}%
\def\@mytikzCandC{\@ifnextchar<{\@@mytikzCandC}{\@@mytikzCandC<>}}%
\def\@@mytikzCandC<#1>{\@ifnextchar[{\@@@mytikzCandC<#1>}{\@@@mytikzCandC<#1>[]}}%
\def\@@@mytikzCandC<#1>[#2]#3#4#5#6#7{%
 \let\@MTCCleftP=\@empty
 \let\@MTCCrightP=\@empty
 \setkeys{mytikzCandC}{#1}%
 \ifnum\@MTCCdraw=\@ne
  \begin{scope}
   \clip(LB)rectangle(RT);
   \draw[#2]#3circle[radius=#4];
   \draw[#2]#5circle[radius=#6];
  \end{scope}
 \fi
 \path[name path=@MTCCpathA]#3circle[radius=#4];
 \path[name path=@MTCCpathB]#5circle[radius=#6];
 \path[name intersections={of=@MTCCpathA and @MTCCpathB,name=@MTCPP}];
 \path let \p1=(@MTCPP-1),\p2=(@MTCPP-2) in node
  {%
   \pgfkeys{/pgf/number format/.cd,fixed,precision=2}%
   \pgfmathparse{\x1/28.45274}%
   \pgfmathroundto{\pgfmathresult}%
   \xdef\@MTCPXi{\pgfmathresult}%
   \pgfmathparse{\y1/28.45274}%
   \pgfmathroundto{\pgfmathresult}%
   \xdef\@MTCPYi{\pgfmathresult}%
   \pgfmathparse{\x2/28.45274}%
   \pgfmathroundto{\pgfmathresult}%
   \xdef\@MTCPXii{\pgfmathresult}%
   \pgfmathparse{\y2/28.45274}%
   \pgfmathroundto{\pgfmathresult}%
   \xdef\@MTCPYii{\pgfmathresult}%
  };%
 \ifdim\@MTCPXi pt=\@MTCPXii pt
  \ifdim\@MTCPYi pt<\@MTCPYii pt
   \coordinate(#7-1)at(@MTCPP-1);
   \coordinate(#7-2)at(@MTCPP-2);
  \else
   \coordinate(#7-1)at(@MTCPP-2);
   \coordinate(#7-2)at(@MTCPP-1);
  \fi
 \else
  \ifdim\@MTCPXi pt<\@MTCPXii pt
   \coordinate(#7-1)at(@MTCPP-1);
   \coordinate(#7-2)at(@MTCPP-2);
  \else
   \coordinate(#7-1)at(@MTCPP-2);
   \coordinate(#7-2)at(@MTCPP-1);
  \fi
 \fi
 \ifx\@MTCCleftP\@empty
 \else
  \expandafter\coordinate\expandafter(\@MTCCleftP)at(#7-1);
 \fi
 \ifx\@MTCCrightP\@empty
 \else
  \expandafter\coordinate\expandafter(\@MTCCrightP)at(#7-2);
 \fi
}%
%% 円と直線(2点)
%% \mytikzCandP<#1>[#2]#3#4#5#6
%% \mytikzCandP*とすると図形を描画する
%% #1:オプション1
%%  leftP:2つの交点のうち左側の点(x座標が等しければ下の方の点)の名前default=leftP
%%  rightP:2つの交点のうち右側の点(x座標が等しければ上の方の点)の名前default=rightP
%% #2:*をつけた時の\drawのオプション
%% #3:円の中心
%% #4:円の半径
%% #5:直線が通る2点
%% #6:交点の名前接頭文字(Pを指定すると2点P-1，P-2が設定される)
\def\mytikzCandP{\@ifstar{\def\@MTCPdraw{1}\@mytikzCandP}{\def\@MTCPdraw{0}\@mytikzCandP}}%
\def\@mytikzCandP{\@ifnextchar<{\@@mytikzCandP}{\@@mytikzCandP<>}}%
\def\@@mytikzCandP<#1>{\@ifnextchar[{\@@@mytikzCandP<#1>}{\@@@mytikzCandP<#1>[]}}%
\def\@@@mytikzCandP<#1>[#2]#3#4#5#6{%
 \let\@MTCCleftP=\@empty
 \let\@MTCCrightP=\@empty
 \setkeys{mytikzCandC}{#1}%
 \mytikzsetcoordinate{@MTCPA}{#5}%
 \mytikzsetcoordinate{@MTCPB}{\@MTCPApost}%
 \ifnum\@MTCPdraw=\@ne
  \begin{scope}
   \clip(LB)rectangle(RT);
   \draw[#2]#3circle[radius=#4];
   \draw[#2]($(@MTCPA)!\@MTPdiagonal!180:(@MTCPB)$)--($(@MTCPB)!\@MTPdiagonal!180:(@MTCPA)$);
  \end{scope}
 \fi
 \path[name path=@MTCPpathA]#3circle[radius=#4];
 \path[name path=@MTCPpathB]($(@MTCPA)!\@MTPdiagonal!180:(@MTCPB)$)--($(@MTCPB)!\@MTPdiagonal!180:(@MTCPA)$);
 \path[name intersections={of=@MTCPpathA and @MTCPpathB,name=@MTCPP}];
 \path let \p1=(@MTCPP-1),\p2=(@MTCPP-2) in node
  {%
   \pgfkeys{/pgf/number format/.cd,fixed,precision=2}%
   \pgfmathparse{\x1/28.45274}%
   \pgfmathroundto{\pgfmathresult}%
   \xdef\@MTCPXi{\pgfmathresult}%
   \pgfmathparse{\y1/28.45274}%
   \pgfmathroundto{\pgfmathresult}%
   \xdef\@MTCPYi{\pgfmathresult}%
   \pgfmathparse{\x2/28.45274}%
   \pgfmathroundto{\pgfmathresult}%
   \xdef\@MTCPXii{\pgfmathresult}%
   \pgfmathparse{\y2/28.45274}%
   \pgfmathroundto{\pgfmathresult}%
   \xdef\@MTCPYii{\pgfmathresult}%
  };
 \ifdim\@MTCPXi pt=\@MTCPXii pt
  \ifdim\@MTCPYi pt<\@MTCPYii pt
   \coordinate(#6-1)at(@MTCPP-1);
   \coordinate(#6-2)at(@MTCPP-2);
  \else
   \coordinate(#6-1)at(@MTCPP-2);
   \coordinate(#6-2)at(@MTCPP-1);
  \fi
 \else
  \ifdim\@MTCPXi pt<\@MTCPXii pt
   \coordinate(#6-1)at(@MTCPP-1);
   \coordinate(#6-2)at(@MTCPP-2);
  \else
   \coordinate(#6-1)at(@MTCPP-2);
   \coordinate(#6-2)at(@MTCPP-1);
  \fi
 \fi
 \ifx\@MTCCleftP\@empty
 \else
  \expandafter\coordinate\expandafter(\@MTCCleftP)at(#6-1);
 \fi
 \ifx\@MTCCrightP\@empty
 \else
  \expandafter\coordinate\expandafter(\@MTCCrightP)at(#6-2);
 \fi
}%
%% 円と直線(傾き)
%% \mytikzCandS<#1>[#2]#3#4#5#6#7
%% \mytikzCandS*とすると図形を描画する
%% #1:オプション1
%%  leftP:2つの交点のうち左側の点(x座標が等しければ下の方の点)の名前default=leftP
%%  rightP:2つの交点のうち右側の点(x座標が等しければ上の方の点)の名前default=rightP
%% #2:*をつけた時の\drawのオプション
%% #3:円の中心
%% #4:円の半径
%% #5:直線が通る点
%% #6:直線の傾き
%% #7:交点の名前接頭文字(Pを指定すると2点P-1，P-2が設定される)
\def\mytikzCandS{\@ifstar{\def\@MTCSstar{*}\@mytikzCandS}{\def\@MTCSstar{}\@mytikzCandS}}%
\def\@mytikzCandS{\@ifnextchar<{\@@mytikzCandS}{\@mytikzCandS<>}}%
\def\@@mytikzCandS<#1>{\@ifnextchar[{\@@@mytikzCandS<#1>}{\@@@mytikzCandS<#1>[]}}%
\def\@@@mytikzCandS<#1>[#2]#3#4#5#6#7{%
 \expandafter\mytikzCandP\@MTCSstar<#1>[#2]{#3}{#4}{#5($#5+(1,#6)$)}{#7}%
}%
% 円と直線(方向ベクトル)
%% \mytikzCandV<#1>[#2]#3#4#5#6#7
%% \mytikzCandV*とすると図形を描画する
%% #1:オプション1
%%  leftP:2つの交点のうち左側の点(x座標が等しければ下の方の点)の名前default=leftP
%%  rightP:2つの交点のうち右側の点(x座標が等しければ上の方の点)の名前default=rightP
%% #2:*をつけた時の\drawのオプション
%% #3:円の中心
%% #4:円の半径
%% #5:直線が通る点
%% #6:直線の方向ベクトル
%% #7:交点の名前接頭文字(Pを指定すると2点P-1，P-2が設定される)
\def\mytikzCandV{\@ifstar{\def\@MTCVstar{*}\@mytikzCandV}{\def\@MTCVstar{}\@mytikzCandV}}%
\def\@mytikzCandV{\@ifnextchar<{\@@mytikzCandV}{\@mytikzCandV<>}}%
\def\@@mytikzCandV<#1>{\@ifnextchar[{\@@@mytikzCandV<#1>}{\@@@mytikzCandV<#1>[]}}%
\def\@@@mytikzCandV<#1>[#2]#3#4#5#6#7{%
 \expandafter\mytikzCandP\@MTCVstar<#1>[#2]{#3}{#4}{#5($#5+#6$)}{#7}%
}%
% 円と直線(角度)
%% \mytikzCandA<#1>[#2]#3#4#5#6#7
%% \mytikzCandA*とすると図形を描画する
%% #1:オプション1
%%  leftP:2つの交点のうち左側の点(x座標が等しければ下の方の点)の名前default=leftP
%%  rightP:2つの交点のうち右側の点(x座標が等しければ上の方の点)の名前default=rightP
%% #2:*をつけた時の\drawのオプション
%% #3:円の中心
%% #4:円の半径
%% #5:直線が通る点
%% #6:直線とx軸のなす角度
%% #7:交点の名前接頭文字(Pを指定すると2点P-1，P-2が設定される)
\def\mytikzCandA{\@ifstar{\def\@MTCAstar{*}\@mytikzCandA}{\def\@MTCAstar{}\@mytikzCandA}}%
\def\@mytikzCandA{\@ifnextchar<{\@@mytikzCandA}{\@mytikzCandA<>}}%
\def\@@mytikzCandA<#1>{\@ifnextchar[{\@@@mytikzCandA<#1>}{\@@@mytikzCandA<#1>[]}}%
\def\@@@mytikzCandA<#1>[#2]#3#4#5#6#7{%
 \pgfmathparse{tan(#6)}%
 \let\@MTCAtan=\pgfmathresult
 \expandafter\mytikzCandP\@MTCAstar<#1>[#2]{#3}{#4}{#5($#5+(1,\@MTCAtan)$)}{#7}%
}%
% 円と直線(法線ベクトル)
%% \mytikzCandN<#1>[#2]#3#4#5#6#7
%% \mytikzCandN*とすると図形を描画する
%% #1:オプション1
%%  leftP:2つの交点のうち左側の点(x座標が等しければ下の方の点)の名前default=leftP
%%  rightP:2つの交点のうち右側の点(x座標が等しければ上の方の点)の名前default=rightP
%% #2:*をつけた時の\drawのオプション
%% #3:円の中心
%% #4:円の半径
%% #5:直線が通る点
%% #6:直線の法線ベクトル
%% #7:交点の名前接頭文字(Pを指定すると2点P-1，P-2が設定される)
\def\mytikzCandN{\@ifstar{\def\@MTCNstar{*}\@mytikzCandN}{\def\@MTCNstar{}\@mytikzCandN}}%
\def\@mytikzCandN{\@ifnextchar<{\@@mytikzCandN}{\@mytikzCandN<>}}%
\def\@@mytikzCandN<#1>{\@ifnextchar[{\@@@mytikzCandN<#1>}{\@@@mytikzCandN<#1>[]}}%
\def\@@@mytikzCandN<#1>[#2]#3#4#5#6#7{%
 \expandafter\mytikzCandV\@MTCNstar<#1>[#2]{#3}{#4}{#5}{($(O)!1!90:#6$)}{#7}%
}%
%% \mytikzheikoukigou<#1>[#2]#3
%%  #3に;句切りで辺を指定
\define@key{mytikzheikoukigou}{distance}{\def\@MTTKdis{#1}}%
\def\mytikzheikoukigou{\@ifnextchar<{\@mytikzheikoukigou}{\@mytikzheikoukigou<>}}%
\def\@mytikzheikoukigou<#1>{\@ifnextchar[{\@@mytikzheikoukigou<#1>}{\@@mytikzheikoukigou<#1>[]}}%
\def\@@mytikzheikoukigou<#1>[#2]#3{%
 \def\@MTTKdis{4pt}%
 \setkeys{mytikzheikoukigou}{#1}%
 \@@@mytikzheikoukigou[#2]#3;\relax
}%
\def\@@@mytikzheikoukigou[#1]#2;{%
 \mytikzsetcoordinate{@MTTKA}{#2}%
 \mytikzsetcoordinate{@MTTKB}{\@MTTKApost}%
 \draw[>->,#1]($(@MTTKA)!.5!(@MTTKB)!\@MTTKdis!(@MTTKA)$)--($(@MTTKA)!.5!(@MTTKB)!\@MTTKdis!(@MTTKB)$);
 \@ifnextchar({\@@@mytikzheikoukigou[#1]}{}%
}%
%% \mytikzfuncval<#1>#2#3#4#5 obsolete
%%  #1:オプション
%%   precision:小数点以下第何位まで表示するか設定するdefault=2
%%  #2:plotのy座標を表す関数
%%  #3:y座標を求めるためのx座標
%%  #4:y座標を格納するための制御綴
%%  #5:求めた点の名前
\define@key{mytikzfuncval}{precision}{\def\@MTFVpre{#1}}%
\def\mytikzfuncval{\@ifnextchar<{\@mytikzfuncval}{\@mytikzfuncval<>}}%
\def\@mytikzfuncval<#1>#2#3#4#5{%
 \bgroup
  \def\@MTFVpre{2}%
  \setkeys{mytikzfuncval}{#1}%
  \pgfkeys{/pgf/number format/.cd,fixed,precision=\@MTFVpre}%
%  \pgfmathparse{#3}%
%\let\x=\pgfmathresult
  \edef\x{#3}%
  \pgfmathparse{#2}%
  \pgfmathroundto{\pgfmathresult}%
  \xdef#4{\pgfmathresult}%
 \egroup
 \coordinate(#5)at({#3},{#4});
}%
%% \mytikzPcircle<#1>[#2]#3#4
%%  #3を中心にして#4を通る円を描く
\def\mytikzPcircle{\@ifnextchar<{\@mytikzPcircle}{\@mytikzPcircle<>}}%
\def\@mytikzPcircle<#1>{\@ifnextchar[{\@@mytikzPcircle<#1>}{\@@mytikzPcircle<#1>[]}}%
\def\@@mytikzPcircle<#1>[#2]#3#4{%
 \node[draw,circle through=#4,#2]at#3{};
}%
%%
\def\mypgfmathparse#1#2{%
 \pgfmathparse{#1}%
 \let#2=\pgfmathresult
}%
\def\mytikzsetflowchartshift#1{\def\@MT@base@shift{#1}}%
\def\mytikzshowflowchartname{\def\@MT@show{1}}%
\mytikzsetflowchartshift{(0,-1)}%
\define@key{mytikzflowchart}{shift}{\def\@MT@shift{#1}}%
\define@key{mytikzflowchart}{base point}{\def\@MT@base@box@name{#1}}%
\def\mytikzstermbox{\@ifstar{\def\@MT@show{1}\@mytikzsterm}{\def\@MT@show{0}\@mytikzsterm}}%
\def\@mytikzsterm{\@ifnextchar<{\@@mytikzsterm}{\@@mytikzsterm<>}}%
\def\@@mytikzsterm<#1>{\@ifnextchar[{\@@@mytikzsterm<#1>}{\@@@mytikzsterm<#1>[]}}%
\def\@@@mytikzsterm<#1>[#2]#3{%
 \c@tempcnta=\@ne\relax%box用カウンタ
 \c@tempcntb=\z@\relax%arrow用カウンタ
 \edef\@MT@box@name{box\thetempcnta}%
 \node[name=\@MT@box@name,shape=rounded rectangle,minimum width=1.5cm,#2,draw]{#3};
 \ifnum\@MT@show=\@ne
  \node[blue]at(\@MT@box@name.east)[right]{\scriptsize\@MT@box@name};
 \fi
}%
\def\mytikzetermbox{\@ifstar{\def\@MT@show{1}\@mytikzeterm}{\def\@MT@show{0}\@mytikzeterm}}
\def\@mytikzeterm{\@ifnextchar<{\@@mytikzeterm}{\@@mytikzeterm<>}}%
\def\@@mytikzeterm<#1>{\@ifnextchar[{\@@@mytikzeterm<#1>}{\@@@mytikzeterm<#1>[]}}%
\def\@@@mytikzeterm<#1>[#2]#3{%
 \let\@MT@shift=\@MT@base@shift
 \edef\@MT@base@box@name{box\thetempcnta}%
 \advance\c@tempcnta by\@ne\relax%box用カウンタ
 \edef\@MT@box@name{box\thetempcnta}%
 \setkeys{mytikzflowchart}{#1}%
 \def\@MT@sop{#2}%
 \edef\@MT@Point{$(\@MT@base@box@name)+\@MT@shift$}%
 \expandafter\@@@@mytikzterm\expandafter{\@MT@Point}{#3}%
 \ifnum\@MT@show=\@ne
  \node[blue]at(\@MT@box@name.east)[right]{\scriptsize\@MT@box@name};
 \fi
}%
\def\@@@@mytikzterm#1#2{%
 \expandafter\@@@@@mytikzterm\expandafter{\@MT@sop}{#1}{#2}%
}%
\def\@@@@@mytikzterm#1#2#3{%
 \node[name=\@MT@box@name,shape=rounded rectangle,draw,minimum width=1.5cm,#1]at(#2){#3};
}%
\def\mytikziobox{\@ifstar{\def\@MT@show{1}\@mytikzio}{\def\@MT@show{0}\@mytikzio}}
\def\@mytikzio{\@ifnextchar<{\@@mytikzio}{\@@mytikzio<>}}%
\def\@@mytikzio<#1>{\@ifnextchar[{\@@@mytikzio<#1>}{\@@@mytikzio<#1>[]}}%
\def\@@@mytikzio<#1>[#2]#3{%
 \let\@MT@shift=\@MT@base@shift
 \edef\@MT@base@box@name{box\thetempcnta}%
 \advance\c@tempcnta by\@ne\relax%box用カウンタ
 \edef\@MT@box@name{box\thetempcnta}%
 \setkeys{mytikzflowchart}{#1}%
 \def\@MT@sop{#2}%
 \edef\@MT@Point{$(\@MT@base@box@name)+\@MT@shift$}%
 \expandafter\@@@@mytikzio\expandafter{\@MT@Point}{#3}%
 \ifnum\@MT@show=\@ne
  \node[blue]at(\@MT@box@name.east)[right]{\scriptsize\@MT@box@name};
 \fi
}%
\def\@@@@mytikzio#1#2{%
 \expandafter\@@@@@mytikzio\expandafter{\@MT@sop}{#1}{#2}%
}%
\def\@@@@@mytikzio#1#2#3{%
 \node[name=\@MT@box@name,shape=trapezium,trapezium left angle=60,%
  trapezium right angle=-60,draw,#1]at(#2){#3};
}%
\def\mytikzopbox{\@ifstar{\def\@MT@show{1}\@mytikzop}{\def\@MT@show{0}\@mytikzop}}
\def\@mytikzop{\@ifnextchar<{\@@mytikzop}{\@@mytikzop<>}}%
\def\@@mytikzop<#1>{\@ifnextchar[{\@@@mytikzop<#1>}{\@@@mytikzop<#1>[]}}%
\def\@@@mytikzop<#1>[#2]#3{%
 \let\@MT@shift=\@MT@base@shift
 \edef\@MT@base@box@name{box\thetempcnta}%
 \advance\c@tempcnta by\@ne\relax%box用カウンタ
 \edef\@MT@box@name{box\thetempcnta}%
 \setkeys{mytikzflowchart}{#1}%
 \def\@MT@sop{#2}%
 \edef\@MT@Point{$(\@MT@base@box@name)+\@MT@shift$}%
 \expandafter\@@@@mytikzop\expandafter{\@MT@Point}{#3}%
 \ifnum\@MT@show=\@ne
  \node[blue]at(\@MT@box@name.east)[right]{\scriptsize\@MT@box@name};
 \fi
}%
\def\@@@@mytikzop#1#2{%
 \expandafter\@@@@@mytikzop\expandafter{\@MT@sop}{#1}{#2}%
}%
\def\@@@@@mytikzop#1#2#3{%
 \node[name=\@MT@box@name,shape=rectangle,draw,minimum width=1cm,#1]at(#2){#3};
}%
\def\mytikzifbox{\@ifstar{\def\@MT@show{1}\@mytikzif}{\def\@MT@show{0}\@mytikzif}}
\def\@mytikzif{\@ifnextchar<{\@@mytikzif}{\@@mytikzif<>}}%
\def\@@mytikzif<#1>{\@ifnextchar[{\@@@mytikzif<#1>}{\@@@mytikzif<#1>[]}}%
\def\@@@mytikzif<#1>[#2]#3{%
 \let\@MT@shift=\@MT@base@shift
 \edef\@MT@base@box@name{box\thetempcnta}%
 \advance\c@tempcnta by\@ne\relax%box用カウンタ
 \edef\@MT@box@name{box\thetempcnta}%
 \setkeys{mytikzflowchart}{#1}%
 \def\@MT@sop{#2}%
 \edef\@MT@Point{$(\@MT@base@box@name)+\@MT@shift$}%
 \expandafter\@@@@mytikzif\expandafter{\@MT@Point}{#3}%
 \ifnum\@MT@show=\@ne
  \node[blue]at(\@MT@box@name.east)[right]{\scriptsize\@MT@box@name};
 \fi
}%
\def\@@@@mytikzif#1#2{%
 \expandafter\@@@@@mytikzif\expandafter{\@MT@sop}{#1}{#2}%
}%
\def\@@@@@mytikzif#1#2#3{%
 \node[name=\@MT@box@name,shape=diamond,aspect=2,draw,#1]at(#2){#3};
}%
\def\mytikzsrepbox{\@ifstar{\def\@MT@show{1}\@mytikzsrep}{\def\@MT@show{0}\@mytikzsrep}}
\def\@mytikzsrep{\@ifnextchar<{\@@mytikzsrep}{\@@mytikzsrep<>}}%
\def\@@mytikzsrep<#1>{\@ifnextchar[{\@@@mytikzsrep<#1>}{\@@@mytikzsrep<#1>[]}}%
\def\@@@mytikzsrep<#1>[#2]#3{%
 \let\@MT@shift=\@MT@base@shift
 \edef\@MT@base@box@name{box\thetempcnta}%
 \advance\c@tempcnta by\@ne\relax%box用カウンタ
 \edef\@MT@box@name{box\thetempcnta}%
 \setkeys{mytikzflowchart}{#1}%
 \def\@MT@sop{#2}%
 \edef\@MT@Point{$(\@MT@base@box@name)+\@MT@shift$}%
 \expandafter\@@@@mytikzsrep\expandafter{\@MT@Point}{#3}%
 \ifnum\@MT@show=\@ne
  \node[blue]at(\@MT@box@name.east)[right]{\scriptsize\@MT@box@name};
 \fi
}%
\def\@@@@mytikzsrep#1#2{%
 \expandafter\@@@@@mytikzsrep\expandafter{\@MT@sop}{#1}{#2}%
}%
\def\@@@@@mytikzsrep#1#2#3{%
 \node[name=\@MT@box@name,shape=chamfered rectangle,%
 chamfered rectangle corners={north west,north east},minimum width=1.5cm,draw,#1]at(#2){#3};
}%
\def\mytikzerepbox{\@ifstar{\def\@MT@show{1}\@mytikzerep}{\def\@MT@show{0}\@mytikzerep}}
\def\@mytikzerep{\@ifnextchar<{\@@mytikzerep}{\@@mytikzerep<>}}%
\def\@@mytikzerep<#1>{\@ifnextchar[{\@@@mytikzerep<#1>}{\@@@mytikzerep<#1>[]}}%
\def\@@@mytikzerep<#1>[#2]#3{%
 \let\@MT@shift=\@MT@base@shift
 \edef\@MT@base@box@name{box\thetempcnta}%
 \advance\c@tempcnta by\@ne\relax%box用カウンタ
 \edef\@MT@box@name{box\thetempcnta}%
 \setkeys{mytikzflowchart}{#1}%
 \def\@MT@sop{#2}%
 \edef\@MT@Point{$(\@MT@base@box@name)+\@MT@shift$}%
 \expandafter\@@@@mytikzerep\expandafter{\@MT@Point}{#3}%
 \ifnum\@MT@show=\@ne
  \node[blue]at(\@MT@box@name.east)[right]{\scriptsize\@MT@box@name};
 \fi
}%
\def\@@@@mytikzerep#1#2{%
 \expandafter\@@@@@mytikzerep\expandafter{\@MT@sop}{#1}{#2}%
}%
\def\@@@@@mytikzerep#1#2#3{%
 \node[name=\@MT@box@name,shape=chamfered rectangle,%
 chamfered rectangle corners={south west,south east},draw,minimum width=1.5cm,#1]at(#2){#3};
}%
\def\mytikzarrow{\@ifstar{\def\@MT@show{1}\@mytikzarrow}{\def\@MT@show{0}\@mytikzarrow}}%
\def\@mytikzarrow{\@ifnextchar<{\@@mytikzarrow}{\@@mytikzarrow<>}}%
\def\@@mytikzarrow<#1>{\@ifnextchar[{\@@@mytikzarrow<#1>}{\@@@mytikzarrow<#1>[]}}%
\def\@@@mytikzarrow<#1>[#2]{%
 \advance\c@tempcnta by\m@ne
 \edef\@MT@start@arrow{box\thetempcnta.south}%
 \advance\c@tempcnta by\@ne
 \edef\@MT@end@arrow{box\thetempcnta.north}%
 \draw[->](\@MT@start@arrow)--(\@MT@end@arrow);
 \advance\c@tempcntb by\@ne
 \edef\@MT@arrow@name{arrow\thetempcntb}%
 \expandafter\coordinate\expandafter(\@MT@arrow@name)at($(\@MT@start@arrow)!.5!(\@MT@end@arrow)$);
 \ifnum\@MT@show=\@ne
  \node[blue]at(\@MT@arrow@name.east)[right]{\scriptsize\@MT@arrow@name};
 \fi
}%
\def\mytikzlooparrow{\@ifnextchar<{\@mytikzlooparrow}{\@mytikzlooparrow<>}}%
\def\@mytikzlooparrow<#1>{\@ifnextchar[{\@@mytikzlooparrow<#1>}{\@@mytikzlooparrow<#1>[]}}%
\def\@@mytikzlooparrow<#1>[#2]#3#4#5#6{%
 \draw[->,#2](#3.#5)--($(#3.#5)+(#6,0)$)|-(#4.#5);
}%
%% \mytikzsetCtangent*<#1>[#2]#3#4#5#6#7
%% 円外の点#3から#4を中心とする半径#5の円に引いた接線の接点を#6，#7のセットする
%% *で円及び接線を描画する
%% #2は円及び接線を描画するときの共通オプション
%% #1は未定義
\def\mytikzsetCtangent{\@ifstar{\def\@MTSCT@draw@flag{1}\@mytikzsetCtangent}{\def\@MTSCT@draw@flag{0}\@mytikzsetCtangent}}%
\def\@mytikzsetCtangent{\@ifnextchar<{\@@mytikzsetCtangent}{\@@mytikzsetCtangent<>}}%
\def\@@mytikzsetCtangent<#1>{\@ifnextchar[{\@@@mytikzsetCtangent<#1>}{\@@@mytikzsetCtangent<#1>[]}}%
\def\@@@mytikzsetCtangent<#1>[#2]#3#4#5#6#7{%
 \mytikzveclen{($#3-#4$)}\@MTSCT@P@dis
 \mytikzdelpt\@MTSCT@P@dis\@MTSCT@P@dis
 \mypgfmathparse{sqrt(pow(\@MTSCT@P@dis,2)-pow(#5,2))}\@MTSCT@P@dis
 \mytikzCandC<leftP=#6,rightP=#7>{#3}{\@MTSCT@P@dis}{#4}{#5}{X}%
 \ifnum\@MTSCT@draw@flag=\@ne
  \draw[#2]#4circle[radius=#5];
  \mytikzPline[#2]{#3(#6)}{@MTSCT@P}%
  \mytikzPline[#2]{#3(#7)}{@MTSCT@P}%
 \fi
}%
%% \mytikztoukokigou<#1>[#2]#3#4
%% #1:等弧記号のオプション
%%  width:等弧記号を描画する幅
%%  length:等弧記号の長さ
%%  num:等弧記号の数
%% #2:等弧記号を描く\drawのオプション
%% #3:円の中心
%% #4:弧を表す端点(時計回りに指定)
%%    ;で区切って複数指定可能
\define@key{mytikztoukokigou}{width}{\def\@MTTKK@width{#1}}%
\define@key{mytikztoukokigou}{length}{\def\@MTTKK@length{#1}}%
\define@key{mytikztoukokigou}{num}{\def\@MTTKK@num{#1}}%
\def\mytikztoukokigou{\@ifnextchar<{\@mytikztoukokigou}{\@mytikztoukokigou<>}}%
\def\@mytikztoukokigou<#1>{\@ifnextchar[{\@@mytikztoukokigou<#1>}{\@@mytikztoukokigou<#1>[]}}%
\def\@@mytikztoukokigou<#1>[#2]#3#4{%
 \def\@MTTKK@width{2pt}%
 \def\@MTTKK@length{5pt}%
 \def\@MTTKK@num{2}%
 \setkeys{mytikztoukokigou}{#1}%
% \pgfmathparse{\@MTTKK@length/2}%
% \let\@MTTKK@length=\pgfmathresult
 \def\@MTTKK@F@option{#1}%
 \def\@MTTKK@S@option{#2}%
 \coordinate(@MTTKK@C)at#3;%
 \expandafter\@@@mytikztoukokigou#4;;%
}%
\def\@@@mytikztoukokigou#1;{%
 \mytikzsetcoordinate{@MTTKK@S}{#1}%
 \mytikzsetcoordinate{@MTTKK@E}{\@MTTKK@Spost}%
 \mytikzveclen{($(@MTTKK@C)-(@MTTKK@S)$)}\@MTTKK@radius
 \mytikzgetangle{(@MTTKK@S)(@MTTKK@C)(@MTTKK@E)}\@MTTKK@angle
 \mypgfmathparse{\@MTTKK@angle/2}\@MTTKK@angle
 \coordinate(@MTTKK@M)at($(@MTTKK@C)!1!\@MTTKK@angle:(@MTTKK@S)$);
 \ifnum\@MTTKK@num=\@ne
  \expandafter\draw\expandafter[\@MTTKK@S@option]%
   ($(@MTTKK@M)!\@MTTKK@length/2!(@MTTKK@C)$)--($(@MTTKK@M)!-\@MTTKK@length/2!(@MTTKK@C)$);
 \else
  \coordinate(@MTTKK@P)at($(@MTTKK@M)!\@MTTKK@width/2!90:(@MTTKK@C)$);
  \coordinate(@MTTKK@PP)at($(@MTTKK@M)!\@MTTKK@width!90:(@MTTKK@C)$);
  \coordinate(@MTTKK@Q)at($(@MTTKK@M)!\@MTTKK@width/2!-90:(@MTTKK@C)$);
  \mypgfmathparse{\@MTTKK@num-1}\@MTTKK@bunbo
  \pgfmathroundto\@MTTKK@bunbo
  \let\@MTTKK@bunbo=\pgfmathresult
  \foreach \N in {1,...,\@MTTKK@num}
   {%
    \mypgfmathparse{\N-1}\@MTTKK@bunshi
    \pgfmathroundto\@MTTKK@bunshi
    \let\@MTTKK@bunshi=\pgfmathresult
    \expandafter\draw\expandafter[\@MTTKK@S@option]%
     ($(@MTTKK@P)!\@MTTKK@bunshi/\@MTTKK@bunbo!(@MTTKK@Q)!\@MTTKK@length/2!90:(@MTTKK@PP)$)--%
     ($(@MTTKK@P)!\@MTTKK@bunshi/\@MTTKK@bunbo!(@MTTKK@Q)!\@MTTKK@length/2!-90:(@MTTKK@PP)$);
   }%
 \fi
 \@ifnextchar;{\@gobble}{\@@@mytikztoukokigou}%
}%
%% \GetAngle{A,B,C}\CS
%% ∠ABCの角度を\CSに格納する
\def\GetAngle#1#2{%
 \expandafter\@GetAngle#1@#2%
}%
\def\@GetAngle#1,#2,#3@#4{%
 \coordinate(@GA1@)at(#1);%
 \coordinate(@GA2@)at(#2);%
 \coordinate(@GA3@)at(#3);%
 \path let \p0=($(@GA1@)-(@GA2@)$),\p1=($(@GA3@)-(@GA2@)$) in node{%
% \path let \p0=($(#1)-(#2)$),\p1=($(#3)-(#2)$) in node{%
  \pgfmathparse{atan2(\y1,\x1)-atan2(\y0,\x0)}%
  \ifdim\pgfmathresult pt>360pt\relax
   \pgfmathparse{\pgfmathresult-360}%
  \fi
  \ifdim\pgfmathresult pt<0pt\relax
   \pgfmathparse{\pgfmathresult+360}%
  \fi
  \global\let#4=\pgfmathresult
 };%
}%
%% \MathAtan{#1}#2
%% 原点と点(#1)とのなす角を0から360の範囲で計算したものを#2に格納する
%% 小数第1位を四捨五入している
\def\MathAtan#1#2{%
 \path let \p0=(#1) in
  node{%
   \pgfmathparse{atan2(\y0,\x0)}%
   \let\@MT@atan=\pgfmathresult
   \ifdim\@MT@atan pt<0pt\relax
    \pgfmathparse{360+\@MT@atan}%
    \let\@MT@atan=\pgfmathresult
   \fi
   \pgfmathroundto{\@MT@atan}%
   \xdef#2{\pgfmathresult}%
  };%
}%
%% \ASector<#1>[#2]{#3}{#4}%
%% A(ngle)Sector:開始点と終了点の角度を指定する扇形
%% ex:\ASector{O}{2}{30,90}%
%% #1:固有オプション
%%   arc only:弧のみを描画
%%   arc radius:#4の半径と関係なく半径を指定する
%%   over angle:指定した弧からはみ出す角度の指定
%% #2:Tikzオプション
%% #3:扇形の中心
%% #4:扇形の半径
%% #5:この開始点と終了点の角度をカンマ(,)区切りで指定
\define@key{MTASector}{arc only}[true]{\mytikzoutlinefalse}%
\define@key{MTASector}{arc radius}{\def\@MTAS@ArcRadius{#1}}%
\define@key{MTASector}{over angle}{\def\@MTAS@OverAngle{#1}}%
\def\ASector{\@ifnextchar<{\@ASector}{\@ASector<>}}%
\def\@ASector<#1>{\@ifnextchar[{\@@ASector<#1>}{\@@ASector<#1>[]}}%
\def\@@ASector<#1>[#2]#3#4#5{%
 \expandafter\@@@ASector#5@<#1>[#2]{#3}{#4}%
}%
\def\@@@ASector#1,#2@<#3>[#4]#5#6{%
 \bgroup
  \mytikzoutlinetrue
  \let\@MTAS@ArcRadius=\relax
  \def\@MTAS@OverAngle{0}%
  \setkeys{MTASector}{#3}%
  \@ifundefined{@MTAS@ArcRadius}{\def\@MTAS@ArcRadius{#6}}{}%
  \ifmytikzoutline
   \draw[#4](#5)--($(#5)+(#1-\@MTAS@OverAngle:\@MTAS@ArcRadius)$)arc[start angle=#1-\@MTAS@OverAngle,end angle=#2+\@MTAS@OverAngle,radius=\@MTAS@ArcRadius]--cycle;
  \else
   \draw[#4]($(#5)+(#1-\@MTAS@OverAngle:\@MTAS@ArcRadius)$)arc[start angle=#1-\@MTAS@OverAngle,end angle=#2+\@MTAS@OverAngle,radius=\@MTAS@ArcRadius];
  \fi
 \egroup
}%
%% \PSector<#1>[#2]{#3}{#4}%
%% P(oint)Sector:開始点と終了点を指定する扇形
%% ex:\PSector{O}{A,B}%
%% #1:固有オプション
%%   arc only:弧のみを描画
%%   arc radius:実際の半径と関係なく半径を指定する
%% #2:Tikzオプション
%% #3:扇形の中心
%% #4:弧の開始点と終了点をカンマ(,)区切りで指定
\def\PSector{\@ifnextchar<{\@PSector}{\@PSector<>}}%
\def\@PSector<#1>{\@ifnextchar[{\@@PSector<#1>}{\@@PSector<#1>[]}}%
\def\@@PSector<#1>[#2]#3#4{%
 \expandafter\@@@PSector#4@<#1>[#2]{#3}%
}%
\def\@@@PSector#1,#2@<#3>[#4]#5{%
 \GetAngle{{#1},{#5},{#2}}\@PS@DeltaAngle
 \GetAngle{{$(#5)+(1,0)$},{#5},{#1}}\@PS@StartAngle
 \pgfmathparse{\@PS@StartAngle+\@PS@DeltaAngle}%
 \let\@PS@EndAngle=\pgfmathresult
 \path let \p0=($(#5)-(#1)$),\n0={veclen(\x0,\y0)} in node{%
  \xdef\@PS@Radius{\n0}%
 };%
 \ASector<#3>[#4]{#5}{\@PS@Radius}{\@PS@StartAngle,\@PS@EndAngle}%
}%
%% \DSector<#1>[#2]{#3}{#4}{#5}%
%% D(elta)Sector:開始点と中心角を指定する扇形
%% ex:\DSector{O}{A}{150}%
%% #1:固有オプション
%%   arc only:弧のみを描画
%%   arc radius:実際の半径と関係なく半径を指定する
%% #2:Tikzオプション
%% #3:扇形の中心
%% #4:開始点
%% #5:中心角
\def\DSector{\@ifnextchar<{\@DSector}{\@DSector<>}}%
\def\@DSector<#1>{\@ifnextchar[{\@@DSector<#1>}{\@@DSector<#1>[]}}%
\def\@@DSector<#1>[#2]#3#4#5{%
 \GetAngle{{$(#3)+(1,0)$},#3,#4}\@DS@StartAngle
 \pgfmathparse{\@DS@StartAngle+#5}%
 \let\@DS@EndAngle=\pgfmathresult
 \path let \p0=($(#4)-(#3)$),\n0={veclen(\x0,\y0)} in node{\xdef\@DS@Radius{\n0}};%
 \ASector<#1>[#2]{#3}{\@DS@Radius}{\@DS@StartAngle,\@DS@EndAngle}%
}%
%% \Bunten<#1>[#2]{#3}{#4}%
%% ex:\Bunten{A,B}{4}%
%% #1:固有オプション
%%   both ends:2端点にも線分を付加する
%%   length:付加する線分の長さを指定
%% #2:Tikzオプション
%% #3:2端点をカンマ(,)区切りで指定
%% #4:何等分するか指定
\define@key{MTBunten}{both ends}[true]{\mytikzoutlinetrue}%
\define@key{MTBunten}{length}{\def\@MTB@length{#1}}%
\def\Bunten{\@ifnextchar<{\@Bunten}{\@Bunten<>}}%
\def\@Bunten<#1>{\@ifnextchar[{\@@Bunten<#1>}{\@@Bunten<#1>[]}}%
\def\@@Bunten<#1>[#2]#3#4{%
 \expandafter\@@@Bunten#3@<#1>[#2]{#4}%
}%
\def\@@@Bunten#1,#2@<#3>[#4]#5{%
 \bgroup
  \mytikzoutlinefalse
  \def\@MTB@length{7.5pt}%
  \setkeys{MTBunten}{#3}%
  \foreach \N in {2,...,#5}%
   {%
    \draw[#4]($(#1)!{(\N-1)/#5}!(#2)!\@MTB@length/2!90:(#1)$)--($(#1)!{(\N-1)/#5}!(#2)!\@MTB@length/2!-90:(#1)$);
   }%
  \ifmytikzoutline
   \draw[#4]($(#1)!{\@MTB@length/2}!90:(#2)$)--($(#1)!{\@MTB@length/2}!-90:(#2)$);
   \draw[#4]($(#2)!{\@MTB@length/2}!90:(#1)$)--($(#2)!{\@MTB@length/2}!-90:(#1)$);
  \fi
 \egroup
}%
%% \ToukakuKigou<#1>[#2]{#3}{#4}%
%% ex:\ToukakuKitou{A,B,C;B,C,D;D,A,B}{$\circ$}%
%% #1:固有オプション
%%   arc:弧を描画する
%%   arc radius:弧に対する半径(12.5pt)
%%   string radius:文字列に対する半径(7.5pt)
%%   string size:文字列の大きさ(scriptsize)
%%   sign num:弧上に配置する等弧記号の数(0)
%%   sign length:弧上に配置する等弧記号の長さ(7.5pt)
%%   sign space:弧上に配置する等弧記号間の間隔(1pt)
%% #2:Tikzオプション
%% #3:∠ABCなどをカンマ(,)区切りでセミコロン(;)で複数指定する
%% #4:使用する記号を指定する
\define@key{MTToukakuKigou}{arc}[true]{\mytikzoutlinetrue}%
\define@key{MTToukakuKigou}{arc radius}{\def\@MTTK@ArcRadius{#1}}%
\define@key{MTToukakuKigou}{string radius}{\def\@MTTK@StringRadius{#1}}%
\define@key{MTToukakuKigou}{string size}{\def\@MTTK@StringSize{#1}}%
\define@key{MTToukakuKigou}{sign num}{\def\@MTTK@SignNum{#1}}%
\define@key{MTToukakuKigou}{sign length}{\def\@MTTK@SignLength{#1}}%
\define@key{MTToukakuKigou}{sign space}{\def\@MTTK@SignSpace{#1}}%
\def\ToukakuKigou{\@ifnextchar<{\@ToukakuKigou}{\@ToukakuKigou<>}}%
\def\@ToukakuKigou<#1>{\@ifnextchar[{\@@ToukakuKigou<#1>}{\@@ToukakuKigou<#1>[]}}%
\def\@@ToukakuKigou<#1>[#2]#3#4{%
 \bgroup
  \def\@MTTK@arc{}%
  \def\@MTTK@SOption{#2}%
  \def\@MTTK@String{#4}%
  \mytikzoutlinefalse
  \def\@MTTK@ArcRadius{12.5pt}%
  \def\@MTTK@StringRadius{7.5pt}%
  \def\@MTTK@StringSize{\scriptsize}%
  \def\@MTTK@SignNum{0}%
  \def\@MTTK@SignLength{7.5pt}%
  \def\@MTTK@SignSpace{1pt}%
  \setkeys{MTToukakuKigou}{#1}%
  \@@@ToukakuKigou#3;/%
 \egroup
}%
\def\@@@ToukakuKigou#1,#2,#3;{%
 \ifmytikzoutline
  \expandafter\@@@ToukakuKigou@PSector\expandafter[\@MTTK@SOption]{#2}@{#1},{#3}\@nil%
 \fi
 \GetAngle{#1,#2,#3}\@MTTK@DeltaAngle
 \node at($(#2)!\@MTTK@StringRadius!{\@MTTK@DeltaAngle/2}:(#1)$){\@MTTK@StringSize\@MTTK@String};
 \pgfmathparse{\@MTTK@SignSpace*\@MTTK@SignNum/2}%
 \@tempdima=\@MTTK@SignSpace\relax
 \@tempdima=\@MTTK@SignNum\@tempdima\relax
 \@tempdima=.5\@tempdima\relax
 \let\@MTTK@SignHalfWidth=\pgfmathresult
 \coordinate(@MTTK@M)at($(#2)!\@MTTK@ArcRadius!{\@MTTK@DeltaAngle/2}:(#1)$);
 \coordinate(@MTTK@End1)at($(@MTTK@M)!\@tempdima!90:(#2)$);
 \coordinate(@MTTK@End2)at($(@MTTK@M)!\@tempdima!-90:(#2)$);
 \ifcase\@MTTK@SignNum
  %=0
 \or
  %=1
  \expandafter\draw\expandafter[\@MTTK@SOption]%
       ($(@MTTK@M)!{\@MTTK@SignLength/2}!0:(#2)$)%
        --%
       ($(@MTTK@M)!{\@MTTK@SignLength/2}!180:(#2)$);
 \or
  %=2
  \expandafter\draw\expandafter[\@MTTK@SOption]%
       ($(@MTTK@End1)!{\@MTTK@SignLength/2}!90:(@MTTK@End2)$)%
        --%
       ($(@MTTK@End1)!{\@MTTK@SignLength/2}!-90:(@MTTK@End2)$);
  \expandafter\draw\expandafter[\@MTTK@SOption]%
       ($(@MTTK@End2)!{\@MTTK@SignLength/2}!90:(@MTTK@End1)$)%
        --%
       ($(@MTTK@End2)!{\@MTTK@SignLength/2}!-90:(@MTTK@End1)$);
 \else
  %=>3
  \c@tempcnta=\@MTTK@SignNum\relax
  \advance\c@tempcnta by\m@ne\relax
  \Bunten<both ends,length=\@MTTK@SignLength>{@MTTK@End1,@MTTK@End2}{\thetempcnta}%
 \fi
 \@ifnextchar/{\@gobble}{\@@@ToukakuKigou}%
}%
\def\@@@ToukakuKigou@PSector[#1]#2@#3,#4\@nil{%
 \PSector<arc radius=\@MTTK@ArcRadius>[#1]{#2}{{#3},{#4}}%
}%
%% \TouhenKigouSub<#1>[#2]{#3,#4}
%% #1:固有オプション
%%   length:記号の長さ(7.5pt)
%%   space:記号の間隔(3pt)
%%   sign num:記号の個数(2)
%% #2:Tikzオプション
%% #3,#4:端点1,端点2
\define@key{MTTouhenKigou}{length}{\def\@MTTK@length{#1}}%
\define@key{MTTouhenKigou}{space}{\def\@MTTK@space{#1}}%
\define@key{MTTouhenKigou}{sign num}{\def\@MTTK@SignNum{#1}}%
\def\TouhenKigouSub{\@ifnextchar<{\@TouhenKigouSub}{\@TouhenKigouSub<>}}%
\def\@TouhenKigouSub<#1>{\@ifnextchar[{\@@TouhenKigouSub<#1>}{\@@TouhenKigouSub<#1>[]}}%
\def\@@TouhenKigouSub<#1>[#2]#3{%
 \@@@TouhenKigouSub<#1>[#2]#3\@nil%
}%
\def\@@@TouhenKigouSub<#1>[#2]#3,#4\@nil{%
 \bgroup
  \def\@MTTK@length{7.5pt}%
  \def\@MTTK@space{3pt}%
  \def\@MTTK@SignNum{2}%
  \setkeys{MTTouhenKigou}{#1}%
  \@tempdima=\@MTTK@space\relax
  \@tempdima=\numexpr(\@MTTK@SignNum-1)\@tempdima\relax
  \@tempdima=.5\@tempdima\relax
  \coordinate(@MTTKS@M)at($(#3)!1/2!(#4)$);
  \coordinate(@MTTKS@A)at($(@MTTKS@M)!\@tempdima!(#3)$);
  \coordinate(@MTTKS@B)at($(@MTTKS@M)!\@tempdima!(#4)$);
  \ifcase\@MTTK@SignNum
   %=0
  \or
   %=1
   \draw[#2]($(@MTTKS@M)!{\@MTTK@length/2}!90:(#3)$)%
             --%
            ($(@MTTKS@M)!{\@MTTK@length/2}!-90:(#3)$);
  \or
   %=2
   \draw[#2]($(@MTTKS@A)!{\@MTTK@length/2}!90:(#3)$)%
             --%
            ($(@MTTKS@A)!{\@MTTK@length/2}!-90:(#3)$);
   \draw[#2]($(@MTTKS@B)!{\@MTTK@length/2}!90:(#4)$)%
             --%
            ($(@MTTKS@B)!{\@MTTK@length/2}!-90:(#4)$);
  \else
   %>=3
   \Bunten<both ends,length=\@MTTK@length>[#2]{@MTTKS@A,@MTTKS@B}{\numexpr\@MTTK@SignNum-1}%
  \fi
 \egroup
}%
%% \TouhenKigou<#1>[#2]{#3}
%% #1:固有オプション
%%   length:記号の長さ(7.5pt)
%%   space:記号の間隔(3pt)
%%   sign num:記号の個数(2)
%% #2:Tikzオプション
%% #3:2端点をカンマ(,)区切りで指定したものをセミコロン(;)区切りで複数指定する
\def\TouhenKigou{\@ifnextchar<{\@TouhenKigou}{\@TouhenKigou<>}}%
\def\@TouhenKigou<#1>{\@ifnextchar[{\@@TouhenKigou<#1>}{\@@TouhenKigou<#1>[]}}%
\def\@@TouhenKigou<#1>[#2]#3{%
 \@@@TouhenKigou<#1>[#2]#3;/%
}%
\def\@@@TouhenKigou<#1>[#2]#3,#4;{%
 \TouhenKigouSub<#1>[#2]{#3,#4}%
 \@ifnextchar/{\@gobble}{\@@@TouhenKigou<#1>[#2]}%
}%
%% \Henko<#1>[#2]{#3,#4}{#5}%
%% #1:固有オプション
%%    fboxsep:文字列の周りのスペース(1pt)
%%    fontsize:文字列のサイズ(\scriptsize)
%%    angle:弦から出る角度
%%    rotate:文字列の回転指定(0:回転させない 1:始点から終点 -1:終点から始点)
%%    pos:文字列の配置位置(.5)
%%    background color:文字列の背景色の指定(white)[transparentで塗りつぶしなし]
%% #2:Tikzオプション
%% #3,#4:2端点をカンマ区切りで指定
%% #5:配置文字列の指定
\define@key{MTHenko}{fboxsep}{\def\@MTH@fboxsep{#1}}%
\define@key{MTHenko}{fontsize}{\def\@MTH@fontsize{#1}}%
\define@key{MTHenko}{angle}{\def\@MTH@angle{#1}}%
\define@key{MTHenko}{rotate}{\def\@MTH@rotate{#1}}%
\define@key{MTHenko}{pos}{\def\@MTH@pos{#1}}%
\define@key{MTHenko}{background color}{\def\@MTH@BG@color{#1}}%
\def\Henko{\@ifnextchar<{\@Henko}{\@Henko<>}}%
\def\@Henko<#1>{\@ifnextchar[{\@@Henko<#1>}{\@@Henko<#1>[]}}%
\def\@@Henko<#1>[#2]#3#4{%
 \bgroup
  \def\@MTH@fboxsep{1pt}%
  \def\@MTH@fontsize{\scriptsize}%
  \let\@MTH@angle=\@empty%
  \def\@MTH@rotate{0}%
  \def\@MTH@pos{.5}%
  \def\@MTH@BG@color{white}%
  \def\@MTH@BG@transparent{transparent}%
  \setkeys{MTHenko}{#1}%
  \ifx\@MTH@BG@color\@MTH@BG@transparent
   \let\colorbox=\@gobble
  \fi
  \@@@Henko<#1>[#2]#3@{#4}%
 \egroup
}%
\def\@@@Henko<#1>[#2]#3,#4@#5{%
 %弧を描いた後に文字列を配置する
 \ifx\@MTH@angle\@empty
  \draw[mydash,#2](#3)to[bend right](#4);
 \else
  \draw[mydash,#2](#3)to[bend right=\@MTH@angle](#4);
 \fi
 \ifnum\@MTH@rotate=\z@
 \else
%  \GetAngle{{$(#3)+(1,0)$},{#3},{#4}}\@MTH@rotate@angle
  \MathAtan{$(#4)-(#3)$}\@MTH@rotate@angle%\MathAtanは整数値を出力
  \@tempcnta=\numexpr90*(\@MTH@rotate-1)+\@MTH@rotate@angle\relax
  \edef\@MTH@rotate{\the\@tempcnta}%
 \fi
 \ifx\@MTH@angle\@empty
  \path[#2](#3)to[bend right]node[rotate=\@MTH@rotate,pos=\@MTH@pos]%
   {\fboxsep=\@MTH@fboxsep\colorbox{\@MTH@BG@color}{\@MTH@fontsize#5}}(#4);
 \else
  \path[#2](#3)to[bend right=\@MTH@angle]node[rotate=\@MTH@rotate,pos=\@MTH@pos]%
   {\fboxsep=\@MTH@fboxsep\colorbox{\@MTH@BG@color}{\@MTH@fontsize#5}}(#4);
 \fi
}%
%% \RightAngle<#1>[#2]{#3}%
%% #1:固有オプション
%%    size:直角記号の1辺の長さ(10pt)
%%    cycle:正方形(ひし形)を作るときに宣言する
%%          記号の内部を塗りつぶすときなどに使用する
%% #2:TikZオプション
%% #3:直角をなす角をカンマ(,)区切りで指定したものをセミコロン(;)で区切り複数指定する
\define@key{MTRightAngle}{size}{\def\@MTRA@size{#1}}%
\define@key{MTRightAngle}{cycle}[true]{\mytikzoutlinetrue}%
\def\RightAngle{\@ifnextchar<{\@RightAngle}{\@RightAngle<>}}%
\def\@RightAngle<#1>{\@ifnextchar[{\@@RightAngle<#1>}{\@@RightAngle<#1>[]}}%
\def\@@RightAngle<#1>[#2]#3{%
 \bgroup
  \mytikzoutlinefalse
  \def\@MTRA@size{10pt}%
  \setkeys{MTRightAngle}{#1}%
  \@@@RightAngle<#1>[#2]#3;/%
 \egroup
}%
\def\@@@RightAngle<#1>[#2]#3,#4,#5;{%
 \coordinate(@MTRA@A)at($(#4)!\@MTRA@size!(#3)$);
 \coordinate(@MTRA@B)at($(#4)!\@MTRA@size!(#5)$);
 \coordinate(@MTRA@X)at($(@MTRA@A)+(@MTRA@B)-(#4)$);
 \ifmytikzoutline
  \draw[#2](#4)--(@MTRA@A)--(@MTRA@X)--(@MTRA@B)--cycle;
 \else
  \draw[#2](@MTRA@A)--(@MTRA@X)--(@MTRA@B);
 \fi
 \@ifnextchar/{\@gobble}{\@@@RightAngle<#1>[#2]}%
}%
%% \Veclen{#1}#2
%% ex:\Veclen{A}\hoge
\def\Veclen#1#2{%
 \path let \p0=(#1) in node
  {%
   \pgfmathparse{sqrt(pow(\x0/28.45274,2)+pow(\y0/28.45274,2))}%
   \xdef#2{\pgfmathresult}%
  };%
}%
%% \Maru*<#1>[#2]{#3}%
%% *:負荷すると黒丸，負荷しないと白丸
%% #1:半径オプション
%%   radius,x radius,y radius
%% #2:描画オプション
%% #3:点を打つポイントをカンマ(,)区切りで複数指定
\let\Maru=\mytikzmaru
%% \Function<#1>[#2]#3#4#5
%% #1:オプション1
%%  leftP:左端点(x or y座標が最小)の名前default=leftP
%%  rightP:右端点(x or y座標が最大)の名前default=rightP
%% #2:オプション2
%%  \drawに対するオプション
%%  defaultはsmooth
%% #3:x座標を表す式
%% #4:y座標を表す式
%% #5:この関数のパスの名前(交点を求めるときに使える)
\let\Function=\mytikzfunction
%%% \Vline<#1>[#2]{#3}{#4}{#5}%
%%% V(ector)line
%%% ex:\Vline{A}{1,2}{line1}%
%%% #1:固有オプション
%%%   leftP:左端点の名前を指定(leftP)
%%%   rightP:右端点の名前を指定(rightP)
%%%   noline:直線を描画しない
%%%   half:点#3を始点とする半直線にする
%%% #2:TikZオプション
%%% #3:通過点
%%% #4:方向ベクトル
%%% #5:パスの名前
%\define@key{MTVline}{rightP}{\def\@MTV@rightP{#1}}%
%\define@key{MTVline}{leftP}{\def\@MTV@leftP{#1}}%
%\define@key{MTVline}{noline}[true]{\mytikzoutlinefalse}%
%\define@key{MTVline}{half}[true]{\def\@MTV@half{1}}%
%\def\Vline{\@ifnextchar<{\@Vline}{\@Vline<>}}%
%\def\@Vline<#1>{\@ifnextchar[{\@@Vline<#1>}{\@@Vline<#1>[]}}%
%\def\@@Vline<#1>[#2]#3#4#5{%
% \bgroup
%  \mytikzoutlinetrue
%  \def\@MTV@leftP{leftP}%
%  \def\@MTV@rightP{rightP}%
%\def\@MTV@half{0}%
%  \setkeys{MTVline}{#1}%
%  \path let \p0=($(trueRT)-(trueLB)$),\p1=(#4) in node
%   {%
%    \pgfmathparse{sqrt(pow(\x0/28.45274,2)+pow(\y0/28.45274,2))}%
%    \xdef\@MTV@MAXlength{\pgfmathresult}%
%    \pgfmathparse{sqrt(pow(\x1/28.45274,2)+pow(\y1/28.45274,2))}%
%    \xdef\@MTV@veclen{\pgfmathresult}%
%   };%
%  \coordinate(@UV)at($1/\@MTV@veclen*(#4)$);
%\ifnum\@MTV@half=\@ne
%\path[name path=@MTV@line](#3)--($(#3)+\@MTV@MAXlength*(@UV)$);
%\else
%  \path[name path=@MTV@line]($(#3)-\@MTV@MAXlength*(@UV)$)--($(#3)+\@MTV@MAXlength*(@UV)$);
%\fi
%  \path[name path=@MTV@frame](\xmin,\ymin)rectangle(\xmax,\ymax);
%  \path[name intersections={of=@MTV@line and @MTV@frame,name=@MTV@X,total=\t}]node{\xdef\@MTV@MAX{\t}};
%% 直線が描画領域の対角線となる場合の対処
%  \ifnum\@MTV@MAX=4\relax
%   \coordinate(@X@-1)at(@MTV@X-2);
%   \coordinate(@X@-2)at(@MTV@X-4);
%  \else
%\ifnum\@MTV@half=\@ne
%\coordinate(@X@-1)at(#3);
%\coordinate(@X@-2)at(@MTV@X-1);
%\else
%   \coordinate(@X@-1)at(@MTV@X-1);
%   \coordinate(@X@-2)at(@MTV@X-2);
%\fi
%  \fi
%  \path let \p0=(@X@-1),\p1=(@X@-2) in node
%   {%
%    \pgfkeys{/pgf/number format/.cd,fixed,precision=2}%
%    \pgfmathparse{\x0/28.45274}%
%    \pgfmathroundto{\pgfmathresult}%
%    \xdef\@MTV@AX{\pgfmathresult}%
%    \pgfmathparse{\y0/28.45274}%
%    \pgfmathroundto{\pgfmathresult}%
%    \xdef\@MTV@AY{\pgfmathresult}%
%    \pgfmathparse{\x1/28.45274}%
%    \pgfmathroundto{\pgfmathresult}%
%    \xdef\@MTV@BX{\pgfmathresult}%
%    \pgfmathparse{\y1/28.45274}%
%    \pgfmathroundto{\pgfmathresult}%
%    \xdef\@MTV@BY{\pgfmathresult}%
%   };%
%  \ifdim\@MTV@AX pt=\@MTV@BX pt\relax
%   \ifdim\@MTV@AY pt<\@MTV@BY pt\relax
%    \expandafter\coordinate\expandafter(\@MTV@leftP)at(@X@-1);
%    \expandafter\coordinate\expandafter(\@MTV@rightP)at(@X@-2);
%   \else
%    \expandafter\coordinate\expandafter(\@MTV@leftP)at(@X@-2);
%    \expandafter\coordinate\expandafter(\@MTV@rightP)at(@X@-1);
%   \fi
%  \else
%   \ifdim\@MTV@AX pt<\@MTV@BX pt\relax
%    \expandafter\coordinate\expandafter(\@MTV@leftP)at(@X@-1);
%    \expandafter\coordinate\expandafter(\@MTV@rightP)at(@X@-2);
%   \else
%    \expandafter\coordinate\expandafter(\@MTV@leftP)at(@X@-2);
%    \expandafter\coordinate\expandafter(\@MTV@rightP)at(@X@-1);
%   \fi
%  \fi
%  \ifmytikzoutline
%   \draw[#2](@X@-1)--(@X@-2);
%  \fi
%%  \path[name path=#5](@X@-1)--(@X@-2);
% \egroup
% \path[name path=#5](@X@-1)--(@X@-2);
%}%
%%% \Pline<#1>[#2]{#3}{#4}%
%%% P(ector)line
%%% ex:\Pline{A,B}{line1}%
%%% #1:固有オプション
%%%   leftP:左端点の名前を指定(leftP)
%%%   rightP:右端点の名前を指定(rightP)
%%%   noline:直線を描画しない
%%%   half:点#3の1番目の点を始点とする半直線にする
%%% #2:TikZオプション
%%% #3:2つの通過点をカンマ区切りで指定
%%% #4:パスの名前
%\def\Pline{\@ifnextchar<{\@Pline}{\@Pline<>}}%
%\def\@Pline<#1>{\@ifnextchar[{\@@Pline<#1>}{\@@Pline<#1>[]}}%
%\def\@@Pline<#1>[#2]#3#4{%
% \@@@Pline<#1>[#2]#3@{#4}%
%}%
%\def\@@@Pline<#1>[#2]#3,#4@#5{%
% \Vline<#1>[#2]{#3}{$(#4)-(#3)$}{#5}%
%}%
%%% \Sline<#1>[#2]#3#4#5
%%% S(lope)line:1点と傾き指定
%%% #1:オプション1
%%%   leftP:左端点の名前を指定(leftP)
%%%   rightP:右端点の名前を指定(rightP)
%%%   noline:直線を描画しない
%%%   half:点#3を始点とする半直線にする
%%% #2:TikZオプション
%%% #3:直線を通る1点を指定
%%% #4:この直線の傾きを指定
%%% #5:パスの名前
%\def\Sline{\@ifnextchar<{\@Sline}{\@Sline<>}}%
%\def\@Sline<#1>{\@ifnextchar[{\@@Sline<#1>}{\@@Sline<#1>[]}}%
%\def\@@Sline<#1>[#2]#3#4#5{%
% \Vline<#1>[#2]{#3}{1,{#4}}{#5}%
%}%
%%% \Aline<#1>[#2]#3#4#5
%%% A(ngle)line:1点と角度指定
%%% #1:オプション1
%%%   leftP:左端点の名前を指定(leftP)
%%%   rightP:右端点の名前を指定(rightP)
%%%   noline:直線を描画しない
%%%   half:点#3を始点とする半直線にする
%%% #2:TikZオプション
%%% #3:直線を通る1点を指定
%%% #4:x軸とのなす角度を指定(60分法)
%%% #5:パスの名前
%\def\Aline{\@ifnextchar<{\@Aline}{\@Aline<>}}%
%\def\@Aline<#1>{\@ifnextchar[{\@@Aline<#1>}{\@@Aline<#1>[]}}%
%\def\@@Aline<#1>[#2]#3#4#5{%
% \Vline<#1>[#2]{#3}{{cos(#4)},{sin(#4)}}{#5}%
%}%
%%% \Nline:1点と法線ベクトル指定
%%% N(ormalVector)line
%%% #1:オプション1
%%%   leftP:左端点の名前を指定(leftP)
%%%   rightP:右端点の名前を指定(rightP)
%%%   noline:直線を描画しない
%%%   half:点#3を始点とする半直線にする[方向ベクトルは指定した法線ベクトルを-90度回転させたもの]
%%% #2:TikZオプション
%%% #3:直線を通る1点を指定
%%% #4:法線ベクトルの成分を指定
%%% #5:パスの名前
%\def\Nline{\@ifnextchar<{\@Nline}{\@Nline<>}}%
%\def\@Nline<#1>{\@ifnextchar[{\@@Nline<#1>}{\@@Nline<#1>[]}}%
%\def\@@Nline<#1>[#2]#3#4#5{%
% \Vline<#1>[#2]{#3}{$(O)!1!-90:(#4)$}{#5}%
%}%
%V(ector),P(oint),S(lope),A(angle),N(ormal Vector)
%% \VVIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% ex:\VVIntersection
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の方向ベクトル
%% #5:直線2の通過点
%% #6:直線2の方向ベクトル
%% #7:交点の名前
\define@key{MTIntersection}{drawline}[true]{\def\@MTI@noline{}}%
\def\VVIntersection{\@ifnextchar<{\@VVIntersection}{\@VVIntersection<>}}%
\def\@VVIntersection<#1>{\@ifnextchar[{\@@VVIntersection<#1>}{\@@VVIntersection<#1>[]}}%
\def\@@VVIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \VPIntersection<#1>[#2]{#3}{#4}{#5}{#6}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の方向ベクトル
%% #5:直線2の2つの通過点をカンマ(,)区切りで指定
%% #6:交点の名前
\def\VPIntersection{\@ifnextchar<{\@VPIntersection}{\@VPIntersection<>}}%
\def\@VPIntersection<#1>{\@ifnextchar[{\@@VPIntersection<#1>}{\@@VPIntersection<#1>[]}}%
\def\@@VPIntersection<#1>[#2]#3#4#5#6{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Pline\expandafter<\@MTI@noline>[#2]{#5}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#6)at(@MTI@X-1);
}%
%% \VSIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の方向ベクトル
%% #5:直線2の通過点
%% #6:直線2の傾き
%% #7:交点の名前
\def\VSIntersection{\@ifnextchar<{\@VSIntersection}{\@VSIntersection<>}}%
\def\@VSIntersection<#1>{\@ifnextchar[{\@@VSIntersection<#1>}{\@@VSIntersection<#1>[]}}%
\def\@@VSIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Sline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \VAIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の方向ベクトル
%% #5:直線2の通過点
%% #6:直線2のx軸とのなす角度
%% #7:交点の名前
\def\VAIntersection{\@ifnextchar<{\@VAIntersection}{\@VAIntersection<>}}%
\def\@VAIntersection<#1>{\@ifnextchar[{\@@VAIntersection<#1>}{\@@VAIntersection<#1>[]}}%
\def\@@VAIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Aline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \VNIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の方向ベクトル
%% #5:直線2の通過点
%% #6:直線2の法線ベクトル
%% #7:交点の名前
\def\VNIntersection{\@ifnextchar<{\@VNIntersection}{\@VNIntersection<>}}%
\def\@VNIntersection<#1>{\@ifnextchar[{\@@VNIntersection<#1>}{\@@VNIntersection<#1>[]}}%
\def\@@VNIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Nline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \PVIntersection<#1>[#2]{#3}{#4}{#5}{#6}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の2つの通過点をカンマ(,)区切りで指定
%% #4:直線2の通過点
%% #5:直線2の方向ベクトル
%% #6:交点の名前
\def\PVIntersection{\@ifnextchar<{\@PVIntersection}{\@PVIntersection<>}}%
\def\@PVIntersection<#1>{\@ifnextchar[{\@@PVIntersection<#1>}{\@@PVIntersection<#1>[]}}%
\def\@@PVIntersection<#1>[#2]#3#4#5#6{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Pline\expandafter<\@MTI@noline>[#2]{#3}{@MTI@A}%
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#4}{#5}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#6)at(@MTI@X-1);
}%
%% \PPIntersection<#1>[#2]{#3}{#4}{#5}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の2つの通過点をカンマ(,)区切りで指定
%% #4:直線2の2つの通過点をカンマ(,)区切りで指定
%% #5:交点の名前
\def\PPIntersection{\@ifnextchar<{\@PPIntersection}{\@PPIntersection<>}}%
\def\@PPIntersection<#1>{\@ifnextchar[{\@@PPIntersection<#1>}{\@@PPIntersection<#1>[]}}%
\def\@@PPIntersection<#1>[#2]#3#4#5{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Pline\expandafter<\@MTI@noline>[#2]{#3}{@MTI@A}%
  \expandafter\Pline\expandafter<\@MTI@noline>[#2]{#4}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#5)at(@MTI@X-1);
}%
%% \PSIntersection<#1>[#2]{#3}{#4}{#5}{#6}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の2つの通過点をカンマ(,)区切りで指定
%% #4:直線2の通過点
%% #5:直線2の傾き
%% #6:交点の名前
\def\PSIntersection{\@ifnextchar<{\@PSIntersection}{\@PSIntersection<>}}%
\def\@PSIntersection<#1>{\@ifnextchar[{\@@PSIntersection<#1>}{\@@PSIntersection<#1>[]}}%
\def\@@PSIntersection<#1>[#2]#3#4#5#6{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Pline\expandafter<\@MTI@noline>[#2]{#3}{@MTI@A}%
  \expandafter\Sline\expandafter<\@MTI@noline>[#2]{#4}{#5}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#6)at(@MTI@X-1);
}%
%% \PAIntersection<#1>[#2]{#3}{#4}{#5}{#6}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の2つの通過点をカンマ(,)区切りで指定
%% #4:直線2の通過点
%% #5:直線2のx軸とのなす角
%% #6:交点の名前
\def\PAIntersection{\@ifnextchar<{\@PAIntersection}{\@PAIntersection<>}}%
\def\@PAIntersection<#1>{\@ifnextchar[{\@@PAIntersection<#1>}{\@@PAIntersection<#1>[]}}%
\def\@@PAIntersection<#1>[#2]#3#4#5#6{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Pline\expandafter<\@MTI@noline>[#2]{#3}{@MTI@A}%
  \expandafter\Aline\expandafter<\@MTI@noline>[#2]{#4}{#5}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#6)at(@MTI@X-1);
}%
%% \PNIntersection<#1>[#2]{#3}{#4}{#5}{#6}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の2つの通過点をカンマ(,)区切りで指定
%% #4:直線2の通過点
%% #5:直線2の法線ベクトル
%% #6:交点の名前
\def\PNIntersection{\@ifnextchar<{\@PNIntersection}{\@PNIntersection<>}}%
\def\@PNIntersection<#1>{\@ifnextchar[{\@@PNIntersection<#1>}{\@@PNIntersection<#1>[]}}%
\def\@@PNIntersection<#1>[#2]#3#4#5#6{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Pline\expandafter<\@MTI@noline>[#2]{#3}{@MTI@A}%
  \expandafter\Nline\expandafter<\@MTI@noline>[#2]{#4}{#5}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#6)at(@MTI@X-1);
}%
%% \SVIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の傾き
%% #5:直線2の通過点
%% #6:直線2の方向ベクトル
%% #7:交点の名前
\def\SVIntersection{\@ifnextchar<{\@SVIntersection}{\@SVIntersection<>}}%
\def\@SVIntersection<#1>{\@ifnextchar[{\@@SVIntersection<#1>}{\@@SVIntersection<#1>[]}}%
\def\@@SVIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Sline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \SPIntersection<#1>[#2]{#3}{#4}{#5}{#6}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の傾き
%% #5:直線2の2つの通過点をカンマ(,)区切りで指定
%% #6:交点の名前
\def\SPIntersection{\@ifnextchar<{\@SPIntersection}{\@SPIntersection<>}}%
\def\@SPIntersection<#1>{\@ifnextchar[{\@@SPIntersection<#1>}{\@@SPIntersection<#1>[]}}%
\def\@@SPIntersection<#1>[#2]#3#4#5#6{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Sline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Pline\expandafter<\@MTI@noline>[#2]{#5}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#6)at(@MTI@X-1);
}%
%% \SSIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の傾き
%% #5:直線2の通過点
%% #6:直線2の傾き
%% #7:交点の名前
\def\SSIntersection{\@ifnextchar<{\@SSIntersection}{\@SSIntersection<>}}%
\def\@SSIntersection<#1>{\@ifnextchar[{\@@SSIntersection<#1>}{\@@SSIntersection<#1>[]}}%
\def\@@SSIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Sline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Sline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \SAIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の傾き
%% #5:直線2の通過点
%% #6:直線2のx軸とのなす角
%% #7:交点の名前
\def\SAIntersection{\@ifnextchar<{\@SAIntersection}{\@SAIntersection<>}}%
\def\@SAIntersection<#1>{\@ifnextchar[{\@@SAIntersection<#1>}{\@@SAIntersection<#1>[]}}%
\def\@@SAIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Sline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Aline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \SNIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の傾き
%% #5:直線2の通過点
%% #6:直線2の法線ベクトル
%% #7:交点の名前
\def\SNIntersection{\@ifnextchar<{\@SNIntersection}{\@SNIntersection<>}}%
\def\@SNIntersection<#1>{\@ifnextchar[{\@@SNIntersection<#1>}{\@@SNIntersection<#1>[]}}%
\def\@@SNIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Sline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Nline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \AVIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1のx軸とのなす角
%% #5:直線2の通過点
%% #6:直線2の方向ベクトル
%% #7:交点の名前
\def\AVIntersection{\@ifnextchar<{\@AVIntersection}{\@AVIntersection<>}}%
\def\@AVIntersection<#1>{\@ifnextchar[{\@@AVIntersection<#1>}{\@@AVIntersection<#1>[]}}%
\def\@@AVIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Aline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \APIntersection<#1>[#2]{#3}{#4}{#5}{#6}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1のx軸とのなす角
%% #5:直線2の2つの通過点をカンマ(,)区切りで指定
%% #6:交点の名前
\def\APIntersection{\@ifnextchar<{\@APIntersection}{\@APIntersection<>}}%
\def\@APIntersection<#1>{\@ifnextchar[{\@@APIntersection<#1>}{\@@APIntersection<#1>[]}}%
\def\@@APIntersection<#1>[#2]#3#4#5#6{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Aline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Pline\expandafter<\@MTI@noline>[#2]{#5}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#6)at(@MTI@X-1);
}%
%% \ASIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1のx軸とのなす角
%% #5:直線2の通過点
%% #6:直線2の傾き
%% #7:交点の名前
\def\ASIntersection{\@ifnextchar<{\@ASIntersection}{\@ASIntersection<>}}%
\def\@ASIntersection<#1>{\@ifnextchar[{\@@ASIntersection<#1>}{\@@ASIntersection<#1>[]}}%
\def\@@ASIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Aline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Sline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \AAIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1のx軸とのなす角
%% #5:直線2の通過点
%% #6:直線2のx軸とのなす角
%% #7:交点の名前
\def\AAIntersection{\@ifnextchar<{\@AAIntersection}{\@AAIntersection<>}}%
\def\@AAIntersection<#1>{\@ifnextchar[{\@@AAIntersection<#1>}{\@@AAIntersection<#1>[]}}%
\def\@@AAIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Aline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Aline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \ANIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1のx軸とのなす角
%% #5:直線2の通過点
%% #6:直線2の法線ベクトル
%% #7:交点の名前
\def\ANIntersection{\@ifnextchar<{\@ANIntersection}{\@ANIntersection<>}}%
\def\@ANIntersection<#1>{\@ifnextchar[{\@@ANIntersection<#1>}{\@@ANIntersection<#1>[]}}%
\def\@@ANIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Aline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Nline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \NVIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の法線ベクトル
%% #5:直線2の通過点
%% #6:直線2の方向ベクトル
%% #7:交点の名前
\def\NVIntersection{\@ifnextchar<{\@NVIntersection}{\@NVIntersection<>}}%
\def\@NVIntersection<#1>{\@ifnextchar[{\@@NVIntersection<#1>}{\@@NVIntersection<#1>[]}}%
\def\@@NVIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Nline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \NPIntersection<#1>[#2]{#3}{#4}{#5}{#6}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の法線ベクトル
%% #5:直線2の2つの通過点をカンマ(,)区切りで指定
%% #6:交点の名前
\def\NPIntersection{\@ifnextchar<{\@NPIntersection}{\@NPIntersection<>}}%
\def\@NPIntersection<#1>{\@ifnextchar[{\@@NPIntersection<#1>}{\@@NPIntersection<#1>[]}}%
\def\@@NPIntersection<#1>[#2]#3#4#5#6{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Nline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Pline\expandafter<\@MTI@noline>[#2]{#5}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#6)at(@MTI@X-1);
}%
%% \NSIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の法線ベクトル
%% #5:直線2の通過点
%% #6:直線2の傾き
%% #7:交点の名前
\def\NSIntersection{\@ifnextchar<{\@NSIntersection}{\@NSIntersection<>}}%
\def\@NSIntersection<#1>{\@ifnextchar[{\@@NSIntersection<#1>}{\@@NSIntersection<#1>[]}}%
\def\@@NSIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Nline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Sline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \NAIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の法線ベクトル
%% #5:直線2の通過点
%% #6:直線2のx軸とのなす角
%% #7:交点の名前
\def\NAIntersection{\@ifnextchar<{\@NAIntersection}{\@NAIntersection<>}}%
\def\@NAIntersection<#1>{\@ifnextchar[{\@@NAIntersection<#1>}{\@@NAIntersection<#1>[]}}%
\def\@@NAIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Nline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Aline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%% \NNIntersection<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:交点を求めるだけではなく2直線を引く
%% #2:TikZオプション
%%   #1でdrawlineを指定した場合のみ
%% #3:直線1の通過点
%% #4:直線1の法線ベクトル
%% #5:直線2の通過点
%% #6:直線2の法線ベクトル
%% #7:交点の名前
\def\NNIntersection{\@ifnextchar<{\@NNIntersection}{\@NNIntersection<>}}%
\def\@NNIntersection<#1>{\@ifnextchar[{\@@NNIntersection<#1>}{\@@NNIntersection<#1>[]}}%
\def\@@NNIntersection<#1>[#2]#3#4#5#6#7{%
 \bgroup
  \def\@MTI@noline{noline}%
  \setkeys{MTIntersection}{#1}%
  \expandafter\Nline\expandafter<\@MTI@noline>[#2]{#3}{#4}{@MTI@A}%
  \expandafter\Nline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@MTI@B}%
  \path[name intersections={of=@MTI@A and @MTI@B,name=@MTI@X}];
 \egroup
 \coordinate(#7)at(@MTI@X-1);
}%
%%\let\SetPoint=\mytikzsetpoint 2015/05/28 \mytikzsetpoint を廃止
%% \SetPoint
%% \SetPoint*<#1>{#2}%
%% #1:shift={coordinate} 2015/05/28追加
%%    #2でセットした座標を'coordinate'の分だけシフトさせる
%%    ただし，#2で$(A)!1/2!(C)$などのように$...$のパターンはシフトしない
%% G($1/3*(A)+1/3*(B)+1/3*(C)$) や A({2*cos(60)},{3*sin(60)}) なども可能に 2015/05/16
\define@key{SetPoint}{shift}{\coordinate(@SP@BASE@)at#1;}%
\def\SetPoint{\@ifstar{\def\@SP@string@flag{0}\@SetPoint}{\def\@SP@string@flag{1}\@SetPoint}}%
\def\@SetPoint{\@ifnextchar<{\@@SetPoint}{\@@SetPoint<>}}%
\def\@@SetPoint<#1>#2{%
 \coordinate(@SP@BASE@)at(0,0);
 \setkeys{SetPoint}{#1}%
 \expandafter\@SetPoint@#2%
}%
\def\@SetPoint@{\@ifnextchar[{\@SetPoint@@}{\@SetPoint@@[\@empty]}}%
\def\@SetPoint@@[#1]#2({\@ifnextchar${\@@SetPoint@@@[#1]{#2}(}{\@SetPoint@@@[#1]{#2}(}}%
\def\@SetPoint@@@[#1]#2(#3){\@ifnextchar[{\@SetPoint@@@@[#1]{#2}(#3)}{\@SetPoint@@@@[#1]{#2}(#3)[]}}%
\def\@SetPoint@@@@[#1]#2(#3)[#4]{\@ifnextchar({\@SetPoint@@@@@[#1]{#2}(#3)[#4]}{\@SetPoint@@@@@[#1]{#2}(#3)[#4]()}}%
\def\@@SetPoint@@@[#1]#2($#3$){%
 \@ifnextchar[{\@@SetPoint@@@@[#1]{#2}($#3$)}{\@@SetPoint@@@@[#1]{#2}($#3$)[]}%
 }%
\def\@@SetPoint@@@@[#1]#2($#3$)[#4]{%
 \@ifnextchar({\@@SetPoint@@@@@[#1]{#2}($#3$)[#4]}{\@@SetPoint@@@@@[#1]{#2}($#3$)[#4]()}%
}%
\def\@SetPoint@@@@@[#1]#2(#3)[#4](#5){%
 \def\@SP@String{#1}%
 \ifx#1\@empty
  \def\@SP@NAME{#2}%
 \else
  \def\@SP@NAME{#1}%
 \fi
 \coordinate(#2)at($(@SP@BASE@)+(#3)$);%
 \@@@SetPoint{#2}{#4}{#5}%
}
\def\@@SetPoint@@@@@[#1]#2($#3$)[#4](#5){%
 \def\@SP@String{#1}%
 \ifx#1\@empty
  \def\@SP@NAME{#2}%
 \else
  \def\@SP@NAME{#1}%
 \fi
 \coordinate(#2)at($#3$);%
 \@@@SetPoint{#2}{#4}{#5}%
}%
\def\@@@SetPoint#1#2#3{%
 \def\@SP@NEWS{#2}%
 \def\@SP@COORD{#3}%
 \ifnum\@SP@string@flag=\@ne\relax
  \ifx\@SP@NEWS\@empty
   \ifx\@SP@COORD\@empty
    \node at(#1){\@SP@NAME};
   \else
    \node at(#1)[shift={(#3)}]{\@SP@NAME};
   \fi
  \else
   \node at(#1)[#2]{\@SP@NAME};
  \fi
 \fi
 \@ifnextchar;{\expandafter\@SetPoint@\@gobble}{}%
}%
%% \Juushin{#1}{#2}%
%% #1:三角形の3点をカンマ(,)区切りで指定
%% #2:重心の名前
\def\Juushin#1#2{%
 \@Juushin#1@{#2}%
}%
\def\@Juushin#1,#2,#3@#4{%
 \coordinate(#4)at($1/3*(#1)+1/3*(#2)+1/3*(#3)$);
}%
%% \Suishin<#1>{#2}{#3}% 12/24/2015 tikzpicture環境でも使用可に
%% #1:オリジナルオプション
%% #2:三角形の3点をカンマ(,)区切りで指定(ex. \Suishin{A,B,C}{S})
%% #3:垂心の名前
\NewDocumentCommand\Suishin{D<>{}mm}{% 12/25/2015 修正
 \@Suishin#2@{#3}%
}%
\def\@Suishin#1,#2,#3@#4{%
 \SetPoint*{@S@A($(#2)!(#1)!(#3)$);@S@B($(#3)!(#2)!(#1)$);@S@C($(#1)!(#3)!(#2)$)}%
 \Veclen{$(#3)-(#2)$}\@S@a
 \Veclen{$(#1)-(#3)$}\@S@b
 \Veclen{$(#2)-(#1)$}\@S@c
 \pgfmathless{\@S@b^2+\@S@c^2-\@S@a^2}{0}%
 \let\@S@A@Result=\pgfmathresult
 \pgfmathless{\@S@c^2+\@S@a^2-\@S@b^2}{0}%
 \let\@S@B@Result=\pgfmathresult
 \pgfmathless{\@S@a^2+\@S@b^2-\@S@c^2}{0}%
 \let\@S@C@Result=\pgfmathresult
 \Veclen{$(#1)-(@S@A)$}\@S@D@a
 \Veclen{$(#2)-(@S@B)$}\@S@D@b
 \Veclen{$(#3)-(@S@C)$}\@S@D@c
 \ifthenelse{\@S@A@Result=\z@\and\@S@B@Result=\z@\and\@S@C@Result=\z@}{%
  \path[name path=@S@AA](#1)--(@S@A);
  \path[name path=@S@BB](#2)--(@S@B);
  \path[name intersections={of=@S@AA and @S@BB,by=#4}];
 }{%
  \ifnum\@S@A@Result=\@ne\relax
   \GetMathparse{(\@S@D@a*(\@S@b^2-\@S@D@c^2)+%
	sqrt(\@S@D@c^2*(\@S@b^2-\@S@D@a^2)*(\@S@b^2-\@S@D@c^2)))/(\@S@D@a*(\@S@D@c^2-\@S@D@a^2))}\@S@D
  \SetPoint*{#4($(#1)!{-\@S@D}!(@S@A)$)}%
  \fi
  \ifnum\@S@B@Result=\@ne\relax
   \GetMathparse{(\@S@D@b*(\@S@c^2-\@S@D@a^2)+%
	sqrt(\@S@D@a^2*(\@S@c^2-\@S@D@b^2)*(\@S@c^2-\@S@D@a^2)))/(\@S@D@b*(\@S@D@a^2-\@S@D@b^2))}\@S@D
  \SetPoint*{#4($(#2)!{-\@S@D}!(@S@B)$)}%
  \fi
  \ifnum\@S@C@Result=\@ne\relax
   \GetMathparse{(\@S@D@c*(\@S@a^2-\@S@D@b^2)+%
	sqrt(\@S@D@b^2*(\@S@a^2-\@S@D@c^2)*(\@S@a^2-\@S@D@b^2)))/(\@S@D@c*(\@S@D@b^2-\@S@D@c^2))}\@S@D
  \SetPoint*{#4($(#3)!{-\@S@D}!(@S@C)$)}%
  \fi
 }%
}%
%%% \Suishin{#1}{#2}%
%%% #1:三角形の3点をカンマ(,)区切りで指定
%%% #2:垂心の名前
%\def\Suishin#1#2{%
% \@Suishin#1@{#2}%
%}%
%\def\@Suishin#1,#2,#3@#4{%
% \NNIntersection{#1}{$(#2)-(#3)$}{#2}{$(#3)-(#1)$}{#4}%
%}%
%% \Gaishin<#1>{#2}{#3}%
%% #1:オリジナルオプション
%%  radius name:外接円の半径のコマンド名を指定[GR](ex. radius name=Vr)
%%  show points:[true]指定すると外心を求めるときに使った点が表示される
%% #2:三角形の3点をカンマ(,)区切りで指定
%% #3:外心の名前
%% デフォルトで\GRに外接円の半径を格納
\define@key{Gaishin}{radius name}{\def\@R@Name@{#1}}%
\define@key{Gaishin}{show points}[true]{\def\@G@Ast{}}%
\NewDocumentCommand\Gaishin{D<>{}mm}{%
 \def\@R@Name@{GR}%
 \def\@G@Ast{*}%
 \setkeys{Gaishin}{#1}%
 \@Gaishin#2@{#3}%
}%
\def\@Gaishin#1,#2,#3@#4{%
 \Veclen{$(#1)-(#2)$}\@G@c
 \Veclen{$(#2)-(#3)$}\@G@a
 \Veclen{$(#3)-(#1)$}\@G@b
 \GetMathparse{(\@G@b^2+\@G@c^2-\@G@a^2)/(2*\@G@b*\@G@c)}\@G@Cos@A
 \GetMathparse{sqrt(1-(\@G@Cos@A)^2)}\@G@Sin@A
 \GetMathparse{\@G@a/(2*\@G@Sin@A)}\@GR@
 \GetMathparse{sqrt(\@GR@^2-(\@G@a/2)^2)}\@G@D
 \expandafter\SetPoint\@G@Ast{@G@M($1/2*(#2)+1/2*(#3)$)}%
 \Veclen{$(@G@M)!\@G@D cm!90:(#3)-(#1)$}\@@GR@
 \GetMathparse{int(100*(\@@GR@-\@GR@))}\@G@W
 \ifnum\@G@W=\z@\relax% 差の絶対値が.001未満 場合によっては \@G@W<3 などと修正が必要かも
  \expandafter\SetPoint\@G@Ast{#4($(@G@M)!\@G@D cm!90:(#3)$)}%
 \else
  \expandafter\SetPoint\@G@Ast{#4($(@G@M)!\@G@D cm!-90:(#3)$)}%
 \fi
 \expandafter\let\csname\@R@Name@\endcsname=\@GR@
}%
%\def\Gaishin#1#2{%
% \@Gaishin#1@{#2}%
%}%
%\def\@Gaishin#1,#2,#3@#4{%
% \NNIntersection{$(#1)!1/2!(#2)$}{$(#1)-(#2)$}{$(#1)!1/2!(#3)$}{$(#1)-(#3)$}{#4}%
% \path let \p0=($(#4)-(#1)$) in node
%  {%
%   \pgfmathparse{sqrt(pow(\x0/28.45274,2)+pow(\y0/28.45274,2))}%
%   \xdef\GR{\pgfmathresult}%
%  };%
%}%
%% \Naishin<#1>{#2}{#3}%
%% #1:オリジナルオプション
%%  radius name:内接円の半径のコマンド名を指定[NR](ex. radius name=Vr)
%% #2:三角形の3点をカンマ(,)区切りで指定
%% #3:内心の名前
%% デフォルトで\NRに内接円の半径を格納
\define@key{Naishin}{radius name}{\def\@R@Name@{#1}}%
\NewDocumentCommand\Naishin{D<>{}mm}{%
 \def\@R@Name@{NR}%
 \setkeys{Naishin}{#1}%
 \@@Naishin#2@{#3}%
}%
\def\@Naishin#1,#2,#3@#4{% 12/22/2015 座標の計算ではなく内分点を用いて求めることにする
%                          12/23/2015 計算が間違っていたので修正
 \Veclen{$(#1)-(#2)$}\@N@AB
 \Veclen{$(#2)-(#3)$}\@N@BC
 \Veclen{$(#3)-(#1)$}\@N@CA
 \SetPoint*{@N@B($(#3)!{\@N@BC/(\@N@BC+\@N@AB)}!(#1)$);%
	    @N@C($(#1)!{\@N@CA/(\@N@CA+\@N@BC)}!(#2)$)}%
 \path[name path=@N@B@B](B)--(@N@B);%
 \path[name path=@N@C@C](C)--(@N@C);%
 \path[name intersections={of=@N@B@B and @N@C@C,by={#4}}];%
 \Veclen{$(#3)!(#4)!(#1)-(#4)$}\@N@VR@
 \expandafter\let\csname \@R@Name@\endcsname=\@N@VR@
}%
%% \Boushin<#1>{#2}{#3}% 12/23/2015 mytikzpicture環境のみから
%%                                  すべてのtikzpicture環境で使用可に
%% #1:オリジナルオプション
%%  radius name:傍接円の半径のコマンド名を指定[BR](ex. radius name=Vr)
%% #2:三角形の3点をカンマ(,)区切りで指定
%%  A,B,Cと指定すると角Bの対辺に接する傍接円を求める
%% #3:傍心の名前
%% デフォルトで\BRに傍接円の半径を格納
\define@key{Boushin}{radius name}{\def\@R@Name@{#1}}%
\NewDocumentCommand\Boushin{D<>{}mm}{%
 \def\@R@Name@{BR}%
 \setkeys{Boushin}{#1}%
 \@Boushin#2@{#3}%
}%
\def\@Boushin#1,#2,#3@#4{%
 \Veclen{$(#1)-(#2)$}\@B@c
 \Veclen{$(#2)-(#3)$}\@B@a
 \Veclen{$(#3)-(#1)$}\@B@b
 \GetMathparse{(\@B@c^2+\@B@a^2-\@B@b^2)/(2*\@B@c*\@B@a)}\@B@Cos@B
 \GetMathparse{(1/2)*(\@B@a+\@B@b+\@B@c)*sqrt(2/(\@B@Cos@B+1)-1)}\@BR@
 \SetPoint{@B@H($(#2)!{(\@B@a+\@B@b+\@B@c)/(2*\@B@a)}!(#3)$)}%
 \Veclen{$(@B@H)!\@BR@ cm!90:(#2)-(#1)$}\@B@L@F
 \Veclen{$(@B@H)!\@BR@ cm!-90:(#2)-(#1)$}\@B@L@S
 \ifdim\@B@L@F pt<\@B@L@S pt\relax
  \SetPoint{#4($(@B@H)!\@BR@ cm!90:(#2)$)}%
 \else
  \SetPoint{#4($(@B@H)!\@BR@ cm!-90:(#2)$)}%
 \fi
 \expandafter\let\csname\@R@Name@\endcsname=\@BR@
}%
%\def\Boushin#1#2{%
% \@Boushin#1@{#2}%
%}%
%\def\@Boushin#1,#2,#3@#4{%
% \path let \p0=($(#1)-(#2)$),\p1=($(#2)-(#3)$),\p2=($(#3)-(#1)$) in node
%  {%
%   \pgfmathparse{sqrt(pow(\x0/28.45274,2)+pow(\y0/28.45274,2))}%
%   \xdef\@MT@N@AB{\pgfmathresult}%
%   \pgfmathparse{sqrt(pow(\x1/28.45274,2)+pow(\y1/28.45274,2))}%
%   \xdef\@MT@N@BC{\pgfmathresult}%
%   \pgfmathparse{sqrt(pow(\x2/28.45274,2)+pow(\y2/28.45274,2))}%
%   \xdef\@MT@N@CA{\pgfmathresult}%
%  };%
% \coordinate(@MT@N@U@AB)at($1/\@MT@N@AB*(#1)-1/\@MT@N@AB*(#2)$);
% \coordinate(@MT@N@U@BC)at($1/\@MT@N@BC*(#2)-1/\@MT@N@BC*(#3)$);
% \coordinate(@MT@N@U@CA)at($1/\@MT@N@CA*(#3)-1/\@MT@N@CA*(#1)$);
% \VVIntersection{#1}{$(@MT@N@U@AB)+(@MT@N@U@CA)$}%
%                {#3}{$(@MT@N@U@BC)+(@MT@N@U@CA)$}{#4}%
% \path let \p0=($(#1)!(#4)!(#3)-(#4)$) in node
%  {%
%   \pgfmathparse{sqrt(pow(\x0/28.45274,2)+pow(\y0/28.45274,2))}%
%   \xdef\BR{\pgfmathresult}%
%  };%
%}%
%% \CCIntersections<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline:2つの円を描画する
%% #2:TikZオプション
%%   #1でdrawlineが指定された時に使用する
%% #3:円1の中心
%% #4:円1の半径
%% #5:円2の中心
%% #6:円2の半径
%% #7:交点1と交点2の名前をカンマ(,)区切りで指定
\def\CCIntersections{\@ifnextchar<{\@CCIntersections}{\@CCIntersections<>}}%
\def\@CCIntersections<#1>{\@ifnextchar[{\@@CCIntersections<#1>}{\@@CCIntersections<#1>[]}}%
\def\@@CCIntersections<#1>[#2]#3#4#5#6#7{%
 \@@@CCIntersections<#1>[#2]{#3}{#4}{#5}{#6}#7\@nil
}%
\def\@@@CCIntersections<#1>[#2]#3#4#5#6#7,#8\@nil{%
 \bgroup
  \def\@MTI@noline{noline}%
  \def\@MTI@CCI@drawline{}%
  \setkeys{MTIntersection}{#1}%
  \path[name path=@C1@](#3)circle[radius=#4];
  \path[name path=@C2@](#5)circle[radius=#6];
  \path[name intersections={of=@C1@ and @C2@,name=@X@}];
  \path let \p0=(@X@-1),\p1=(@X@-2) in node
   {%
    \pgfmathparse{\x0/28.45274}%
    \xdef\@CCI@AX{\pgfmathresult}%
    \pgfmathparse{\y0/28.45274}%
    \xdef\@CCI@AY{\pgfmathresult}%
    \pgfmathparse{\x1/28.45274}%
    \xdef\@CCI@BX{\pgfmathresult}%
    \pgfmathparse{\y1/28.45274}%
    \xdef\@CCI@BY{\pgfmathresult}%
   };%
  \ifdim\@CCI@AX pt=\@CCI@BX pt\relax
   \ifdim\@CCI@AY pt<\@CCI@BY pt\relax
    \coordinate(#7)at(@X@-1);
    \coordinate(#8)at(@X@-2);
   \else
    \coordinate(#7)at(@X@-2);
    \coordinate(#8)at(@X@-1);
   \fi
  \else
   \ifdim\@CCI@AX pt<\@CCI@BX pt\relax
    \coordinate(#7)at(@X@-1);
    \coordinate(#8)at(@X@-2);
   \else
    \coordinate(#7)at(@X@-2);
    \coordinate(#8)at(@X@-1);
   \fi
  \fi
  \ifx\@MTI@noline\@MTI@CCI@drawline
   \draw[#2](#3)circle[radius=#4];
   \draw[#2](#5)circle[radius=#6];
  \fi
 \egroup
}%
%% \CTangent<#1>[#2]{#3}{#4}{#5}{#6}% 2015/11/19 修正
%% 円外の点#3から中心#4半径#5へ接線を引く時の接点を#6に格納する
%% #1:固有オプション
%%   drawline:円外の点から2つの接点を通る半直線を引く
%% #2:TizZオプション
%%   #1でdrawlineが指定された時のみ有効
%% #3:円外の点
%% #4:円の中心
%% #5:円の半径
%% #6:2つの接点の名前をカンマ(,)区切りで指定する
\NewDocumentCommand\CTangent{D<>{}O{}mmmm}{%
 \def\@MTI@noline{noline}%
 \def\@MTI@CT@drawline{}%
 \setkeys{MTIntersection}{#1}%
 \Veclen{$(#3)-(#4)$}\@Shahen
 \GetMathparse{sqrt(pow(\@Shahen,2)-pow(#5,2))}\@Vr
 \CCIntersections{#3}{\@Vr}{#4}{#5}{#6}%
 \ifx\@MTI@noline\@MTI@CT@drawline
  \@Draw@CTangent@line[#2]{#3}{#4}{#5}(#6)%
 \fi
}%
\def\@Draw@CTangent@line[#1]#2#3#4(#5,#6){%
 \Pline<half>[#1]{#2,#5}{@CT@line1}%
 \Pline<half>[#1]{#2,#6}{@CT@line2}%
 \draw[#1](#3)circle[radius=#4];
}%
%% \Funcval<#1>[#2]{#3}{#4}{#5}{#6}
%% #1:オリジナルオプション
%%  variable:#3で使われている変数(\x)
%%  precision:小数点以下第何位まで求めるかを設定する(3)
%% #2:TizKオプション
%% #3:f(x)
%% #4:変数の値
%% #5:f(#4)の値を収める制御綴
%% #6:点(#4,f(#4))を表す文字列
% \let\Funcval=\mytikzfuncval としていたものを新設 11/10/2015
\define@key{Funcval}{variable}{\let#1=\@func@variable}%
\define@key{Funcval}{precision}{\pgfkeys{/pgf/number format/.cd,fixed,precision=#1}}
\NewDocumentCommand\Funcval{D<>{}O{}mmmm}{%
 \pgfkeys{/pgf/number format/.cd,fixed,precision=3}%
 \def\@func@variable{#4}%
 \let\x=\@func@variable
 \setkeys{Funcval}{#1}%
 \GetMathparse{#3}\@TEMP@Funcval@result
 \pgfmathroundto{\@TEMP@Funcval@result}%
 \let#5=\pgfmathresult
 \coordinate(#6)at({#4},{#3});
}%
%% \ParaFuncval<#1>[#2]{#3}{#4}{#5}{#5}{#7}{#8}
%% 平面の媒介変数表示における関数x(t)，y(t)とtの値から
%% x座標，y座標およびその点を得る
%% #1:オリジナルオプション
%%  variable:#3および#4で使われている変数(\t)
%%  precision:小数点以下第何位まで求めるかを設定する(3)
%% #2:TikZオプション
%% #3:x座標を表す関数
%% #4:y座標を表す関数
%% #5:変数の値
%% #6:x(#5)の値を収める制御綴
%% #7:y(#5)の値を収める制御綴
%% #8:点(x(#5),y(#5))を表す文字列
% 11/10/2015 に新設
\define@key{ParaFuncval}{variable}{\let#1=\@para@func@variable\relax}%
\define@key{ParaFuncval}{precision}{\pgfkeys{/pgf/number format/.cd,fixed,precision=#1}}
\NewDocumentCommand\ParaFuncval{D<>{}O{}mmmmmm}{%
 \pgfkeys{/pgf/number format/.cd,fixed,precision=3}%
 \def\@para@func@variable{#5}%
 \let\t=\@para@func@variable
 \setkeys{ParaFuncval}{#1}%
 \GetMathparse{#3}\@TEMP@PFuncval@result%
 \pgfmathroundto{\@TEMP@PFuncval@result}%
 \let#6=\pgfmathresult
 \GetMathparse{#4}\@TEMP@PFuncval@result%
 \pgfmathroundto{\@TEMP@PFuncval@result}%
 \let#7=\pgfmathresult
 \coordinate(#8)at({#3},{#4});
}%
%% \CVIntersections<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline
%% #2:TikZオプション
%%   #1でdrawlineが宣言された時のみ有効
%% #3:円の中心
%% #4:円の半径
%% #5:直線の通過点
%% #6:直線の方向ベクトル
%% #7:2つの交点の名前をカンマ(,)区切りで指定
\def\CVIntersections{\@ifnextchar<{\@CVIntersections}{\@CVIntersections<>}}%
\def\@CVIntersections<#1>{\@ifnextchar[{\@@CVIntersections<#1>}{\@@CVIntersections<#1>[]}}%
\def\@@CVIntersections<#1>[#2]#3#4#5#6#7{%
 \@@@CVIntersections<#1>[#2]{#3}{#4}{#5}{#6}#7\@nil
}%
\def\@@@CVIntersections<#1>[#2]#3#4#5#6#7,#8\@nil{%
 \bgroup
  \def\@MTI@noline{noline}%
  \def\@MTI@drawline{}%
  \setkeys{MTIntersection}{#1}%
  \path[name path=@CVI@C](#3)circle[radius=#4];
  \expandafter\Vline\expandafter<\@MTI@noline>[#2]{#5}{#6}{@CVI@L}%
  \path[name intersections={of=@CVI@C and @CVI@L,name=@X@}];
  \path let \p0=(@X@-1),\p1=(@X@-2) in node
   {%
    \pgfmathparse{\x0/28.45274}%
    \xdef\@CVI@AX{\pgfmathresult}%
    \pgfmathparse{\y0/28.45274}%
    \xdef\@CVI@AY{\pgfmathresult}%
    \pgfmathparse{\x1/28.45274}%
    \xdef\@CVI@BX{\pgfmathresult}%
    \pgfmathparse{\y1/28.45274}%
    \xdef\@CVI@BY{\pgfmathresult}%
   };%
  \ifdim\@CVI@AX pt=\@CVI@BX pt\relax
   \ifdim\@CVI@AY pt<\@CVI@BY pt\relax
    \coordinate(#7)at(@X@-1);
    \coordinate(#8)at(@X@-2);
   \else
    \coordinate(#7)at(@X@-2);
    \coordinate(#8)at(@X@-1);
   \fi
  \else
   \ifdim\@CVI@AX pt<\@CVI@BX pt\relax
    \coordinate(#7)at(@X@-1);
    \coordinate(#8)at(@X@-2);
   \else
    \coordinate(#7)at(@X@-2);
    \coordinate(#8)at(@X@-1);
   \fi
  \fi
  \ifx\@MTI@noline\@MTI@drawline
   \draw[#2](#3)circle[radius=#4];
  \fi
 \egroup
}%
%% \CPIntersections<#1>[#2]{#3}{#4}{#5}{#6}%
%% #1:固有オプション
%%   drawline
%% #2:TikZオプション
%%   #1でdrawlineが宣言された時のみ有効
%% #3:円の中心
%% #4:円の半径
%% #5:直線の2つの通過点をカンマ(,)区切りで指定
%% #6:2つの交点の名前をカンマ(,)区切りで指定
\def\CPIntersections{\@ifnextchar<{\@CPIntersections}{\@CPIntersections<>}}%
\def\@CPIntersections<#1>{\@ifnextchar[{\@@CPIntersections<#1>}{\@@CPIntersections<#1>[]}}%
\def\@@CPIntersections<#1>[#2]#3#4#5#6{%
 \@@@CPIntersections<#1>[#2]{#3}{#4}#5@{#6}%
}%
\def\@@@CPIntersections<#1>[#2]#3#4#5,#6@#7{%
 \CVIntersections<#1>[#2]{#3}{#4}{#5}{$(#6)-(#5)$}{#7}%
}%
%% \CSIntersections<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline
%% #2:TikZオプション
%%   #1でdrawlineが宣言された時のみ有効
%% #3:円の中心
%% #4:円の半径
%% #5:直線の通過点
%% #6:直線の傾き
%% #7:2つの交点の名前をカンマ(,)区切りで指定
\def\CSIntersections{\@ifnextchar<{\@CSIntersections}{\@CSIntersections<>}}%
\def\@CSIntersections<#1>{\@ifnextchar[{\@@CSIntersections<#1>}{\@@CSIntersections<#1>[]}}%
\def\@@CSIntersections<#1>[#2]#3#4#5#6#7{%
 \CVIntersections<#1>[#2]{#3}{#4}{#5}{1,#6}{#7}%
}%
%% \CAIntersections<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline
%% #2:TikZオプション
%%   #1でdrawlineが宣言された時のみ有効
%% #3:円の中心
%% #4:円の半径
%% #5:直線の通過点
%% #6:直線とx軸とのなす角
%% #7:2つの交点の名前をカンマ(,)区切りで指定
\def\CAIntersections{\@ifnextchar<{\@CAIntersections}{\@CAIntersections<>}}%
\def\@CAIntersections<#1>{\@ifnextchar[{\@@CAIntersections<#1>}{\@@CAIntersections<#1>[]}}%
\def\@@CAIntersections<#1>[#2]#3#4#5#6#7{%
 \CVIntersections<#1>[#2]{#3}{#4}{#5}{{cos(#6)},{sin(#6)}}{#7}%
}%
%% \CNIntersections<#1>[#2]{#3}{#4}{#5}{#6}{#7}%
%% #1:固有オプション
%%   drawline
%% #2:TikZオプション
%%   #1でdrawlineが宣言された時のみ有効
%% #3:円の中心
%% #4:円の半径
%% #5:直線の通過点
%% #6:直線とx軸とのなす角
%% #7:2つの交点の名前をカンマ(,)区切りで指定
\def\CNIntersections{\@ifnextchar<{\@CNIntersections}{\@CNIntersections<>}}%
\def\@CNIntersections<#1>{\@ifnextchar[{\@@CNIntersections<#1>}{\@@CNIntersections<#1>[]}}%
\def\@@CNIntersections<#1>[#2]#3#4#5#6#7{%
 \CVIntersections<#1>[#2]{#3}{#4}{#5}{$(O)!1!-90:(#6)$}{#7}%
}%
%% \Shaei<#1>[#2]{#3}%
%% #1:固有オプション
%%   x,y,xy:デフォルトはxy
%%   x pos,y pos:
%%   x string,ystring:
%% #2:TikZオプション
%% #3:射影線を引く点をカンマ区切りで指定
\define@key{MTShaei}{xy}[true]{\def\@MTS@flag{0}}%
\define@key{MTShaei}{x}[true]{\def\@MTS@flag{1}}%
\define@key{MTShaei}{y}[true]{\def\@MTS@flag{2}}%
\define@key{MTShaei}{x pos}{\def\@MTS@X@pos{#1}}%
\define@key{MTShaei}{y pos}{\def\@MTS@Y@pos{#1}}%
\define@key{MTShaei}{x string}{\def\@MTS@X@string{#1}}%
\define@key{MTShaei}{y string}{\def\@MTS@Y@string{#1}}%
\define@key{MTShaei}{fillcolor}{\def\@MTS@fillcolor{#1}}%
\def\Shaei{\@ifnextchar<{\@Shaei}{\@Shaei<>}}%
\def\@Shaei<#1>{\@ifnextchar[{\@@Shaei<#1>}{\@@Shaei<#1>[]}}%
\def\@@Shaei<#1>[#2]#3{%
 \bgroup
  \@@@Shaei<#1>[#2]#3,;%
 \egroup
}%
\def\@@@Shaei<#1>[#2]#3,{%
 \def\@MTS@flag{0}%
 \let\@MTS@X@pos=\@empty
 \let\@MTS@Y@pos=\@empty
 \let\@MTS@X@string=\@empty
 \let\@MTS@Y@string=\@empty
 \def\@MTS@fillcolor{}%
 \setkeys{MTShaei}{#1}%
 \path let \p0=(#3) in node
  {%
   \pgfmathparse{\x0/28.45274}%
   \xdef\@MTS@X@{\pgfmathresult}%
   \pgfmathparse{\y0/28.45274}%
   \xdef\@MTS@Y@{\pgfmathresult}%
  };%
 \ifx\@MTS@X@string\@empty
  \path let \p0=(#3) in node
   {%
    \pgfmathparse{\x0/28.45274}%
    \pgfmathroundto{\pgfmathresult}%
    \xdef\@MTS@X@string{$\pgfmathresult$}%
   };%
 \fi
 \ifx\@MTS@Y@string\@empty
  \path let \p0=(#3) in node
   {%
    \pgfmathparse{\y0/28.45274}%
    \pgfmathroundto{\pgfmathresult}%
    \xdef\@MTS@Y@string{$\pgfmathresult$}%
   };%
 \fi
 \ifcase\@MTS@flag
  %=0
  \draw[mydash,#2](#3-|O)--(#3)--(#3|-O);
  \ifx\@MTS@X@pos\@empty
   \ifdim\@MTS@Y@ pt<0pt\relax 
    \ifx\@MTS@fillcolor\@empty
     \node at(#3|-O)[above]{\@MTS@X@string};
    \else
     \node at(#3|-O)[above,fill=\@MTS@fillcolor]{\@MTS@X@string};
    \fi
   \else
    \ifx\@MTS@fillcolor\@empty
     \node at(#3|-O)[below]{\@MTS@X@string};
    \else
     \node at(#3|-O)[below,fill=\@MTS@fillcolor]{\@MTS@X@string};
    \fi
   \fi
  \else
   \ifx\@MTS@fillcolor\@empty
    \node at(#3|-O)[\@MTS@X@pos]{\@MTS@X@string};
   \else
    \node at(#3|-O)[\@MTS@X@pos,fill=\@MTS@fillcolor]{\@MTS@X@string};
   \fi
  \fi
  \ifx\@MTS@Y@pos\@empty
   \ifdim\@MTS@X@ pt<0pt\relax
    \ifx\@MTS@fillcolor\@empty
     \node at(#3-|O)[right]{\@MTS@Y@string};
    \else
     \node at(#3-|O)[right,fill=\@MTS@fillcolor]{\@MTS@Y@string};
    \fi
   \else
    \ifx\@MTS@fillcolor\@empty
     \node at(#3-|O)[left]{\@MTS@Y@string};
    \else
     \node at(#3-|O)[left,fill=\@MTS@fillcolor]{\@MTS@Y@string};
    \fi
   \fi
  \else
   \ifx\@MTS@fillcolor\@empty
    \node at(#3-|O)[\@MTS@Y@pos]{\@MTS@Y@string};
   \else
    \node at(#3-|O)[\@MTS@Y@pos,fill=\@MTS@fillcolor]{\@MTS@Y@string};
   \fi
  \fi
 \or
  %=1
  \draw[mydash,#2](#3)--(#3|-O);
  \ifx\@MTS@X@pos\@empty
   \ifdim\@MTS@Y@ pt<0pt\relax
    \ifx\@MTS@fillcolor\@empty
     \node at(#3|-O)[above]{\@MTS@X@string};
    \else
     \node at(#3|-O)[above,fill=\@MTS@fillcolor]{\@MTS@X@string};
    \fi
   \else
    \ifx\@MTS@fillcolor\@empty
     \node at(#3|-O)[below]{\@MTS@X@string};
    \else
     \node at(#3|-O)[below,fill=\@MTS@fillcolor]{\@MTS@X@string};
    \fi
   \fi
  \else
   \ifx\@MTS@fillcolor\@empty
    \node at(#3|-O)[\@MTS@X@pos]{\@MTS@X@string};
   \else
    \node at(#3|-O)[\@MTS@X@pos,fill=\@MTS@fillcolor]{\@MTS@X@string};
   \fi
  \fi
 \or
  %=2
  \draw[mydash,#2](#3)--(#3-|O);
  \ifx\@MTS@Y@pos\@empty
   \ifdim\@MTS@X@ pt<0pt\relax
    \ifx\@MTS@fillcolor\@empty
     \node at(#3-|O)[right]{\@MTS@Y@string};
    \else
     \node at(#3-|O)[right,fill=\@MTS@fillcolor]{\@MTS@Y@string};
    \fi
   \else
    \ifx\@MTS@fillcolor\@empty
     \node at(#3-|O)[left]{\@MTS@Y@string};
    \else
     \node at(#3-|O)[left,fill=\@MTS@fillcolor]{\@MTS@Y@string};
    \fi
   \fi
  \else
   \ifx\@MTS@fillcolor\@empty
    \node at(#3-|O)[\@MTS@Y@pos]{\@MTS@Y@string};
   \else
    \node at(#3-|O)[\@MTS@Y@pos,fill=\@MTS@fillcolor]{\@MTS@Y@string};
   \fi
  \fi
 \else
 \fi
 \@ifnextchar;{\@gobble}{\@@@Shaei<#1>[#2]}%
}%
%% \Put % 2015/10/21 改訂 第2引数を使用可能に xparse を用いる
%% \Put<#1>[#2]{#3}[#4]{#5}%
%% #1:未定義
%% #2:\node のオプション引数
%% #3:点の名前
%% #4:方向子(e,w,n,s,ne,nw,se,sw)
%%    これらはそれぞれ right,left,above,below,above right,above left,below right,below left
%%    と同等である．すなわち e=.1 や e=2cm などとできる
%% #5:配置文字列(空白時は#3)
%% \Put<#1>[#2]{#3}(#4){#5}%
%% #1:未定義
%% #2:\node のオプション引数
%% #3:点の名前
%% #4:方向指定(座標指定と同じ書式 shift={(#4)} として受け継がれる)
%% #5:配置文字列(空白時は#3)
\NewDocumentCommand\Put{D<>{}O{}m}{%
 \@ifnextchar[{\@PutDir<#1>[#2]{#3}}%
	      {\@ifnextchar({\@PutCoord<#1>[#2]{#3}}{\@PutDir<#1>[#2]{#3}}}%
}%
\NewDocumentCommand\@PutDir{D<>{}O{}mO{}m}{%
 \def\@PutString{#5}%
 \ifx\@PutString\empty
  \node[#2]at(#3)[#4]{#3};%
 \else
  \node[#2]at(#3)[#4]{#5};%
 \fi
}%
\NewDocumentCommand\@PutCoord{D<>{}O{}mD(){}m}{%
 \def\@PutString{#5}%
 \ifx\@PutString\empty
  \node[#2]at(#3)[shift={(#4)}]{#3};%
 \else
  \node[#2]at(#3)[shift={(#4)}]{#5};%
 \fi
}%
%%\GetMathparse{#1}#2
% #1:計算式
% #2:計算結果を代入する制御綴
\def\GetMathparse#1#2{%
 \pgfmathparse{#1}%
 \let#2=\pgfmathresult
}%
%%\GetCoordinate{#1}#2#3
% #1:座標
% #2:#1のx座標を与える制御綴
% #3:#1のy座標を与える制御綴
\def\GetCoordinate#1#2#3{%
 \coordinate(@GCC@)at(#1);%
 \path let \p0=(@GCC@) in node
  {%
   \pgfmathparse{\x0/28.45274}%
   \xdef#2{\pgfmathresult}%
   \pgfmathparse{\y0/28.45274}%
   \xdef#3{\pgfmathresult}%
  };%
}%
%% Attention環境
% 枠の外のマージンを指定
% skipabove
% skipbelow
% leftmargin
% rightmargin
% 枠内のマージンを指定
% innertopmargin
% innerbottommargin
% innerleftmargin
% innrerightmargin
%%
% default unit
% skipabove=0pt,skipbelow=0pt,leftmargin=0pt,rightmargin=0pt
% innertopmargin=10pt,innerbottommargin=10pt,innerleftmargin=5pt,innerrightmargin=5pt
%%
% framemethod=default
% line width
% linewidth=.4pt,innerlinewidth=0pt,middleliewidth=0pt
% outerlinewidth=0pt,roundcorner=0pt
% color
% linecolor=black,innrelinecolor=black,middlelinecolor=black
% outerlinecolor=black,backgroundcolor=white,fontcolor=black
%\def\Attention{\@ifnextchar<{\@Attention}{\@Attention<>}}%
%\def\@Attention<#1>{\@ifnextchar({\@@Attention<#1>}{\@@Attention<#1>()}}%
%\def\@@Attention<#1>(#2){\@ifnextchar[{\@@@Attention<#1>(#2)}{\@@@Attention<#1>(#2)[]}}%
%\def\@@@Attention<#1>(#2)[#3]{%
% \begin{Framebox}%
%   <rounded corners=5pt,inner sep=5pt,fill=red!30,#1>%
%   (#2)%
%   [linecolor=red!30,linewidth=2pt,backgroundcolor=red!5,#3]%
%   {Attention}%
%}%
%\def\endAttention{\end{Framebox}}%
\mdfdefinestyle{AttentionStyle}{%
	roundcorner=10pt,linewidth=2pt,linecolor=red!30,%
	backgroundcolor=red!5,innertopmargin=4mm}%
\tikzset{AttentionTitle/.style={inner sep=5pt,rounded corners=5pt,fill=red!30}}%
\define@key{Attention}{title distance}{\def\@Attention@title@distance{#1}}%
\def\SetAttentionTitleDistance#1{\def\@Attention@title@distance@default{#1}}%
\SetAttentionTitleDistance{5mm}%
\NewDocumentEnvironment{Attention}{D<>{}D(){}O{}}{% 12/04/2015 singleextraを使い簡略化
 \let\@Attention@title@distance=\@Attention@title@distance@default\relax
 \setkeys{Attention}{#1}%
 \mdframed[%
	style=AttentionStyle,%
	firstextra={\node[AttentionTitle]at(P-|O)[e=\@Attention@title@distance]{Attention};},%
	singleextra={\node[AttentionTitle]at(P-|O)[e=\@Attention@title@distance]{Attention};},%
	#3]%
}{%
 \endmdframed
}%
%% Framebox 環境 (枠で囲む，ページで分割可能)
%% \begin{Framebox}<#1>(#2)[#3]{#4}
%%  ほげほげふがふが
%% \end{Framebox}
%% #4:文字列が含まれるときこれをタイトルとする
%%    #4は\tikz\node{#4};となる．
%% #1:#4を含む\nodeのオプション
%% #2:#4を含む\tikzのオプション
%% #3:mdframed 環境のオプション
%% #4:タイトル
\newbox\FrameboxTitleBox
\def\Framebox{\@ifnextchar<{\@tikzFramebox}{\@tikzFramebox<>}}%
\def\@tikzFramebox<#1>{\@ifnextchar({\@@tikzFramebox<#1>}{\@@tikzFramebox<#1>()}}%
\def\@@tikzFramebox<#1>(#2){\@ifnextchar[{\@@@tikzFramebox<#1>(#2)}{\@@@tikzFramebox<#1>(#2)[]}}%
\def\@@@tikzFramebox<#1>(#2)[#3]#4{%
 \ifstrempty{#4}{%
  \begin{mdframed}%
   [%
    topline=true,roundcorner=10pt,linewidth=1pt,#3,%
   ]%
 }{%
  \setbox\FrameboxTitleBox=\hbox{\tikz[baseline=(current bounding box.east),outer sep=0pt,#2]%
   \node[anchor=east,rectangle,fill=white,inner xsep=2mm,#1]{#4};}%
  \@tempdima=\dimexpr-.5\ht\FrameboxTitleBox-.5\dp\FrameboxTitleBox\relax
  \begin{mdframed}%
   [%
    topline=true,roundcorner=10pt,innertopmargin=0pt,linewidth=1pt,%
    frametitleaboveskip=\@tempdima,
    frametitle={%
     \box\FrameboxTitleBox
    },#3%
   ]%
 }%
}%
\def\endFramebox{\end{mdframed}}%
%% TitleBox環境
%% \begin{TitleBox}<#1>(#2)[#3]{#4}{#5}
%% \end{TitleBox}
%% #1:#4のnodeに対するTikZオプション
%% #2:#5のnodeに対するTikZオプション
%% #3:枠に関するTikZオプション
%% #4:左上のタイトル
%% #5:右下のタイトル(省略可)
\NewDocumentEnvironment{TitleBox}{D<>{}D(){}O{}mm}{%
 \def\@temp{#5}%
 \ifx\@temp\@empty
  \mdframed[%
   innertopmargin=3mm,%
   singleextra={\node[inner sep=2pt,fill=white,#1]at(P-|O)[e=2.5mm]{#4};},%
   firstextra={\node[inner sep=2pt,fill=white,#1]at(P-|O)[e=2.5mm]{#4};},%
   #3%
  ]%
 \else
  \mdframed[%
   innertopmargin=3mm,innerbottommargin=3mm,%
   singleextra={%
    \node[inner sep=2pt,fill=white,#1]at(P-|O)[e=2.5mm]{#4};
    \node[inner sep=2pt,fill=white,#2]at(P|-O)[w=2.5mm]{#5};
   },%
   firstextra={%
    \node[inner sep=2pt,fill=white,#1]at(P-|O)[e=2.5mm]{#4};
    \node[inner sep=2pt,fill=white,#2]at(P|-O)[w=2.5mm]{#5};
   },%
   #3%
  ]%
 \fi
}{%
 \endmdframed
}%
%% 相似記号
\def\soujitype{s}%
\def\souji{%
 \mathrel{%
  \tikz[x=.4em,y=.4em,scale=1]{%
   \def\X{.8}%
   \def\Vr{.6}%
   \coordinate(O1)at(-\X,0);
   \coordinate(O2)at(\X,0);
   \path[name path=R1](O1)circle[radius=\Vr];%
   \path[name path=R2](O2)circle[radius=\Vr];%
   \GetMathparse{sqrt(pow(\X,2)-pow(\Vr,2))}\R
   \path[name path=R3](0,0)circle[radius=\R];%
   \path[name intersections={of=R1 and R3,by={P1,P2}}];%
   \path[name intersections={of=R2 and R3,by={Q1,Q2}}];%
   \GetAngle{{$(O1)+(1,0)$},O1,P1}\PS
   \GetAngle{{$(O2)+(1,0)$},O2,Q1}\QS
   \if\soujitype s\relax
    \draw[line cap=round,thick](-\X+.2,\Vr)--(-\X,\Vr)arc[start angle=90,end angle=360-\PS,radius=\Vr]%
                             --(Q1)arc[start angle=\QS,end angle=-90,radius=\Vr]--+(-.2,0);%
   \else
    \draw[line cap=round,thick](P1)arc[start angle=\PS,end angle=360-\PS,radius=\Vr]%
                             --(Q1)arc[start angle=\QS,end angle=-\QS,radius=\Vr];%
  \fi
  }%
 }%
}%
\let\Souji=\souji
%% \numbertoalph#1
%% 数字#1に対応する小文字アルファベッドを表示する
\newcommand{\numbertoalph}[1]{%
 \bgroup
  \c@tempcnta=#1\relax
  \alph{tempcnta}%
 \egroup
}%
%% \numbertoAlph#1
%% 数字#1に対応する大文字アルファベッドを表示する
\newcommand{\numbertoAlph}[1]{%
 \bgroup
  \c@tempcnta=#1\relax
  \Alph{tempcnta}%
 \egroup
}%
%% \numbertoroman#1
%% 数字#1に対応する小文字ローマ数字を表示する
\newcommand{\numbertoroman}[1]{%
 \bgroup
  \c@tempcnta=#1\relax
  \roman{tempcnta}%
 \egroup
}%
%% \numbertoRoman#1
%% 数字#1に対応する大文字ローマ数字を表示する
\newcommand{\numbertoRoman}[1]{%
 \bgroup
  \c@tempcnta=#1\relax
  \Roman{tempcnta}%
 \egroup
}%
%%\ruby[#1]#2#3
%%okumacro.styから拝借
\providecommand{\rubyfamily}{}
\def\kanjistrut{\vrule \@height0.88zw \@depth0.12zw \@width\z@}
\let\ruby=\relax
\newcommand{\ruby}[3][0zw]{%
  \leavevmode
  \dimen1=#1\relax
  \dimen3=\f@size\p@
  \setbox1=\hbox{#2}%
  \setbox3=\hbox{\rubyfamily\fontsize{0.5\dimen3}{0pt}\selectfont #3}%
  \ifdim\dimen1=\z@
    \ifdim\wd1>\wd3 \dimen1=\wd1 \else \dimen1=\wd3 \fi
  \else
    \ifdim\dimen1<\wd1
      \dimen1=\wd1
    \fi
  \fi
  \hbox{%
    \kanjiskip=0pt plus 2fil
    \xkanjiskip=0pt plus 2fil
    \vbox{%
      \hbox to \dimen1{\rubyfamily
        \fontsize{0.5\dimen3}{0pt}\selectfont \kanjistrut
        \ifdim\dimen1<\wd3
          \hss\unhbox3\hss
        \else
          \hfil\unhbox3\hfil
        \fi
      }%
      \nointerlineskip
      \hbox to \dimen1{\kanjistrut\hfil\unhbox1\hfil}}}\hskip\kanjiskip\relax}
%% arraystretchを設定する
\def\SetArrayStretch#1{%
 \edef\SAS@defaultarraystretch{\arraystretch}%
 \def\arraystretch{#1}%
}%
\def\RestoreArrayStretch{%
 \edef\arraystretch{\SAS@defaultarraystretch}%
}%
%\GetMin{カンマ区切りの数字の列}{最小値を格納する命令}{最小値を除いた数字の列を格納する命令}
\def\GetMin#1#2#3{%
 {%
  \c@tempcnta=\z@\relax
  \expandafter\@for\expandafter\GM@x\expandafter:\expandafter=#1\do{%
   \advance\c@tempcnta by\@ne\relax
   \expandafter\edef\csname GM@array/\the\c@tempcnta\endcsname{\GM@x}%
  }%
  \expandafter\let\expandafter\GM@MIN\expandafter=\csname GM@array/1\endcsname
  \c@tempcntb=\@ne\relax
  \c@tempcntc=\c@tempcntb\relax
  \@whilenum\c@tempcntb<\c@tempcnta\do{%
   \advance\c@tempcntb by\@ne\relax
   \expandafter\ifdim\csname GM@array/\the\c@tempcntb\endcsname pt<\GM@MIN pt\relax
    \expandafter\let\expandafter\GM@MIN\expandafter=\csname GM@array/\the\c@tempcntb\endcsname
    \c@tempcntc=\c@tempcntb\relax
   \fi
  }%
  \xdef#2{\GM@MIN}%
%  \c@tempcntaは数値の総数
%  \c@tempcntcは\GM@MINの番号
  \def\@GM@ARRAY{}%
  \c@tempcntb=\z@\relax
  \expandafter\@for\expandafter\GM@x\expandafter:\expandafter=#1\do{%
   \advance\c@tempcntb by\@ne\relax
   \ifnum\c@tempcntb=\c@tempcntc\relax
   \else
    \edef\@GM@ARRAY{\@GM@ARRAY,\GM@x}%
   \fi
  }%
  \def\@GM@TEMP,##1\@nil{%
   ##1%
  }%
  \expandafter\xdef\expandafter#3\expandafter{\expandafter\@GM@TEMP\@GM@ARRAY\@nil}%
 }%
}%
%\Sort{配列の名称}{配列}{配列の個数を格納する命令}{並べ直した配列を格納する命令}%
\def\Sort#1#2#3#4{%
 {%
  \c@tempcnta=\z@\relax
  \expandafter\@for\expandafter\SORT@x\expandafter:\expandafter=#2\do{%
   \advance\c@tempcnta by\@ne\relax
  }%
  \edef\@SORT@ARRAY{#2}%
  \def\@SORT@BODY{}%
  \c@tempcntb=\@ne\relax
  \@whilenum\c@tempcntb<\c@tempcnta\do{%
   \GetMin{\@SORT@ARRAY}{\@HOGE}{\@SORT@ARRAY}%
   \edef\@SORT@BODY{\@SORT@BODY,\@HOGE}%
   \expandafter\xdef\csname#1@array/\the\c@tempcntb\endcsname{\@HOGE}%
   \advance\c@tempcntb by\@ne\relax
  }%
  \expandafter\xdef\csname#1@array/\the\c@tempcnta\endcsname{\@SORT@ARRAY}%
  \edef\@SORT@BODY{\@SORT@BODY,\@SORT@ARRAY}%
  \def\@SORT@HOGE,##1\@nil{##1}%
  \expandafter\xdef\expandafter#4\expandafter{\expandafter\@SORT@HOGE\@SORT@BODY\@nil}%
  \xdef#3{\the\c@tempcnta}%
 }%
}%
\def\GetSortNum#1#2#3{%
 \expandafter\edef\expandafter#3\expandafter{\csname#1@array/#2\endcsname}%
}%
% 0<\@Hako@Width<1
\def\HakoHigeWidth#1{\edef\@Hako@Width{#1}}%
% 0<\@Hako@Hige@Width<1
\def\HakoHigeHigeWidth#1{\edef\@Hako@Hige@Width{#1}}%
\HakoHigeWidth{.5}%
\HakoHigeHigeWidth{.4}%
% \HakoHige<#1>[#2](#3){#4}
% #1:original option
%  width:箱の横幅
%  higewidth:ひげの横幅
%  data:最小値,第1四分位数,第2四分位数,第3四分位数,最大値を順に与えてデータを使わない
%  showmed:平均値を表示する
%  medmark:平均値のマークの設定($+$)
% #2:箱のオプション指定
% #3:ひげのオプション指定
% #4:箱ひげを作るためのデータをカンマ区切りで指定
\define@key{HakoHige}{width}{\def\@Hako@Width{#1}}%
\define@key{HakoHige}{higewidth}{\def\@Hako@Hige@Width{#1}}%
\define@key{HakoHige}{data}{\def\@Hako@Data{#1}}%
\define@key{HakoHige}{showmed}[1]{\def\@Hako@Show@Med{#1}}%
\define@key{HakoHige}{medmark}{\def\@Hako@Med@Mark{#1}}%
\def\HakoHige{\@ifnextchar<{\@HakoHige}{\@HakoHige<>}}%
\def\@HakoHige<#1>{\@ifnextchar[{\@@HakoHige<#1>}{\@@HakoHige<#1>[]}}%
\def\@@HakoHige<#1>[#2]{\@ifnextchar({\@@@HakoHige<#1>[#2]}{\@@@HakoHige<#1>[#2]()}}%
\def\@@@HakoHige<#1>[#2](#3)#4{%
 \let\@Hako@Data=\@empty
 \def\@Hako@Show@Med{0}%
 \def\@Hako@Med@Mark{$+$}%
 \setkeys{HakoHige}{#1}%
 \def\@Hako@Total{0}%
 \expandafter\@for\expandafter\@HH@x\expandafter:\expandafter=#4\do{%
  \GetMathparse{(\@Hako@Total)+(\@HH@x)}\@Hako@Total
 }%
 \@ifundefined{@HakoHige@Number}%
  {%
   \def\@HakoHige@Number{1}%
  }{%
   \GetMathparse{int(\@HakoHige@Number+1)}\@HakoHige@Number
  }%
 \def\@Hako@Data@Split##1,##2,##3,##4,##5\@nil{%
  \def\@HakoHige@Min@Num{##1}%
  \def\@HakoHige@FQua@Num{##2}%
  \def\@HakoHige@Mid@Num{##3}%
  \def\@HakoHige@TQua@Num{##4}%
  \def\@HakoHige@Max@Num{##5}%
 }%
 \ifx\@Hako@Data\@empty
  \Sort{HakoHige}{#4}\@HakoHige@Max\@HakoHige@Array
  \GetMathparse{(1+\@HakoHige@Max)/2}\@HakoHige@Mid
  \GetMathparse{(1+\@HakoHige@Mid)/2}\@HakoHige@FQua%1/4
  \GetMathparse{(\@HakoHige@Mid+\@HakoHige@Max)/2}\@HakoHige@TQua%3/4
  \GetMathparse{int(\@HakoHige@Mid)}\Int@HakoHige@Mid
  \GetMathparse{int(\@HakoHige@FQua)}\Int@HakoHige@FQua
  \GetMathparse{int(\@HakoHige@TQua)}\Int@HakoHige@TQua
  \ifdim\@HakoHige@Mid pt=\Int@HakoHige@Mid pt\relax
   \GetSortNum{HakoHige}{\Int@HakoHige@Mid}\@HakoHige@Mid@Num
  \else
   \GetSortNum{HakoHige}{\Int@HakoHige@Mid}\@Hako@TempI
   \GetMathparse{int(\Int@HakoHige@Mid+1)}\Int@HakoHige@Mid
   \GetSortNum{HakoHige}{\Int@HakoHige@Mid}\@Hako@TempII
   \GetMathparse{((\@Hako@TempI)+(\@Hako@TempII))/2}\@HakoHige@Mid@Num
  \fi
  \ifdim\@HakoHige@FQua pt=\Int@HakoHige@FQua pt\relax
   \GetSortNum{HakoHige}{\Int@HakoHige@FQua}\@HakoHige@FQua@Num
  \else
   \GetSortNum{HakoHige}{\Int@HakoHige@FQua}\@Hako@TempI
   \GetMathparse{int(\Int@HakoHige@FQua+1)}\Int@HakoHige@FQua
   \GetSortNum{HakoHige}{\Int@HakoHige@FQua}\@Hako@TempII
   \GetMathparse{((\@Hako@TempI)+(\@Hako@TempII))/2}\@HakoHige@FQua@Num
  \fi
  \ifdim\@HakoHige@TQua pt=\Int@HakoHige@TQua pt\relax
   \GetSortNum{HakoHige}{\Int@HakoHige@TQua}\@HakoHige@TQua@Num
  \else
   \GetSortNum{HakoHige}{\Int@HakoHige@TQua}\@Hako@TempI
   \GetMathparse{int(\Int@HakoHige@TQua+1)}\Int@HakoHige@TQua
   \GetSortNum{HakoHige}{\Int@HakoHige@TQua}\@Hako@TempII
   \GetMathparse{((\@Hako@TempI)+(\@Hako@TempII))/2}\@HakoHige@TQua@Num
  \fi
  \GetSortNum{HakoHige}{1}\@HakoHige@Min@Num
  \GetSortNum{HakoHige}{\@HakoHige@Max}\@HakoHige@Max@Num
 \else
  \expandafter\@Hako@Data@Split\@Hako@Data\@nil
 \fi
 \draw[thick,#2](\@HakoHige@Number-1/2*\@Hako@Width,\@HakoHige@FQua@Num)%
       rectangle(\@HakoHige@Number+1/2*\@Hako@Width,\@HakoHige@TQua@Num)
                (\@HakoHige@Number-1/2*\@Hako@Width,\@HakoHige@Mid@Num)%
              --(\@HakoHige@Number+1/2*\@Hako@Width,\@HakoHige@Mid@Num);%
 \draw[thick,#3](\@HakoHige@Number-1/2*\@Hako@Hige@Width,\@HakoHige@Min@Num)%
              --(\@HakoHige@Number+1/2*\@Hako@Hige@Width,\@HakoHige@Min@Num)%
                (\@HakoHige@Number-1/2*\@Hako@Hige@Width,\@HakoHige@Max@Num)%
              --(\@HakoHige@Number+1/2*\@Hako@Hige@Width,\@HakoHige@Max@Num)%
                (\@HakoHige@Number,\@HakoHige@Min@Num)%
              --(\@HakoHige@Number,\@HakoHige@FQua@Num)%
                (\@HakoHige@Number,\@HakoHige@TQua@Num)%
              --(\@HakoHige@Number,\@HakoHige@Max@Num);
 \ifnum\@Hako@Show@Med=\@ne\relax
  \node at(\@HakoHige@Number,\@Hako@Total/\@HakoHige@Max){\@Hako@Med@Mark};
 \fi
}%
%% \SetAngles<#1>[#2]{#3}{#4}%
%% #1:オリジナルオプション(今のところなし)
%% #2:picのオプション
%% #3:角におくテキスト
%% #4:「始点,中心,終点」のセットを ; 区切りで記述
\def\SetAngles{\@ifnextchar<{\@SetAngles}{\@SetAngles<>}}%
\def\@SetAngles<#1>{%
 \@ifnextchar[{\@@SetAngles}{\@@SetAngles[]}%
}%
\def\@@SetAngles[#1]#2#3{%
 \@@@SetAngles[#1]{#2}#3;/%
}%
\def\@@@SetAngles[#1]#2#3,#4,#5;{%
 \path(#3)--(#4)--(#5)pic[draw,"#2",#1]{angle=#3--#4--#5};
 \@ifnextchar/{\@gobble}{\@@@SetAngles[#1]{#2}}%
}%
%% \Touhenkigou<#1>[#2]{#3}%
\define@key{Touhenkigou}{pos}{\def\@TK@Pos{#1}}%
\define@key{Touhenkigou}{x size}{\def\@TK@XSize{#1}}%
\define@key{Touhenkigou}{y size}{\def\@TK@YSize{#1}}%
\define@key{Touhenkigou}{space}{\def\@TK@Space{#1}}%
\define@key{Touhenkigou}{num}{\def\@TK@Num{#1}}%
\define@key{Touhenkigou}{symbol}{\def\@TK@Symbol{#1}}%
\def\Touhenkigou{\@ifnextchar<{\@Touhenkigou}{\@Touhenkigou<>}}%
\def\@Touhenkigou<#1>{\@ifnextchar[{\@@Touhenkigou<#1>}{\@@Touhenkigou<#1>[]}}%
\def\@@Touhenkigou<#1>[#2]#3{%
 \bgroup
  \def\@TK@Pos{.5}%
  \def\@TK@XSize{1}%
  \def\@TK@YSize{1}%
  \def\@TK@Space{0pt}%
  \def\@TK@Num{2}%
  \def\@TK@Symbol{|}%
  \setkeys{Touhenkigou}{#1}%
  \edef\@TK@Strings{\@TK@Symbol}%
  \foreach\N in {1,...,\@TK@Num}{%
   \ifnum\N<\@TK@Num\relax
    \xdef\@TK@Strings{\@TK@Strings\kern\@TK@Space\@TK@Symbol}%
   \fi
  }%
  \expandafter\@@Touhenkigou@#3;/%
 \egroup
}%
\def\@@Touhenkigou@#1,#2;{%
 \coordinate(@TK@V)at($(#2)-(#1)$);
 \GetCoordinate{@TK@V}\@TK@VX\@TK@VY
 \GetMathparse{atan2(\@TK@VY,\@TK@VX)}\@TK@Angle
 \node[rotate=\@TK@Angle]at($(#1)!\@TK@Pos!(#2)$){\tiny\scalebox{\@TK@XSize}[\@TK@YSize]{$\@TK@Strings$}};
 \@ifnextchar/{\@gobble}{\@@Touhenkigou@}%
}%
%% \SetParallels<#1>[#2]{#3}
%% 平行記号を配置するコマンド
%% #1:オリジナルオプション
%%  num:平行記号の数(2)
%%  angle:辺と平行記号のなす角(25)
%%  space:平行記号間の距離(1.5mm)
%%  scale:平行記号のサイズ指定(1)
%%  length:平行記号の線分の長さ(2mm)
%%  pos:平行記号を置く位置(.5)
%% #2:TikZのオプション
%% #3:平行記号を置く辺を指定
%%  A,B;C,D;E,F のように複数指定する
\define@key{SetParallels}{num}{\def\@PARA@Num{#1}}%
\define@key{SetParallels}{angle}{\def\@PARA@Angle{#1}}%
\define@key{SetParallels}{space}{\def\@PARA@Space{#1}}%
\define@key{SetParallels}{scale}{\def\@PARA@Scale{#1}}%
\define@key{SetParallels}{length}{\def\@PARA@Length{#1}}%
\define@key{SetParallels}{pos}{\def\@PARA@Pos{#1}}%
\def\SetParallels{\@ifnextchar<{\@SetParallels}{\@SetParallels<>}}%
\def\@SetParallels<#1>{\@ifnextchar[{\@@SetParallels<#1>}{\@@SetParallels<#1>[]}}%
\def\@@SetParallels<#1>[#2]#3{%
 \def\@PARA@Num{2}%
 \def\@PARA@Angle{25}%
 \def\@PARA@Space{1.5mm}%
 \def\@PARA@Scale{1}%
 \def\@PARA@Length{2mm}%
 \def\@PARA@Pos{.5}%
 \setkeys{SetParallels}{#1}%
 \tikzset{%
  macroparallels/.pic={%
   \foreach\N in {1,...,\@PARA@Num}{%
    \draw[scale=\@PARA@Scale,#2]({\@PARA@Length*cos(\@PARA@Angle)/2+(\N-1-(\@PARA@Num-1)/2)*\@PARA@Space},0)--+({180-(\@PARA@Angle)}:\@PARA@Length);
    \draw[scale=\@PARA@Scale,#2]({\@PARA@Length*cos(\@PARA@Angle)/2+(\N-1-(\@PARA@Num-1)/2)*\@PARA@Space},0)--+({-180+(\@PARA@Angle)}:\@PARA@Length);
   }%
  }%
 }%
 \@@@SetParallels#3;/%
}%
\def\@@@SetParallels#1,#2;{%
 \path(#1)to pic[pos=\@PARA@Pos,sloped]{macroparallels}(#2);
 \@ifnextchar/{\@gobble}{\@@@SetParallels}%
}%
%% \SetEquilaterals<#1>[#2]{#3}
%% 等辺記号を配置するコマンド
%% #1:オリジナルオプション
%%  num:等辺記号の数(2)
%%  space:等辺記号間の距離(.75mm)
%%  scale:等辺記号のサイズ指定(1)
%%  length:等辺記号の線分の長さ(2mm)
%%  pos:等辺記号を置く位置(.5)
%% #2:TikZのオプション
%% #3:平行記号を置く辺を指定
%%  A,B;C,D;E,F のように複数指定する
\define@key{SetEquilaterals}{num}{\def\@EQUI@Num{#1}}%
\define@key{SetEquilaterals}{space}{\def\@EQUI@Space{#1}}%
\define@key{SetEquilaterals}{scale}{\def\@EQUI@Scale{#1}}%
\define@key{SetEquilaterals}{length}{\def\@EQUI@Length{#1}}%
\define@key{SetEquilaterals}{pos}{\def\@EQUI@Pos{#1}}%
\def\SetEquilaterals{\@ifnextchar<{\@SetEquilaterals}{\@SetEquilaterals<>}}%
\def\@SetEquilaterals<#1>{\@ifnextchar[{\@@SetEquilaterals<#1>}{\@@SetEquilaterals<#1>[]}}%
\def\@@SetEquilaterals<#1>[#2]#3{%
 \def\@EQUI@Num{2}%
 \def\@EQUI@Space{.75mm}%
 \def\@EQUI@Scale{1}%
 \def\@EQUI@Length{2mm}%
 \def\@EQUI@Pos{.5}%
 \setkeys{SetEquilaterals}{#1}%
 \tikzset{%
  macroequilaterals/.pic={%
   \foreach\N in {1,...,\@EQUI@Num}{%
    \draw[scale=\@EQUI@Scale,#2]({(\N-1-(\@EQUI@Num-1)/2)*\@EQUI@Space},\@EQUI@Length/2)--+(0,-\@EQUI@Length);
   }%
  }%
 }%
 \@@@SetEquilaterals#3;/%
}%
\def\@@@SetEquilaterals#1,#2;{%
 \path(#1)to pic[pos=\@EQUI@Pos,sloped]{macroequilaterals}(#2);
 \@ifnextchar/{\@gobble}{\@@@SetEquilaterals}%
}%
%%% \DrawPolygons<#1>[#2]{#3}%
%% 複数の多角形を描くコマンド
%% #1:shift
\define@key{DrawPolygons}{shift}{\def\@DP@Shift{#1}}%
\def\DrawPolygons{\@ifnextchar<{\@DrawPolygons}{\@DrawPolygons<>}}%
\def\@DrawPolygons<#1>{\@ifnextchar[{\@@DrawPolygons<#1>}{\@@DrawPolygons<#1>[]}}%
\def\@@DrawPolygons<#1>[#2]#3{%
 \def\@DP@Shift{0,0}%
 \setkeys{DrawPolygons}{#1}%
 \@@@DrawPolygons[#2]{#3}%
}%
\def\@@@DrawPolygons[#1]#2{%
 \def\@DP@Body{}%
 \@@@@DrawPolygons#2;/%
 \expandafter\draw\expandafter[#1\expandafter]\@DP@Body;%
}%
\def\@@@@DrawPolygons#1;{%
 \@@@@@DrawPolygons#1,;%
 \@ifnextchar/{;\@gobble}{\@@@@DrawPolygons}%
}%
\def\@@@@@DrawPolygons#1,{%
 \edef\@DP@Body{\@DP@Body(#1)--}%
 \@ifnextchar;{\edef\@DP@Body{\@DP@Body cycle}\@gobble}{\@@@@@DrawPolygons}%
}%
%%% \DrawSegments<#1>[#2]{#3}%
%% 複数の線分を引くコマンド
%% #1:shift
%%    overratio はみ出させる割合
%%              (単位なしで線分の長さのoverratio倍，単位ありでoverratio(unit)はみ出す)
%%              負の値を指定できる
%% #3:A,B;C,Dなどと指定する
%%   <#1>[#2]A,Bで各々の線分に対し個別にオプションを指定できる
%%   #1:overratio
%%     :leftratio
%%     :rightratio
\define@key{DrawSegments}{shift}{\def\@DS@Shift{#1}}%
\define@key{DrawSegments}{overratio}{\def\@DS@OverRatio{#1}}%
\def\DrawSegments{\@ifnextchar<{\@DrawSegments}{\@DrawSegments<>}}%
\def\@DrawSegments<#1>{\@ifnextchar[{\@@DrawSegments<#1>}{\@@DrawSegments<#1>[]}}%
\def\@@DrawSegments<#1>[#2]#3{%
 \def\@DS@Shift{0,0}%
 \def\@DS@OverRatio{0}%
 \setkeys{DrawSegments}{#1}%
 \@DrawSegmentsSub[#2]#3;/%
}%
\define@key{DrawSegmentsSub}{overratio}{\def\@DS@Sub@overratio{#1}}%
\define@key{DrawSegmentsSub}{leftratio}{\def\@DS@Sub@leftratio{#1}}%
\define@key{DrawSegmentsSub}{rightratio}{\def\@DS@Sub@rightratio{#1}}%
\def\@DrawSegmentsSub[#1]{%
 \@ifnextchar<{\@@DrawSegmentsSub[#1]}{\@@DrawSegmentsSub[#1]<>}%
}%
\def\@@DrawSegmentsSub[#1]<#2>{%
 \@ifnextchar[{\@@@DrawSegmentsSub[#1]<#2>}{\@@@DrawSegmentsSub[#1]<#2>[]}%
}%
\def\@@@DrawSegmentsSub[#1]<#2>[#3]#4,#5;{%
 \coordinate(@DS@F@Point)at($(\@DS@Shift)+(#4)$);
 \coordinate(@DS@E@Point)at($(\@DS@Shift)+(#5)$);
 \edef\@DS@Sub@overratio{\@DS@OverRatio}%
 \setkeys{DrawSegmentsSub}{#2}%
 \edef\@DS@Sub@leftratio{\@DS@Sub@overratio}%
 \edef\@DS@Sub@rightratio{\@DS@Sub@overratio}%
 \setkeys{DrawSegmentsSub}{#2}%
 \draw[#1,#3]($(@DS@F@Point)!-(\@DS@Sub@leftratio)!(@DS@E@Point)$)--($(@DS@E@Point)!-(\@DS@Sub@rightratio)!(@DS@F@Point)$);%
 \@ifnextchar/{\@gobble}{\@DrawSegmentsSub[#1]}%
}%
%% \Vline<#1>[#2]{#3}{#4}{#5}%
%% V(ector)line
%% ex:\Vline{A}{1,2}{line1}%
%% #1:固有オプション
%%   leftP:左端点の名前を指定(leftP)
%%   rightP:右端点の名前を指定(rightP)
%%   noline:直線を描画しない
%%   half:点#3を始点とする半直線にする
%% #2:TikZオプション
%% #3:通過点
%% #4:方向ベクトル
%% #5:パスの名前
\newif\ifDVleft
\newif\ifDVright
\define@key{DrawVline}{half}[half]{\DVrighttrue\DVleftfalse}%
\define@key{DrawVline}{left}[left]{\DVlefttrue\DVrightfalse}%
\define@key{DrawVline}{right}[right]{\DVrighttrue\DVleftfalse}%
\define@key{DrawVline}{noline}[noline]{\DVrightfalse\DVleftfalse}%
\define@key{DrawVline}{leftP}{\def\@DV@leftP{#1}}%
\define@key{DrawVline}{rightP}{\def\@DV@rightP{#1}}%
\def\DrawVline{\@ifstar{\def\@DVline@flag{0}\@DrawVline}{\def\@DVline@flag{1}\@DrawVline}}%
\def\@DrawVline{\@ifnextchar<{\@@DrawVline}{\@@DrawVline<>}}%
\def\@@DrawVline<#1>{\@ifnextchar[{\@@@DrawVline<#1>}{\@@@DrawVline<#1>[]}}%
\def\@@@DrawVline<#1>[#2]#3#4#5{%
 \DVlefttrue
 \DVrighttrue
 \def\@DV@leftP{leftP}%
 \def\@DV@rightP{rightP}%
 \setkeys{DrawVline}{#1}%
 \GetCoordinate{#3}\@DV@x\@DV@y
 \pgfkeys{/pgf/number format/.cd,fixed,precision=3}%
 \GetCoordinate{#4}\@DV@Sx\@DV@Sy
 \GetMathparse{veclen(\@DV@Sx,\@DV@Sy)}\@DV@Slen
 \GetMathparse{\@DV@Sx/\@DV@Slen}\@DV@Sx
 \GetMathparse{\@DV@Sy/\@DV@Slen}\@DV@Sy
 \GetMathparse{(\trueymax-(\trueymin))/(\truexmax-(\truexmin))}\@Frame@S
 \ifdim\@DV@Sx pt=\z@ pt\relax
  \coordinate(trueleftP)at(\@DV@x,\trueymin);
  \coordinate(truerightP)at(\@DV@x,\trueymax);
  \coordinate(\@DV@leftP)at(\@DV@x,\ymin);
  \coordinate(\@DV@rightP)at(\@DV@x,\ymax);
 \else
  \ifdim\@DV@Sy pt=\z@ pt\relax
   \coordinate(trueleftP)at(\truexmin,\@DV@y);
   \coordinate(truerightP)at(\truexmax,\@DV@y);
   \coordinate(\@DV@leftP)at(\xmin,\@DV@y);
   \coordinate(\@DV@rightP)at(\xmax,\@DV@y);
  \else
   \GetMathparse{abs(\@DV@Sy/\@DV@Sx)}\@DV@absS
   \ifdim\@DV@absS pt<\@Frame@S pt\relax
% y座標を決める
    \coordinate(trueleftP)at(\truexmin,{\@DV@y-(\@DV@x-(\truexmin))*(\@DV@Sy)/(\@DV@Sx)});
    \coordinate(truerightP)at(\truexmax,{\@DV@y+(\truexmax-(\@DV@x))*(\@DV@Sy)/(\@DV@Sx)});
   \else
% x座標を決める
    \coordinate(trueleftP)at({\@DV@x-(\@DV@y-(\trueymin))*(\@DV@Sx)/(\@DV@Sy)},\trueymin);
    \coordinate(truerightP)at({\@DV@x+(\trueymax-(\@DV@y))*(\@DV@Sx)/(\@DV@Sy)},\trueymax);
   \fi
  \fi
 \fi
 \path[#2,name path global=#5](trueleftP)--(truerightP);
 \path[name path=@DV@Frame](LB)rectangle(RT);
 \path[name intersections={of=@DV@Frame and #5,by={@DV@P,@DV@Q}}];
 \GetCoordinate{@DV@P}\@DV@Px\@DV@Py
 \GetCoordinate{@DV@Q}\@DV@Qx\@DV@Qy
 \ifdim\@DV@Sx pt=\z@ pt\relax
 \else
  \ifdim\@DV@Sy pt=\z@ pt\relax
  \else
   \ifdim\@DV@Px pt>\@DV@Qx pt\relax
    \coordinate(\@DV@leftP)at(@DV@Q);
    \coordinate(\@DV@rightP)at(@DV@P);
   \else
    \coordinate(\@DV@leftP)at(@DV@P);
    \coordinate(\@DV@rightP)at(@DV@Q);
   \fi
  \fi
 \fi
 \GetCoordinate{trueleftP}\@DV@Lx\@DV@Ly
 \GetCoordinate{truerightP}\@DV@Rx\@DV@Ry
 \ifdim\@DV@Sx pt=\z@ pt\relax
 \else
  \ifdim\@DV@Sy pt=\z@ pt\relax
  \else
   \ifdim\@DV@Lx pt>\@DV@Rx pt\relax
    \coordinate(@DV@TEMP)at(trueleftP);
    \coordinate(trueleftP)at(truerightP);
    \coordinate(truerightP)at(@DV@TEMP);
   \fi
  \fi
 \fi
 \ifnum\@DVline@flag=\@ne\relax
  \begin{scope}
   \clip(LB)rectangle(RT);
   \ifDVleft
    \ifDVright
     \draw[#2](trueleftP)--(truerightP);
    \else
     \draw[#2](trueleftP)--(#3);
    \fi
   \else
    \ifDVright
     \draw[#2](#3)--(truerightP);
    \fi
   \fi
  \end{scope}
 \fi
}%
%% \Sline<#1>[#2]#3#4#5
%% S(lope)line:1点と傾き指定
%% #1:オプション1
%%   leftP:左端点の名前を指定(leftP)
%%   rightP:右端点の名前を指定(rightP)
%%   noline:直線を描画しない
%%   half:点#3を始点とする半直線にする
%% #2:TikZオプション
%% #3:直線を通る1点を指定
%% #4:この直線の傾きを指定
%% #5:パスの名前
\def\DrawSline{\@ifstar{\def\@DVline@flag{0}\@DrawSline}{\def\@DVline@flag{1}\@DrawSline}}%
\def\@DrawSline{\@ifnextchar<{\@@DrawSline}{\@@DrawSline<>}}%
\def\@@DrawSline<#1>{\@ifnextchar[{\@@@DrawSline<#1>}{\@@@DrawSline<#1>[]}}%
\def\@@@DrawSline<#1>[#2]#3#4#5{%
 \ifnum\@DVline@flag=\z@\relax
  \DrawVline*<#1>[#2]{#3}{1,{#4}}{#5}%
 \else
  \DrawVline<#1>[#2]{#3}{1,{#4}}{#5}%
 \fi
}%
%% \Nline:1点と法線ベクトル指定
%% N(ormalVector)line
%% #1:オプション1
%%   leftP:左端点の名前を指定(leftP)
%%   rightP:右端点の名前を指定(rightP)
%%   noline:直線を描画しない
%%   half:点#3を始点とする半直線にする[方向ベクトルは指定した法線ベクトルを-90度回転させたもの]
%% #2:TikZオプション
%% #3:直線を通る1点を指定
%% #4:法線ベクトルの成分を指定
%% #5:パスの名前
\def\DrawNline{\@ifstar{\def\@DVline@flag{0}\@DrawNline}{\def\@DVline@flag{1}\@DrawNline}}%
\def\@DrawNline{\@ifnextchar<{\@@DrawNline}{\@@DrawNline<>}}%
\def\@@DrawNline<#1>{\@ifnextchar[{\@@@DrawNline<#1>}{\@@@DrawNline<#1>[]}}%
\def\@@@DrawNline<#1>[#2]#3#4#5{%
 \GetCoordinate{#4}\@DN@x\@DN@y
 \ifnum\@DVline@flag=\z@\relax
  \DrawVline*<#1>[#2]{#3}{\@DN@y,{-(\@DN@x)}}{#5}%
 \else
  \DrawVline<#1>[#2]{#3}{\@DN@y,{-(\@DN@x)}}{#5}%
 \fi
}%
%% \Pline<#1>[#2]{#3}{#4}%
%% P(oints)line
%% ex:\Pline{A,B}{line1}%
%% #1:固有オプション
%%   leftP:左端点の名前を指定(leftP)
%%   rightP:右端点の名前を指定(rightP)
%%   noline:直線を描画しない
%%   half:点#3の1番目の点を始点とする半直線にする
%% #2:TikZオプション
%% #3:2つの通過点をカンマ区切りで指定
%% #4:パスの名前
\def\DrawPline{\@ifstar{\def\@DVline@flag{0}\@DrawPline}{\def\@DVline@flag{1}\@DrawPline}}%
\def\@DrawPline{\@ifnextchar<{\@@DrawPline}{\@@DrawPline<>}}%
\def\@@DrawPline<#1>{\@ifnextchar[{\@@@DrawPline<#1>}{\@@@DrawPline<#1>[]}}%
\def\@@@DrawPline<#1>[#2]#3#4{%
 \@DrawPline@Sub<#1>[#2]#3\@nil{#4}%
}%
\def\@DrawPline@Sub<#1>[#2]#3,#4\@nil#5{%
 \coordinate(@DP@V)at($(#4)-(#3)$);
 \GetCoordinate{@DP@V}\@DP@Vx\@DP@Vy
 \ifnum\@DVline@flag=\z@\relax
  \DrawVline*<#1>[#2]{#3}{\@DP@Vx,\@DP@Vy}{#5}%
 \else
  \DrawVline<#1>[#2]{#3}{\@DP@Vx,\@DP@Vy}{#5}%
 \fi
}%
%% \Aline<#1>[#2]#3#4#5
%% A(ngle)line:1点と角度指定
%% #1:オプション1
%%   leftP:左端点の名前を指定(leftP)
%%   rightP:右端点の名前を指定(rightP)
%%   noline:直線を描画しない
%%   half:点#3を始点とする半直線にする
%% #2:TikZオプション
%% #3:直線を通る1点を指定
%% #4:x軸とのなす角度を指定(60分法)
%% #5:パスの名前
\def\DrawAline{\@ifstar{\def\@DVline@flag{0}\@DrawAline}{\def\@DVline@flag{1}\@DrawAline}}%
\def\@DrawAline{\@ifnextchar<{\@@DrawAline}{\@@DrawAline<>}}%
\def\@@DrawAline<#1>{\@ifnextchar[{\@@@DrawAline<#1>}{\@@@DrawAline<#1>[]}}%
\def\@@@DrawAline<#1>[#2]#3#4#5{%
 \ifnum\@DVline@flag=\z@\relax
  \DrawVline*<#1>[#2]{#3}{{cos(#4)},{sin(#4)}}{#5}%
 \else
  \DrawVline<#1>[#2]{#3}{{cos(#4)},{sin(#4)}}{#5}%
 \fi
}%
\let\Vline=\DrawVline
\let\Nline=\DrawNline
\let\Sline=\DrawSline
\let\Pline=\DrawPline
\let\Aline=\DrawAline
%% \GetPoints{#1}{#2}{#3}%
%% #1:path name 1
%% #2:path name 2
%% #3:#1と#2の交点の座標の名称指定
\def\GetPoints#1#2#3{%
 \path[name intersections={of=#1 and #2,by={#3}}];
}%
%% \MakeVector{A(1,1,1);B(1,2,3);C(a,b,c)} で
%% A$\Zahyo{1,1,1}$，B$\Zahyo{1,2,3}$，C$\Zahyo{a,b,c}$を出力する
\def\MakeVector#1{%
 \@MakeVector#1%
}%
\def\@MakeVector#1(#2){%
 #1$\Zahyo{#2}$%
 \@ifnextchar;{，\expandafter\@MakeVector\@gobble}{\@gobble}%
}%
%% \MakeVectors{A[1](1,2,3);B(1,1,1)}で
%% A$_1\Zahyo{1,2,3}$，B$\Zahyo{1,1,1}$と出力する
%% \MakeVector の上位互換
\def\MakeVectors#1{%
 \M@keVectors#1%
}%
\def\M@keVectors#1(#2){%
 \@M@keVectors#1(#2)%
}%
\def\@M@keVectors#1{%
 \@ifnextchar[{\@@M@keVectors{#1}}{\@@M@keVectors{#1}[]}%
}%
\def\@@M@keVectors#1[#2](#3){%
 \def\@tempa{#2}%
 \ifx\@tempa\empty
  #1$\Zahyo{#3}$
 \else
  #1$_{#2}\Zahyo{#3}$
 \fi
 \@ifnextchar;{，\expandafter\M@keVectors\@gobble}{\@gobble}%
}%
\let\MakeVector=\MakeVectors
%% 読み込むPATHの指定
%% ex:元ファイルから 2015/宮城/東北大/後期/理学部1.tex を読み込む場合
%%    \SetPrePath{後期/}%
%%    \SetPath{2015/宮城/東北大/}%
%% と設定すると \PATH が 2015/宮城/東北大/後期/ となり
%% \include{\PATH 理学部1} とすればよい．
%% このことにより \PATH 理学部1.tex が画像を読み込んでいたとしても
%% \includegrapics{\PATH 理学部1-1.pdf} などと設定していれば
%% 元ファイルで \SetPath を適正に行われていれば 理学部1.tex の修正が不要になる
\def\PREPATH{}%
\def\PATH{}%
\def\SetPath#1{%
 \edef\PATH{\PREPATH#1}%
}%
\def\SetPrePath#1{%
 \def\PREPATH{#1}%
}%
%% 囲み枠付きの引用環境 9/23/2015
%\begin{mdframed}[style=outer-quatation]
% \begin{mdframed}[style=inner-quatation]
%  hoge
% \end{mdframed}
%\end{mdframed}
% のようにして利用する
% ※何故か mdframed 環境単体では (left|right)margin が効かないため
\mdfdefinestyle{outer-quatation}{linewidth=0pt,innerleftmargin=4zw,innerrightmargin=4zw,%
               innertopmargin=0pt,innerbottommargin=0pt}%
\mdfdefinestyle{inner-quatation}{linewidth=1pt,innerleftmargin=10pt,innerrightmargin=10pt,%
                innertopmargin=5pt,innerbottommargin=5pt,roundcorner=5pt}%
%% 増減表の矢印
\def\ZogenArrow{\@ifnextchar<{\@ZogenArrow}{\@ZogenArrow<>}}%
\def\@ZogenArrow<#1>{\@ifnextchar[{\@@ZogenArrow<#1>}{\@@ZogenArrow<#1>[]}}%
\def\@@ZogenArrow<#1>[#2](#3,#4){%
 \if#3+\relax
  \if#4+\relax
   \nevarrow
  \else
   \necarrow
  \fi
 \else
  \if#4+\relax
   \sevarrow
  \else
   \secarrow
  \fi
 \fi
}%
%% \teisei<#1>[#2](#3){#4}
%% #1:斜線の方向
%%    backslash(defalt)
%%    slash
%%    horizontal
%%    vertical
%%    cross
%% #2:斜線のオプション
%% #3:node内の#4のオプション
%% #4:斜線を引く対象
\define@key{teisei}{backslash}[true]{\def\@teisei@style{10}}%
\define@key{teisei}{slash}[true]{\def\@teisei@style{0}}%
\define@key{teisei}{horizontal}[true]{\def\@teisei@style{1}}%
\define@key{teisei}{vertical}[true]{\def\@teisei@style{2}}%
\define@key{teisei}{cross}[true]{\def\@teisei@style{3}}%
\NewDocumentCommand\teisei{D<>{}O{}D(){}m}{%
 \def\@teisei@style{10}%
 \setkeys{teisei}{#1}%
 \ifmmode
  \def\@teisei@mmode{1}%
 \else
  \def\@teisei@mmode{0}%
 \fi
 \begin{tikzpicture}[baseline=(@O@.base)]
  \node(@O@)[#3]{\ifnum\@teisei@mmode=\@ne\relax$#4$\else#4\fi};
  \ifcase\@teisei@style
   \draw[red,#2](@O@.south west)--(@O@.north east);
  \or
   \draw[red,#2](@O@.west)--(@O@.east);
  \or
   \draw[red,#2](@O@.north)--(@O@.south);
  \or
   \draw[red,#2](@O@.south west)--(@O@.north east)(@O@.north west)--(@O@.south east);
  \else
   \draw[red,#2](@O@.north west)--(@O@.south east);
  \fi
 \end{tikzpicture}%
}%
%% \Teisei<#1>[#2](#3){#4}[#5](#6){#7} 12/03/2015 訂正文字列の位置を変更できるようにする
%% #1:斜線のオリジナルオプション
%%  backslash(default):右上から左下
%%  slash:右下から左上
%%  horizontal:水平線
%%  vertical:垂直線
%%  cross:backslash & slash
%% #2:斜線に関するTikZオプション(line width,red等)
%% #3:#4に対するTikZオプション
%% #4:斜線を引く対象
%% #5:#7の#4にTikZの位置に関するオプション
%%  north east(default):#4の右上
%%  north west:#4の左上
%%  north:#4の上
%%  south east:#4の右下
%%  south west:#4の左下
%%  south:#4の下
%%  east:#4の右
%%  west:#4の左
%% #6:#7に対するTikZオプション(font等)
%% #7:訂正後の文字列
\NewDocumentCommand\Teisei{D<>{}O{}D(){}mO{north east}D(){}m}{%
 \def\@Teisei@style{10}%
 \setkeys{teisei}{#1}%
 \ifmmode
  \def\@Teisei@mmode{1}%
 \else
  \def\@Teisei@mmode{0}%
 \fi
 \begin{tikzpicture}[baseline=(@O@.base)]
  \node(@O@)[inner sep=0pt,outer sep=2pt,#3]{\ifnum\@Teisei@mmode=\@ne\relax$#4$\else#4\fi};
  \node at(@O@.#5)[inner sep=0pt,font=\scriptsize,#6]{\ifnum\@Teisei@mmode=\@ne\relax$#7$\else#7\fi};
  \ifcase\@Teisei@style
   \draw[black!25,very thin,#2](@O@.south west)--(@O@.north east);
  \or
   \draw[black!25,very thin,#2](@O@.west)--(@O@.east);
  \or
   \draw[black!25,very thin,#2](@O@.north)--(@O@.south);
  \or
   \draw[black!25,very thin,#2](@O@.south west)--(@O@.north east)(@O@.north west)--(@O@.south east);
  \else
   \draw[black!25,very thin,#2](@O@.north west)--(@O@.south east);
  \fi
 \end{tikzpicture}%
}%
%% \ArrayBackSlash<#1>[#2](#3){#4}{#5}
%% #1:original option
%%  baseline ratio:baseline を線分のどの位置にするかの指定
%%                右下から左上方向に全体を1としたときのどの割合にするか(2/7)
%%  ne option:斜線の右上に配置する文字列のオプション
%%            (font=\scriptsize,ne,pos=.5)
%%  sw option:斜線の右上に配置する文字列のオプション
%%            (font=\scriptsize,sw,pos=.5)
%% #2:\tizkのオプション
%%   (inner sep=0pt,,outer sep=0pt,baseline=(@O@),x={(1em,0)},y={(0,1em)},xscale=1.75,yscale=1.75)
%% #3:\drawのオプション
%%   (line cap=round)
%% #4:斜線の右上に配置する文字列
%% #5:斜線の左下に配置する文字列
\define@key{ArrayBackSlash}{baseline ratio}{\def\@array@back@slash@baseline@ratio{#1}}%
\define@key{ArrayBackSlash}{ne option}{\def\@array@back@slash@ne@option{#1}}%
\define@key{ArrayBackSlash}{sw option}{\def\@array@back@slash@sw@option{#1}}%
\NewDocumentCommand\ArrayBackSlash{D<>{}O{}D(){}mm}{%
 \let\@array@back@slash@baseline@ratio=\@empty%
 \def\@array@back@slash@ne@option{}%
 \def\@array@back@slash@sw@option{}%
 \setkeys{ArrayBackSlash}{#1}%
 \ifmmode
  \def\@a@b@s@mmode{1}%
 \else
  \def\@a@b@s@mmode{0}%
 \fi
 \tikz[inner sep=0pt,outer sep=0pt,baseline=(@O@.base),x={(1em,0)},y={(0,1em)},xscale=1.75,yscale=1.75,#2]{%
  \ifx\@array@back@slash@baseline@ratio\@empty
   \node(@O@)at(0,0)[opacity=0]{0};%
  \else
   \node(@O@)at($(.5,-.5)!\@array@back@slash@baseline@ratio!(-.5,.5)$){};%
  \fi
  \begin{scope}
   \clip(-.5,-.5)rectangle(.5,.5);
   \draw[#3](.6,-.6)--(-.6,.6);%
  \end{scope}
  \expandafter\ArrayBackSlash@sub@pos\expandafter{\@array@back@slash@ne@option}%
	{pos=.5,font=\scriptsize,ne}{#4}%
  \expandafter\ArrayBackSlash@sub@pos\expandafter{\@array@back@slash@sw@option}%
	{pos=.5,font=\scriptsize,sw}{#5}%
 }%
}%
%% \draw などのオプションに制御綴が含まれると``color=red オプションは存在しない''
%% というようなエラーが出るため，制御綴を\expandafterで展開してから下請けに任せる
\NewDocumentCommand\ArrayBackSlash@sub@pos{mmm}{%
 \path(.5,-.5)--(-.5,.5)node[#2,#1]{\ifnum\@a@b@s@mmode=\@ne\relax$#3$\else#3\fi};%
}%
%% \Mark 関連の全面改定 12/04/2015
\newwrite\MarkAnswerWrite
\newif\ifMarkCompactMode
\newif\ifMarkVerticalLine
\newcounter{MarkFirst}%
\newcounter{MarkEnd}%
\NewDocumentCommand\MarkBoxReset{s}{%
 \CenterWritetrue
 \resetcounter{MarkFirst}%
 \resetcounter{MarkEnd}%
 \resetcounter{equation}%
 \resetcounter{figure}%
 \resetcounter{table}%
 \IfBooleanF{#1}{% 12/07/2015 アスタリスクによる判定を追加
  \immediate\openout\MarkAnswerWrite\jobname.ans
 }%
}%
\define@key{PutMarkAnswer}{title}{\def\@PMA@title{#1}}%
\define@key{PutMarkAnswer}{title distance}{\def\@PMA@title@distance{#1}}%
\define@key{PutMarkAnswer}{subtitle distance}{\def\@PMA@title@subdistance{#1}}%
\define@key{PutMarkAnswer}{title font}{\def\@PMA@title@font{#1}}%
\def\SetPutMarkAnswerFont#1{\let\@PMA@title@font@defalut=#1\relax}%
\SetPutMarkAnswerFont{\bfseries}%
\def\SetPutMarkAnswerTitleDistance#1{\def\@PMA@title@distance@default{#1}}%
\SetPutMarkAnswerTitleDistance{2.5mm}%
\def\SetPutMarkAnswerSubtitleDistance#1{\def\@PMA@subtitle@distance@default{#1}}%
\SetPutMarkAnswerSubtitleDistance{2.5mm}%
\mdfdefinestyle{PutMarkAnswerStyle}%
   {roundcorner=7.5pt,middlelinewidth=1pt,%
    innertopmargin=3mm,innerbottommargin=3mm}%
\NewDocumentCommand\PutMarkAnswer{D<>{}O{}m}{%
 \def\@PMA@title{解　答}%
 \let\@PMA@title@distance=\@PMA@title@distance@default\relax
 \let\@PMA@subtitle@distance=\@PMA@subtitle@distance@default\relax
 \let\@PMA@title@font=\@PMA@title@font@defalut\relax
 \setkeys{PutMarkAnswer}{#1}%
 \immediate\closeout\MarkAnswerWrite
 \begin{mdframed}%
  [style=PutMarkAnswerStyle,#2,%
   singleextra={\node[fill=white]at(P|-O)[w=\@PMA@subtitle@distance]{#3};%
                \node[font=\@PMA@title@font,fill=white]at(P-|O)[e=\@PMA@title@distance]{\@PMA@title};},%
   firstextra={\node[fill=white]at(P|-O)[w=\@PMA@subtitle@distance]{#3};%
                \node[font=\@PMA@title@font,fill=white]at(P-|O)[e=\@PMA@title@distance]{\@PMA@title};},%
  ]
  \input{\jobname.ans}%
 \end{mdframed}
 \CenterWritefalse
}%
\tikzset{MarkNode/.style={font=\bfseries},MarkLine/.style={very thick}}%
\tikzset{MarkCompactNode/.style={font=\mdseries},MarkCompactLine/.style={thin},%
         MarkCompactDash/.style={dash pattern=on1.5pt off1.5pt}}%
\tikzset{RefMarkNode/.style={font=\mdseries},RefMarkLine/.style={thin}}%
% 数式環境でのカウンターの制御 12/07/2015
\def\StartCenter{\setcounter{MarkEnd}{\TempMarkEnd}\CenterWritetrue}%
\def\StopCenter{\edef\TempMarkEnd{\theMarkEnd}\CenterWritefalse}%
\def\MarkBoxChar#1{\let\MarkBoxMoji=#1\relax}% 12/18/2015 新設
\MarkBoxChar{\アイウ}%
\NewDocumentCommand\MarkBox{sooD<>{}D(){}m}{% 12/09/2015 auxへの書き出し部分を修正
 \IfBooleanT{#1}{\scriptsize\zw=1zw\relax}%
 \setcounter{MarkFirst}{\numexpr\c@MarkEnd+1}%
 \def\@Mark@Strings{}%
 \def\@Mark@Array{"x"}%
 \expandafter\@tfor\expandafter\member\expandafter:\expandafter=#6\do{%
  \stepcounter{MarkEnd}%
  \edef\@Mark@Strings{\@Mark@Strings\MarkBoxMoji{MarkEnd}}%
  \edef\@Mark@Array{\@Mark@Array,"\MarkBoxMoji{MarkEnd}"}%
 }%
 \expandafter\def\expandafter\@Mark@Array\expandafter{\expandafter{\@Mark@Array}}%
 \ifmeasuring@\else
  \ifCenterWrite
   \immediate\write\MarkAnswerWrite{%
    $\string\boldsymbol{\string\text{\string\textbf{\@Mark@Strings}}=#6}$\string\hspace{\string\CenterSkip}
   }%
   \IfValueT{#2}{%
    \@ifundefined{Hy@Message}{%
     \immediate\write\@auxout{\string\newlabel{mark:#2}{{\@Mark@Strings}{\thepage}}}%
    }{%
     \immediate\write\@auxout{\string\newlabel{mark:#2}{{\@Mark@Strings}{\thepage}{}{}{}}}%
    }%
   }%
   \IfValueT{#3}{%
    \def\@Mark@RefName@Array{"x"}%
    \@for\member:=#3\do{%
     \edef\@Mark@RefName@Array{\@Mark@RefName@Array,"\member"}%
    }%
    \expandafter\def\expandafter\@Mark@RefName@Array\expandafter{\expandafter{\@Mark@RefName@Array}}%
    \@ifundefined{Hy@Message}{%
     \foreach[count=\C]\N in {\c@MarkFirst,...,\c@MarkEnd}{%
      \pgfmathparse{array(\@Mark@RefName@Array,\C)}%
      \let\@refname\pgfmathresult
      \pgfmathparse{array(\@Mark@Array,\C)}%
      \let\@refstring\pgfmathresult
      \immediate\write\@auxout{\string\newlabel{mark:\@refname}{{\@refstring}{\thepage}}}%
     }%
    }{%
     \foreach[count=\C]\N in {\c@MarkFirst,...,\c@MarkEnd}{%
      \pgfmathparse{array(\@Mark@RefName@Array,\C)}%
      \let\@refname\pgfmathresult
      \pgfmathparse{array(\@Mark@Array,\C)}%
      \let\@refstring\pgfmathresult
      \immediate\write\@auxout{\string\newlabel{mark:\@refname}{{\@refstring}{\thepage}{}{}{}}}%
     }%
    }%
   }%
  \fi
 \fi
 \leavevmode
 \hbox{%
  \ifMarkCompactMode
  \else
   \kern1pt
  \fi
  \IfBooleanT{#1}{\vrule width0pt depth.75zh}%
  \tikz[x={(1\zw,0)},y={(0,1\zw)},baseline=(@O@.base)]{%
   \node[white](@O@)at(.5,.5){あ};
   \ifMarkCompactMode
    \foreach[count=\C]\N in {\c@MarkFirst,...,\c@MarkEnd}{%
     \pgfmathparse{array(\@Mark@Array,\C)}%
     \let\@mark@string=\pgfmathresult
     \node[MarkCompactNode,#4]at(\C-.5,.5){\@mark@string};
     \ifnum\C=\@ne\relax
     \else
      \ifMarkVerticalLine
       \draw[MarkCompactDash,#5](\C-1,0)--(\C-1,1);
      \fi
     \fi
    }%
    \draw[MarkCompactLine,#5](0,0)rectangle(\C,1);
   \else
    \IfBooleanTF{#1}{%
     \node[draw,MarkNode,MarkLine,#4](@O@){\@Mark@Strings};
    }{%
     \ifnum\numexpr\c@MarkEnd-\c@MarkFirst>\@ne\relax
      \foreach[count=\C]\N in {\c@MarkFirst,...,\c@MarkEnd}{%
       \pgfmathparse{array(\@Mark@Array,\C)}%
       \let\@mark@string=\pgfmathresult
       \node[MarkNode,#4]at(\C-.5,.5){\@mark@string};
      }%
      \draw[MarkLine,#5](-.25,-.5)rectangle(\C+.25,1.5);
     \else
      \node[MarkNode,#4]at(1.5,.5){\@Mark@Strings};
      \draw[MarkLine,#5](-.25,-.5)rectangle(3.25,1.5);
     \fi
    }%
   \fi
  }%
  \ifMarkCompactMode
  \else
   \kern1pt
  \fi
 }%
}%
\NewDocumentCommand\RefMark{s D<>{}D(){}m}{%
 \@ifundefined{r@mark:#4}{%
  \leavevmode
  \hbox{%
   \kern1pt\relax
   \tikz[x={(1\zw,0)},y={(0,1\zw)},baseline=(@O@.base)]{%
    \node[red,draw,text width=3\zw,align=center](@O@){??};
   }%
   \kern1pt\relax
  }%
 }{%
  \edef\@temp@string{\csname r@mark:#4\endcsname}%
  \edef\@temp@string{\expandafter\@firstoftwo\@temp@string}%
  {%
   \c@tempcnta=\z@\relax
   \def\@Ref@Mark@Array{"x"}%
   \expandafter\@tfor\expandafter\member\expandafter:\expandafter=\@temp@string\do{%
    \ifx\member\@empty
    \else
     \edef\@Ref@Mark@Array{\@Ref@Mark@Array,"\member"}%
     \advance\c@tempcnta by\@ne\relax
    \fi
   }%
   \expandafter\def\expandafter\@Ref@Mark@Array\expandafter{\expandafter{\@Ref@Mark@Array}}%
   \edef\@RefMarkNum{\the\c@tempcnta}%
   \leavevmode
   \hbox{%
    \ifMarkCompactMode
    \else
     \kern1pt\relax
    \fi
    \IfBooleanT{#1}{\vrule width0pt depth.75zh\scriptsize\zw=1zw\relax}%
    \tikz[x={(1\zw,0)},y={(0,1\zw)},baseline=(@O@.base)]{%
     \ifMarkCompactMode
      \foreach\N in {1,...,\@RefMarkNum}{%
       \pgfmathparse{array(\@Ref@Mark@Array,\N)}%
       \let\@refmark@string=\pgfmathresult
       \ifx\@refmark@string\@empty
       \else
        \node[MarkCompactNode,#2]at(\N-.5,.5){\@refmark@string};
       \fi
       \ifMarkVerticalLine
        \ifnum\N=\@ne\relax
        \else
         \draw[MarkCompactDash,#3](\N-1,0)--(\N-1,1);
        \fi
       \fi
      }%
      \draw[MarkCompactLine,#3](0,0)rectangle(\@RefMarkNum,1);
     \else
     \IfBooleanTF{#1}{%
      \node[draw,RefMarkNode,RefMarkLine,#2](@O@){\@temp@string};
     }{%
      \node[white](@O@)at(.5,.5){あ};
      \ifnum\@RefMarkNum>\tw@\relax
       \foreach\N in {1,...,\@RefMarkNum}{%
        \pgfmathparse{array(\@Ref@Mark@Array,\N)}%
        \let\@refmark@string=\pgfmathresult
        \ifx\@refmark@string\@empty
        \else
         \node[RefMarkNode,#2]at(\N-.5,.5){\@refmark@string};
        \fi
       }%
       \draw[RefMarkLine,#3](-.25,-.5)rectangle(\@RefMarkNum+.25,1.5);
      \else
       \node[RefMarkNode,#2]at(1.5,.5){\@temp@string};
       \draw[RefMarkLine,#3](-.25,-.5)rectangle(3.25,1.5);
      \fi
     }%
     \fi
    }%
    \ifMarkCompactMode
    \else
     \kern1pt\relax
    \fi
   }%
  }%
 }%
}%
\let\Mark=\MarkBox
%\let\refMark=\RefMarkBox
\let\refMark=\RefMark
\let\MarkReset=\MarkBoxReset
\let\MarkAnswer=\PutMarkAnswer
%%何ものかがペナルティを書き換えている
\prebreakpenalty`，=10000
\prebreakpenalty`．=10000
\postbreakpenalty`「=10000
\prebreakpenalty`」=10000
